// $ANTLR 3.3 Nov 30, 2010 12:45:30 /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g 2011-03-11 20:36:21
 package org.carbonfx.valaproject.antlr; 

import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.tree.*;

public class ValaParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "UNKNOWN_CHAIN", "KW_USING", "COMMA", "SEMICOLON", "DOT", "GLOBAL_NS", "IDENTIFIER", "LBRACKET", "RBRACKET", "LPAREN", "RPAREN", "ASSIGNMENT", "INCR_ASSIGN", "DECR_ASSIGN", "OR_ASSIGN", "AND_ASSIGN", "XOR_ASSIGN", "DIV_ASSIGN", "MUL_ASSIGN", "MOD_ASSIGN", "SHL_ASSIGN", "SHR_ASSIGN", "QUESTION", "COLON", "COALESCE", "BOOL_OR", "BOOL_AND", "KW_IN", "OR", "XOR", "AND", "EQUAL", "NOT_EQUAL", "LT", "GT", "LTEQ", "GTEQ", "KW_IS", "KW_AS", "KW_VOID", "MULTIPLY", "KW_DYNAMIC", "KW_OWNED", "KW_UNOWNED", "KW_WEAK", "SHIFT_LEFT", "PLUS", "MINUS", "DIV", "MOD", "NOT", "BITWISE_NOT", "INCREMENT", "DECREMENT", "KW_CONSTRUCT", "KW_SET", "KW_GET", "KW_TRUE", "KW_FALSE", "KW_NULL", "KW_NEW", "KW_YIELD", "KW_SIZEOF", "KW_TYPEOF", "KW_ASYNC", "KW_CLASS", "KW_STRUCT", "KW_EXTERN", "KW_INLINE", "KW_STATIC", "KW_ABSTRACT", "KW_VIRTUAL", "KW_OVERRIDE", "KW_PRIVATE", "KW_PROTECTED", "KW_PUBLIC", "KW_INTERNAL", "KW_ENUM", "KW_ERRORDOMAIN", "KW_INTERFACE", "KW_NAMESPACE", "KW_OUT", "KW_REF", "KW_PARAMS", "KW_TRY", "KW_CATCH", "KW_FINALLY", "KW_LOCK", "KW_DELETE", "KW_FOREACH", "KW_CONTINUE", "KW_RETURN", "KW_BREAK", "KW_VAR", "KW_THROW", "KW_SIGNAL", "KW_REQUIRES", "POINTER_ACCESS", "INTEGER", "REAL", "STRING", "HEX", "CHAR", "REGEX_LITERAL", "VERBATIM_LITERAL", "LCURL", "RCURL", "TEMPLATE_START", "QUOT", "KW_THIS", "KW_BASE", "LAMBDA", "KW_THROWS", "ELIPSIS", "KW_ENSURES", "KW_DELEGATE", "KW_CONST", "KW_DEFAULT", "KW_IF", "KW_ELSE", "KW_SWITCH", "KW_CASE", "KW_WHILE", "KW_DO", "KW_FOR", "WHITESPACE", "COMMENT_JAVADOC", "COMMENT", "LINE_COMMENT", "HEXDIGIT", "ESCAPE", "BACKSLASH", "RANGE", "DIGITS", "EXPONENT", "LINE_COMMAND", "UNICODE", "OCTAL", "UNICODE_CHAR", "OTHER_CHAR"
    };
    public static final int EOF=-1;
    public static final int UNKNOWN_CHAIN=4;
    public static final int KW_USING=5;
    public static final int COMMA=6;
    public static final int SEMICOLON=7;
    public static final int DOT=8;
    public static final int GLOBAL_NS=9;
    public static final int IDENTIFIER=10;
    public static final int LBRACKET=11;
    public static final int RBRACKET=12;
    public static final int LPAREN=13;
    public static final int RPAREN=14;
    public static final int ASSIGNMENT=15;
    public static final int INCR_ASSIGN=16;
    public static final int DECR_ASSIGN=17;
    public static final int OR_ASSIGN=18;
    public static final int AND_ASSIGN=19;
    public static final int XOR_ASSIGN=20;
    public static final int DIV_ASSIGN=21;
    public static final int MUL_ASSIGN=22;
    public static final int MOD_ASSIGN=23;
    public static final int SHL_ASSIGN=24;
    public static final int SHR_ASSIGN=25;
    public static final int QUESTION=26;
    public static final int COLON=27;
    public static final int COALESCE=28;
    public static final int BOOL_OR=29;
    public static final int BOOL_AND=30;
    public static final int KW_IN=31;
    public static final int OR=32;
    public static final int XOR=33;
    public static final int AND=34;
    public static final int EQUAL=35;
    public static final int NOT_EQUAL=36;
    public static final int LT=37;
    public static final int GT=38;
    public static final int LTEQ=39;
    public static final int GTEQ=40;
    public static final int KW_IS=41;
    public static final int KW_AS=42;
    public static final int KW_VOID=43;
    public static final int MULTIPLY=44;
    public static final int KW_DYNAMIC=45;
    public static final int KW_OWNED=46;
    public static final int KW_UNOWNED=47;
    public static final int KW_WEAK=48;
    public static final int SHIFT_LEFT=49;
    public static final int PLUS=50;
    public static final int MINUS=51;
    public static final int DIV=52;
    public static final int MOD=53;
    public static final int NOT=54;
    public static final int BITWISE_NOT=55;
    public static final int INCREMENT=56;
    public static final int DECREMENT=57;
    public static final int KW_CONSTRUCT=58;
    public static final int KW_SET=59;
    public static final int KW_GET=60;
    public static final int KW_TRUE=61;
    public static final int KW_FALSE=62;
    public static final int KW_NULL=63;
    public static final int KW_NEW=64;
    public static final int KW_YIELD=65;
    public static final int KW_SIZEOF=66;
    public static final int KW_TYPEOF=67;
    public static final int KW_ASYNC=68;
    public static final int KW_CLASS=69;
    public static final int KW_STRUCT=70;
    public static final int KW_EXTERN=71;
    public static final int KW_INLINE=72;
    public static final int KW_STATIC=73;
    public static final int KW_ABSTRACT=74;
    public static final int KW_VIRTUAL=75;
    public static final int KW_OVERRIDE=76;
    public static final int KW_PRIVATE=77;
    public static final int KW_PROTECTED=78;
    public static final int KW_PUBLIC=79;
    public static final int KW_INTERNAL=80;
    public static final int KW_ENUM=81;
    public static final int KW_ERRORDOMAIN=82;
    public static final int KW_INTERFACE=83;
    public static final int KW_NAMESPACE=84;
    public static final int KW_OUT=85;
    public static final int KW_REF=86;
    public static final int KW_PARAMS=87;
    public static final int KW_TRY=88;
    public static final int KW_CATCH=89;
    public static final int KW_FINALLY=90;
    public static final int KW_LOCK=91;
    public static final int KW_DELETE=92;
    public static final int KW_FOREACH=93;
    public static final int KW_CONTINUE=94;
    public static final int KW_RETURN=95;
    public static final int KW_BREAK=96;
    public static final int KW_VAR=97;
    public static final int KW_THROW=98;
    public static final int KW_SIGNAL=99;
    public static final int KW_REQUIRES=100;
    public static final int POINTER_ACCESS=101;
    public static final int INTEGER=102;
    public static final int REAL=103;
    public static final int STRING=104;
    public static final int HEX=105;
    public static final int CHAR=106;
    public static final int REGEX_LITERAL=107;
    public static final int VERBATIM_LITERAL=108;
    public static final int LCURL=109;
    public static final int RCURL=110;
    public static final int TEMPLATE_START=111;
    public static final int QUOT=112;
    public static final int KW_THIS=113;
    public static final int KW_BASE=114;
    public static final int LAMBDA=115;
    public static final int KW_THROWS=116;
    public static final int ELIPSIS=117;
    public static final int KW_ENSURES=118;
    public static final int KW_DELEGATE=119;
    public static final int KW_CONST=120;
    public static final int KW_DEFAULT=121;
    public static final int KW_IF=122;
    public static final int KW_ELSE=123;
    public static final int KW_SWITCH=124;
    public static final int KW_CASE=125;
    public static final int KW_WHILE=126;
    public static final int KW_DO=127;
    public static final int KW_FOR=128;
    public static final int WHITESPACE=129;
    public static final int COMMENT_JAVADOC=130;
    public static final int COMMENT=131;
    public static final int LINE_COMMENT=132;
    public static final int HEXDIGIT=133;
    public static final int ESCAPE=134;
    public static final int BACKSLASH=135;
    public static final int RANGE=136;
    public static final int DIGITS=137;
    public static final int EXPONENT=138;
    public static final int LINE_COMMAND=139;
    public static final int UNICODE=140;
    public static final int OCTAL=141;
    public static final int UNICODE_CHAR=142;
    public static final int OTHER_CHAR=143;

    // delegates
    // delegators


        public ValaParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public ValaParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[571+1];
             
             
        }
        
    protected TreeAdaptor adaptor = new CommonTreeAdaptor();

    public void setTreeAdaptor(TreeAdaptor adaptor) {
        this.adaptor = adaptor;
    }
    public TreeAdaptor getTreeAdaptor() {
        return adaptor;
    }

    public String[] getTokenNames() { return ValaParser.tokenNames; }
    public String getGrammarFileName() { return "/home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g"; }


    	public List<SyntaxError> syntaxErrors = new ArrayList<SyntaxError>();
    	private java.util.regex.Pattern msgPattern = java.util.regex.Pattern.compile(".*missing KW_([A-Z]*) at (.*)");

    	@Override
    	public String getErrorMessage(RecognitionException e, String[] tokenNames) {
    		String message = super.getErrorMessage(e, tokenNames);
    		SyntaxError syntaxError = new SyntaxError();
    		syntaxError.exception = e;
    		
    		java.util.regex.Matcher m = msgPattern.matcher(message);
    		if (m.matches()) {
    			message = "'"+m.group(1).toLowerCase() + "' expected at " + m.group(2);
    		}
    		
    		syntaxError.message = message;
    		syntaxErrors.add(syntaxError);
    		return message;
    	}

    	public static class SyntaxError {
    		public RecognitionException exception;
    		public String message;
    		public int line;
    		public int charPositionInLine;
    	}


    public static class compilation_unit_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "compilation_unit"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:43:1: compilation_unit : ( using_directive )* ( namespace_member )* ;
    public final ValaParser.compilation_unit_return compilation_unit() throws RecognitionException {
        ValaParser.compilation_unit_return retval = new ValaParser.compilation_unit_return();
        retval.start = input.LT(1);
        int compilation_unit_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.using_directive_return using_directive1 = null;

        ValaParser.namespace_member_return namespace_member2 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:44:2: ( ( using_directive )* ( namespace_member )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:45:2: ( using_directive )* ( namespace_member )*
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:45:2: ( using_directive )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==KW_USING) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:45:3: using_directive
            	    {
            	    pushFollow(FOLLOW_using_directive_in_compilation_unit90);
            	    using_directive1=using_directive();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, using_directive1.getTree());

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:46:2: ( namespace_member )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( ((LA2_0>=GLOBAL_NS && LA2_0<=LBRACKET)||LA2_0==KW_VOID||(LA2_0>=KW_DYNAMIC && LA2_0<=KW_WEAK)||LA2_0==KW_NEW||(LA2_0>=KW_ASYNC && LA2_0<=KW_NAMESPACE)||(LA2_0>=KW_DELEGATE && LA2_0<=KW_CONST)) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:46:3: namespace_member
            	    {
            	    pushFollow(FOLLOW_namespace_member_in_compilation_unit96);
            	    namespace_member2=namespace_member();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_member2.getTree());

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, compilation_unit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "compilation_unit"

    public static class using_directive_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "using_directive"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:48:1: using_directive : KW_USING symbol ( COMMA symbol )* SEMICOLON ;
    public final ValaParser.using_directive_return using_directive() throws RecognitionException {
        ValaParser.using_directive_return retval = new ValaParser.using_directive_return();
        retval.start = input.LT(1);
        int using_directive_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_USING3=null;
        Token COMMA5=null;
        Token SEMICOLON7=null;
        ValaParser.symbol_return symbol4 = null;

        ValaParser.symbol_return symbol6 = null;


        CommonTree KW_USING3_tree=null;
        CommonTree COMMA5_tree=null;
        CommonTree SEMICOLON7_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:49:2: ( KW_USING symbol ( COMMA symbol )* SEMICOLON )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:50:2: KW_USING symbol ( COMMA symbol )* SEMICOLON
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_USING3=(Token)match(input,KW_USING,FOLLOW_KW_USING_in_using_directive110); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_USING3_tree = (CommonTree)adaptor.create(KW_USING3);
            adaptor.addChild(root_0, KW_USING3_tree);
            }
            pushFollow(FOLLOW_symbol_in_using_directive113);
            symbol4=symbol();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, symbol4.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:52:2: ( COMMA symbol )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==COMMA) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:53:3: COMMA symbol
            	    {
            	    COMMA5=(Token)match(input,COMMA,FOLLOW_COMMA_in_using_directive121); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA5_tree = (CommonTree)adaptor.create(COMMA5);
            	    adaptor.addChild(root_0, COMMA5_tree);
            	    }
            	    pushFollow(FOLLOW_symbol_in_using_directive126);
            	    symbol6=symbol();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, symbol6.getTree());

            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            SEMICOLON7=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_using_directive134); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON7_tree = (CommonTree)adaptor.create(SEMICOLON7);
            adaptor.addChild(root_0, SEMICOLON7_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, using_directive_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "using_directive"

    public static class symbol_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "symbol"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:58:1: symbol : symbol_part ( DOT symbol_part )* ;
    public final ValaParser.symbol_return symbol() throws RecognitionException {
        ValaParser.symbol_return retval = new ValaParser.symbol_return();
        retval.start = input.LT(1);
        int symbol_StartIndex = input.index();
        CommonTree root_0 = null;

        Token DOT9=null;
        ValaParser.symbol_part_return symbol_part8 = null;

        ValaParser.symbol_part_return symbol_part10 = null;


        CommonTree DOT9_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:59:2: ( symbol_part ( DOT symbol_part )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:60:2: symbol_part ( DOT symbol_part )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_symbol_part_in_symbol145);
            symbol_part8=symbol_part();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, symbol_part8.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:61:2: ( DOT symbol_part )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==DOT) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:62:3: DOT symbol_part
            	    {
            	    DOT9=(Token)match(input,DOT,FOLLOW_DOT_in_symbol153); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    DOT9_tree = (CommonTree)adaptor.create(DOT9);
            	    adaptor.addChild(root_0, DOT9_tree);
            	    }
            	    pushFollow(FOLLOW_symbol_part_in_symbol157);
            	    symbol_part10=symbol_part();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, symbol_part10.getTree());

            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, symbol_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "symbol"

    public static class symbol_part_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "symbol_part"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:66:1: symbol_part : ( ( GLOBAL_NS IDENTIFIER ) | IDENTIFIER );
    public final ValaParser.symbol_part_return symbol_part() throws RecognitionException {
        ValaParser.symbol_part_return retval = new ValaParser.symbol_part_return();
        retval.start = input.LT(1);
        int symbol_part_StartIndex = input.index();
        CommonTree root_0 = null;

        Token GLOBAL_NS11=null;
        Token IDENTIFIER12=null;
        Token IDENTIFIER13=null;

        CommonTree GLOBAL_NS11_tree=null;
        CommonTree IDENTIFIER12_tree=null;
        CommonTree IDENTIFIER13_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:67:2: ( ( GLOBAL_NS IDENTIFIER ) | IDENTIFIER )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==GLOBAL_NS) ) {
                alt5=1;
            }
            else if ( (LA5_0==IDENTIFIER) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:68:2: ( GLOBAL_NS IDENTIFIER )
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:68:2: ( GLOBAL_NS IDENTIFIER )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:68:4: GLOBAL_NS IDENTIFIER
                    {
                    GLOBAL_NS11=(Token)match(input,GLOBAL_NS,FOLLOW_GLOBAL_NS_in_symbol_part175); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    GLOBAL_NS11_tree = (CommonTree)adaptor.create(GLOBAL_NS11);
                    adaptor.addChild(root_0, GLOBAL_NS11_tree);
                    }
                    IDENTIFIER12=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_symbol_part177); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER12_tree = (CommonTree)adaptor.create(IDENTIFIER12);
                    adaptor.addChild(root_0, IDENTIFIER12_tree);
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:69:4: IDENTIFIER
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    IDENTIFIER13=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_symbol_part185); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER13_tree = (CommonTree)adaptor.create(IDENTIFIER13);
                    adaptor.addChild(root_0, IDENTIFIER13_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, symbol_part_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "symbol_part"

    public static class namespace_member_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "namespace_member"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:71:1: namespace_member : ( attributes )? ( namespace_declaration | class_declaration | interface_declaration | struct_declaration | enum_declaration | errordomain_declaration | method_declaration | delegate_declaration | constant_declaration | field_declaration ) ;
    public final ValaParser.namespace_member_return namespace_member() throws RecognitionException {
        ValaParser.namespace_member_return retval = new ValaParser.namespace_member_return();
        retval.start = input.LT(1);
        int namespace_member_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.attributes_return attributes14 = null;

        ValaParser.namespace_declaration_return namespace_declaration15 = null;

        ValaParser.class_declaration_return class_declaration16 = null;

        ValaParser.interface_declaration_return interface_declaration17 = null;

        ValaParser.struct_declaration_return struct_declaration18 = null;

        ValaParser.enum_declaration_return enum_declaration19 = null;

        ValaParser.errordomain_declaration_return errordomain_declaration20 = null;

        ValaParser.method_declaration_return method_declaration21 = null;

        ValaParser.delegate_declaration_return delegate_declaration22 = null;

        ValaParser.constant_declaration_return constant_declaration23 = null;

        ValaParser.field_declaration_return field_declaration24 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:72:2: ( ( attributes )? ( namespace_declaration | class_declaration | interface_declaration | struct_declaration | enum_declaration | errordomain_declaration | method_declaration | delegate_declaration | constant_declaration | field_declaration ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:73:2: ( attributes )? ( namespace_declaration | class_declaration | interface_declaration | struct_declaration | enum_declaration | errordomain_declaration | method_declaration | delegate_declaration | constant_declaration | field_declaration )
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:73:2: ( attributes )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==LBRACKET) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:73:3: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_namespace_member197);
                    attributes14=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes14.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:74:2: ( namespace_declaration | class_declaration | interface_declaration | struct_declaration | enum_declaration | errordomain_declaration | method_declaration | delegate_declaration | constant_declaration | field_declaration )
            int alt7=10;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:74:4: namespace_declaration
                    {
                    pushFollow(FOLLOW_namespace_declaration_in_namespace_member204);
                    namespace_declaration15=namespace_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_declaration15.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:75:4: class_declaration
                    {
                    pushFollow(FOLLOW_class_declaration_in_namespace_member209);
                    class_declaration16=class_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration16.getTree());

                    }
                    break;
                case 3 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:76:4: interface_declaration
                    {
                    pushFollow(FOLLOW_interface_declaration_in_namespace_member215);
                    interface_declaration17=interface_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration17.getTree());

                    }
                    break;
                case 4 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:77:4: struct_declaration
                    {
                    pushFollow(FOLLOW_struct_declaration_in_namespace_member221);
                    struct_declaration18=struct_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration18.getTree());

                    }
                    break;
                case 5 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:78:4: enum_declaration
                    {
                    pushFollow(FOLLOW_enum_declaration_in_namespace_member227);
                    enum_declaration19=enum_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_declaration19.getTree());

                    }
                    break;
                case 6 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:79:4: errordomain_declaration
                    {
                    pushFollow(FOLLOW_errordomain_declaration_in_namespace_member233);
                    errordomain_declaration20=errordomain_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, errordomain_declaration20.getTree());

                    }
                    break;
                case 7 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:80:4: method_declaration
                    {
                    pushFollow(FOLLOW_method_declaration_in_namespace_member239);
                    method_declaration21=method_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration21.getTree());

                    }
                    break;
                case 8 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:81:4: delegate_declaration
                    {
                    pushFollow(FOLLOW_delegate_declaration_in_namespace_member245);
                    delegate_declaration22=delegate_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration22.getTree());

                    }
                    break;
                case 9 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:82:4: constant_declaration
                    {
                    pushFollow(FOLLOW_constant_declaration_in_namespace_member251);
                    constant_declaration23=constant_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declaration23.getTree());

                    }
                    break;
                case 10 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:83:4: field_declaration
                    {
                    pushFollow(FOLLOW_field_declaration_in_namespace_member257);
                    field_declaration24=field_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, field_declaration24.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, namespace_member_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "namespace_member"

    public static class attributes_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "attributes"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:85:1: attributes : ( attribute )+ ;
    public final ValaParser.attributes_return attributes() throws RecognitionException {
        ValaParser.attributes_return retval = new ValaParser.attributes_return();
        retval.start = input.LT(1);
        int attributes_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.attribute_return attribute25 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:86:2: ( ( attribute )+ )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:86:4: ( attribute )+
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:86:4: ( attribute )+
            int cnt8=0;
            loop8:
            do {
                int alt8=2;
                int LA8_0 = input.LA(1);

                if ( (LA8_0==LBRACKET) ) {
                    alt8=1;
                }


                switch (alt8) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:86:5: attribute
            	    {
            	    pushFollow(FOLLOW_attribute_in_attributes269);
            	    attribute25=attribute();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute25.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt8 >= 1 ) break loop8;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(8, input);
                        throw eee;
                }
                cnt8++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, attributes_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "attributes"

    public static class attribute_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "attribute"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:89:1: attribute : LBRACKET identifier ( attribute_arguments )? RBRACKET ;
    public final ValaParser.attribute_return attribute() throws RecognitionException {
        ValaParser.attribute_return retval = new ValaParser.attribute_return();
        retval.start = input.LT(1);
        int attribute_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LBRACKET26=null;
        Token RBRACKET29=null;
        ValaParser.identifier_return identifier27 = null;

        ValaParser.attribute_arguments_return attribute_arguments28 = null;


        CommonTree LBRACKET26_tree=null;
        CommonTree RBRACKET29_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:90:2: ( LBRACKET identifier ( attribute_arguments )? RBRACKET )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:91:2: LBRACKET identifier ( attribute_arguments )? RBRACKET
            {
            root_0 = (CommonTree)adaptor.nil();

            LBRACKET26=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_attribute285); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LBRACKET26_tree = (CommonTree)adaptor.create(LBRACKET26);
            adaptor.addChild(root_0, LBRACKET26_tree);
            }
            pushFollow(FOLLOW_identifier_in_attribute288);
            identifier27=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier27.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:93:2: ( attribute_arguments )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==LPAREN) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:93:3: attribute_arguments
                    {
                    pushFollow(FOLLOW_attribute_arguments_in_attribute292);
                    attribute_arguments28=attribute_arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_arguments28.getTree());

                    }
                    break;

            }

            RBRACKET29=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_attribute297); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RBRACKET29_tree = (CommonTree)adaptor.create(RBRACKET29);
            adaptor.addChild(root_0, RBRACKET29_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, attribute_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "attribute"

    public static class attribute_arguments_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "attribute_arguments"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:96:1: attribute_arguments : LPAREN ( attribute_argument ( COMMA attribute_argument )* )? RPAREN ;
    public final ValaParser.attribute_arguments_return attribute_arguments() throws RecognitionException {
        ValaParser.attribute_arguments_return retval = new ValaParser.attribute_arguments_return();
        retval.start = input.LT(1);
        int attribute_arguments_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LPAREN30=null;
        Token COMMA32=null;
        Token RPAREN34=null;
        ValaParser.attribute_argument_return attribute_argument31 = null;

        ValaParser.attribute_argument_return attribute_argument33 = null;


        CommonTree LPAREN30_tree=null;
        CommonTree COMMA32_tree=null;
        CommonTree RPAREN34_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:97:2: ( LPAREN ( attribute_argument ( COMMA attribute_argument )* )? RPAREN )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:98:2: LPAREN ( attribute_argument ( COMMA attribute_argument )* )? RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            LPAREN30=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_attribute_arguments307); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN30_tree = (CommonTree)adaptor.create(LPAREN30);
            adaptor.addChild(root_0, LPAREN30_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:99:2: ( attribute_argument ( COMMA attribute_argument )* )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==KW_USING||LA11_0==IDENTIFIER||LA11_0==KW_IN||(LA11_0>=KW_IS && LA11_0<=KW_VOID)||(LA11_0>=KW_DYNAMIC && LA11_0<=KW_WEAK)||(LA11_0>=KW_CONSTRUCT && LA11_0<=KW_REQUIRES)) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:99:3: attribute_argument ( COMMA attribute_argument )*
                    {
                    pushFollow(FOLLOW_attribute_argument_in_attribute_arguments312);
                    attribute_argument31=attribute_argument();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_argument31.getTree());
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:99:22: ( COMMA attribute_argument )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==COMMA) ) {
                            alt10=1;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:99:23: COMMA attribute_argument
                    	    {
                    	    COMMA32=(Token)match(input,COMMA,FOLLOW_COMMA_in_attribute_arguments315); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    COMMA32_tree = (CommonTree)adaptor.create(COMMA32);
                    	    adaptor.addChild(root_0, COMMA32_tree);
                    	    }
                    	    pushFollow(FOLLOW_attribute_argument_in_attribute_arguments317);
                    	    attribute_argument33=attribute_argument();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_argument33.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);


                    }
                    break;

            }

            RPAREN34=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_attribute_arguments324); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN34_tree = (CommonTree)adaptor.create(RPAREN34);
            adaptor.addChild(root_0, RPAREN34_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, attribute_arguments_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "attribute_arguments"

    public static class attribute_argument_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "attribute_argument"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:102:1: attribute_argument : identifier ASSIGNMENT expression ;
    public final ValaParser.attribute_argument_return attribute_argument() throws RecognitionException {
        ValaParser.attribute_argument_return retval = new ValaParser.attribute_argument_return();
        retval.start = input.LT(1);
        int attribute_argument_StartIndex = input.index();
        CommonTree root_0 = null;

        Token ASSIGNMENT36=null;
        ValaParser.identifier_return identifier35 = null;

        ValaParser.expression_return expression37 = null;


        CommonTree ASSIGNMENT36_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:103:2: ( identifier ASSIGNMENT expression )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:103:4: identifier ASSIGNMENT expression
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_attribute_argument333);
            identifier35=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier35.getTree());
            ASSIGNMENT36=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_attribute_argument335); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGNMENT36_tree = (CommonTree)adaptor.create(ASSIGNMENT36);
            adaptor.addChild(root_0, ASSIGNMENT36_tree);
            }
            pushFollow(FOLLOW_expression_in_attribute_argument337);
            expression37=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression37.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, attribute_argument_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "attribute_argument"

    public static class expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:105:1: expression : ( lambda_expression | ( conditional_expression ( assignment_operator expression )? ) );
    public final ValaParser.expression_return expression() throws RecognitionException {
        ValaParser.expression_return retval = new ValaParser.expression_return();
        retval.start = input.LT(1);
        int expression_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.lambda_expression_return lambda_expression38 = null;

        ValaParser.conditional_expression_return conditional_expression39 = null;

        ValaParser.assignment_operator_return assignment_operator40 = null;

        ValaParser.expression_return expression41 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:106:2: ( lambda_expression | ( conditional_expression ( assignment_operator expression )? ) )
            int alt13=2;
            alt13 = dfa13.predict(input);
            switch (alt13) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:107:2: lambda_expression
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_lambda_expression_in_expression347);
                    lambda_expression38=lambda_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, lambda_expression38.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:109:2: ( conditional_expression ( assignment_operator expression )? )
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:109:2: ( conditional_expression ( assignment_operator expression )? )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:109:4: conditional_expression ( assignment_operator expression )?
                    {
                    pushFollow(FOLLOW_conditional_expression_in_expression355);
                    conditional_expression39=conditional_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_expression39.getTree());
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:109:27: ( assignment_operator expression )?
                    int alt12=2;
                    int LA12_0 = input.LA(1);

                    if ( ((LA12_0>=ASSIGNMENT && LA12_0<=SHR_ASSIGN)) ) {
                        int LA12_1 = input.LA(2);

                        if ( (synpred21_Vala()) ) {
                            alt12=1;
                        }
                    }
                    switch (alt12) {
                        case 1 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:109:28: assignment_operator expression
                            {
                            pushFollow(FOLLOW_assignment_operator_in_expression358);
                            assignment_operator40=assignment_operator();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment_operator40.getTree());
                            pushFollow(FOLLOW_expression_in_expression360);
                            expression41=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression41.getTree());

                            }
                            break;

                    }


                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "expression"

    public static class assignment_operator_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "assignment_operator"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:111:1: assignment_operator : ( ASSIGNMENT | INCR_ASSIGN | DECR_ASSIGN | OR_ASSIGN | AND_ASSIGN | XOR_ASSIGN | DIV_ASSIGN | MUL_ASSIGN | MOD_ASSIGN | SHL_ASSIGN | SHR_ASSIGN );
    public final ValaParser.assignment_operator_return assignment_operator() throws RecognitionException {
        ValaParser.assignment_operator_return retval = new ValaParser.assignment_operator_return();
        retval.start = input.LT(1);
        int assignment_operator_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set42=null;

        CommonTree set42_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:112:2: ( ASSIGNMENT | INCR_ASSIGN | DECR_ASSIGN | OR_ASSIGN | AND_ASSIGN | XOR_ASSIGN | DIV_ASSIGN | MUL_ASSIGN | MOD_ASSIGN | SHL_ASSIGN | SHR_ASSIGN )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set42=(Token)input.LT(1);
            if ( (input.LA(1)>=ASSIGNMENT && input.LA(1)<=SHR_ASSIGN) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set42));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, assignment_operator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "assignment_operator"

    public static class conditional_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "conditional_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:114:1: conditional_expression : coalescing_expression ( QUESTION expression COLON expression )? ;
    public final ValaParser.conditional_expression_return conditional_expression() throws RecognitionException {
        ValaParser.conditional_expression_return retval = new ValaParser.conditional_expression_return();
        retval.start = input.LT(1);
        int conditional_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token QUESTION44=null;
        Token COLON46=null;
        ValaParser.coalescing_expression_return coalescing_expression43 = null;

        ValaParser.expression_return expression45 = null;

        ValaParser.expression_return expression47 = null;


        CommonTree QUESTION44_tree=null;
        CommonTree COLON46_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:115:2: ( coalescing_expression ( QUESTION expression COLON expression )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:116:2: coalescing_expression ( QUESTION expression COLON expression )?
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_coalescing_expression_in_conditional_expression426);
            coalescing_expression43=coalescing_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, coalescing_expression43.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:117:2: ( QUESTION expression COLON expression )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==QUESTION) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:117:3: QUESTION expression COLON expression
                    {
                    QUESTION44=(Token)match(input,QUESTION,FOLLOW_QUESTION_in_conditional_expression431); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    QUESTION44_tree = (CommonTree)adaptor.create(QUESTION44);
                    adaptor.addChild(root_0, QUESTION44_tree);
                    }
                    pushFollow(FOLLOW_expression_in_conditional_expression433);
                    expression45=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression45.getTree());
                    COLON46=(Token)match(input,COLON,FOLLOW_COLON_in_conditional_expression435); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON46_tree = (CommonTree)adaptor.create(COLON46);
                    adaptor.addChild(root_0, COLON46_tree);
                    }
                    pushFollow(FOLLOW_expression_in_conditional_expression437);
                    expression47=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression47.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, conditional_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "conditional_expression"

    public static class coalescing_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "coalescing_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:119:1: coalescing_expression : conditional_or_expression ( COALESCE coalescing_expression )? ;
    public final ValaParser.coalescing_expression_return coalescing_expression() throws RecognitionException {
        ValaParser.coalescing_expression_return retval = new ValaParser.coalescing_expression_return();
        retval.start = input.LT(1);
        int coalescing_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token COALESCE49=null;
        ValaParser.conditional_or_expression_return conditional_or_expression48 = null;

        ValaParser.coalescing_expression_return coalescing_expression50 = null;


        CommonTree COALESCE49_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:120:2: ( conditional_or_expression ( COALESCE coalescing_expression )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:121:2: conditional_or_expression ( COALESCE coalescing_expression )?
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_conditional_or_expression_in_coalescing_expression451);
            conditional_or_expression48=conditional_or_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_or_expression48.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:122:2: ( COALESCE coalescing_expression )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==COALESCE) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:122:3: COALESCE coalescing_expression
                    {
                    COALESCE49=(Token)match(input,COALESCE,FOLLOW_COALESCE_in_coalescing_expression456); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COALESCE49_tree = (CommonTree)adaptor.create(COALESCE49);
                    adaptor.addChild(root_0, COALESCE49_tree);
                    }
                    pushFollow(FOLLOW_coalescing_expression_in_coalescing_expression458);
                    coalescing_expression50=coalescing_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, coalescing_expression50.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, coalescing_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "coalescing_expression"

    public static class conditional_or_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "conditional_or_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:124:1: conditional_or_expression : conditional_and_expression ( BOOL_OR conditional_and_expression )* ;
    public final ValaParser.conditional_or_expression_return conditional_or_expression() throws RecognitionException {
        ValaParser.conditional_or_expression_return retval = new ValaParser.conditional_or_expression_return();
        retval.start = input.LT(1);
        int conditional_or_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token BOOL_OR52=null;
        ValaParser.conditional_and_expression_return conditional_and_expression51 = null;

        ValaParser.conditional_and_expression_return conditional_and_expression53 = null;


        CommonTree BOOL_OR52_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:125:2: ( conditional_and_expression ( BOOL_OR conditional_and_expression )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:126:2: conditional_and_expression ( BOOL_OR conditional_and_expression )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_conditional_and_expression_in_conditional_or_expression472);
            conditional_and_expression51=conditional_and_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_and_expression51.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:127:2: ( BOOL_OR conditional_and_expression )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==BOOL_OR) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:127:3: BOOL_OR conditional_and_expression
            	    {
            	    BOOL_OR52=(Token)match(input,BOOL_OR,FOLLOW_BOOL_OR_in_conditional_or_expression477); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    BOOL_OR52_tree = (CommonTree)adaptor.create(BOOL_OR52);
            	    adaptor.addChild(root_0, BOOL_OR52_tree);
            	    }
            	    pushFollow(FOLLOW_conditional_and_expression_in_conditional_or_expression479);
            	    conditional_and_expression53=conditional_and_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_and_expression53.getTree());

            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, conditional_or_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "conditional_or_expression"

    public static class conditional_and_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "conditional_and_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:129:1: conditional_and_expression : in_expression ( BOOL_AND in_expression )* ;
    public final ValaParser.conditional_and_expression_return conditional_and_expression() throws RecognitionException {
        ValaParser.conditional_and_expression_return retval = new ValaParser.conditional_and_expression_return();
        retval.start = input.LT(1);
        int conditional_and_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token BOOL_AND55=null;
        ValaParser.in_expression_return in_expression54 = null;

        ValaParser.in_expression_return in_expression56 = null;


        CommonTree BOOL_AND55_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:130:2: ( in_expression ( BOOL_AND in_expression )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:131:2: in_expression ( BOOL_AND in_expression )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_in_expression_in_conditional_and_expression493);
            in_expression54=in_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, in_expression54.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:132:2: ( BOOL_AND in_expression )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==BOOL_AND) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:132:3: BOOL_AND in_expression
            	    {
            	    BOOL_AND55=(Token)match(input,BOOL_AND,FOLLOW_BOOL_AND_in_conditional_and_expression498); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    BOOL_AND55_tree = (CommonTree)adaptor.create(BOOL_AND55);
            	    adaptor.addChild(root_0, BOOL_AND55_tree);
            	    }
            	    pushFollow(FOLLOW_in_expression_in_conditional_and_expression500);
            	    in_expression56=in_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, in_expression56.getTree());

            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, conditional_and_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "conditional_and_expression"

    public static class in_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "in_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:134:1: in_expression : inclusive_or_expression ( KW_IN inclusive_or_expression )? ;
    public final ValaParser.in_expression_return in_expression() throws RecognitionException {
        ValaParser.in_expression_return retval = new ValaParser.in_expression_return();
        retval.start = input.LT(1);
        int in_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_IN58=null;
        ValaParser.inclusive_or_expression_return inclusive_or_expression57 = null;

        ValaParser.inclusive_or_expression_return inclusive_or_expression59 = null;


        CommonTree KW_IN58_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:135:2: ( inclusive_or_expression ( KW_IN inclusive_or_expression )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:136:2: inclusive_or_expression ( KW_IN inclusive_or_expression )?
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_inclusive_or_expression_in_in_expression514);
            inclusive_or_expression57=inclusive_or_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, inclusive_or_expression57.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:137:2: ( KW_IN inclusive_or_expression )?
            int alt18=2;
            alt18 = dfa18.predict(input);
            switch (alt18) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:137:3: KW_IN inclusive_or_expression
                    {
                    KW_IN58=(Token)match(input,KW_IN,FOLLOW_KW_IN_in_in_expression519); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_IN58_tree = (CommonTree)adaptor.create(KW_IN58);
                    adaptor.addChild(root_0, KW_IN58_tree);
                    }
                    pushFollow(FOLLOW_inclusive_or_expression_in_in_expression521);
                    inclusive_or_expression59=inclusive_or_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, inclusive_or_expression59.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, in_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "in_expression"

    public static class inclusive_or_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "inclusive_or_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:139:1: inclusive_or_expression : exclusive_or_expression ( OR exclusive_or_expression )* ;
    public final ValaParser.inclusive_or_expression_return inclusive_or_expression() throws RecognitionException {
        ValaParser.inclusive_or_expression_return retval = new ValaParser.inclusive_or_expression_return();
        retval.start = input.LT(1);
        int inclusive_or_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token OR61=null;
        ValaParser.exclusive_or_expression_return exclusive_or_expression60 = null;

        ValaParser.exclusive_or_expression_return exclusive_or_expression62 = null;


        CommonTree OR61_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:140:2: ( exclusive_or_expression ( OR exclusive_or_expression )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:141:2: exclusive_or_expression ( OR exclusive_or_expression )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression535);
            exclusive_or_expression60=exclusive_or_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, exclusive_or_expression60.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:142:2: ( OR exclusive_or_expression )*
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( (LA19_0==OR) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:142:3: OR exclusive_or_expression
            	    {
            	    OR61=(Token)match(input,OR,FOLLOW_OR_in_inclusive_or_expression540); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    OR61_tree = (CommonTree)adaptor.create(OR61);
            	    adaptor.addChild(root_0, OR61_tree);
            	    }
            	    pushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression542);
            	    exclusive_or_expression62=exclusive_or_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exclusive_or_expression62.getTree());

            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, inclusive_or_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "inclusive_or_expression"

    public static class exclusive_or_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "exclusive_or_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:144:1: exclusive_or_expression : and_expression ( XOR and_expression )? ;
    public final ValaParser.exclusive_or_expression_return exclusive_or_expression() throws RecognitionException {
        ValaParser.exclusive_or_expression_return retval = new ValaParser.exclusive_or_expression_return();
        retval.start = input.LT(1);
        int exclusive_or_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token XOR64=null;
        ValaParser.and_expression_return and_expression63 = null;

        ValaParser.and_expression_return and_expression65 = null;


        CommonTree XOR64_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:145:2: ( and_expression ( XOR and_expression )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:146:2: and_expression ( XOR and_expression )?
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_and_expression_in_exclusive_or_expression556);
            and_expression63=and_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, and_expression63.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:147:2: ( XOR and_expression )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==XOR) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:147:3: XOR and_expression
                    {
                    XOR64=(Token)match(input,XOR,FOLLOW_XOR_in_exclusive_or_expression561); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    XOR64_tree = (CommonTree)adaptor.create(XOR64);
                    adaptor.addChild(root_0, XOR64_tree);
                    }
                    pushFollow(FOLLOW_and_expression_in_exclusive_or_expression563);
                    and_expression65=and_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, and_expression65.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, exclusive_or_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "exclusive_or_expression"

    public static class and_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "and_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:149:1: and_expression : equality_expression ( AND equality_expression )* ;
    public final ValaParser.and_expression_return and_expression() throws RecognitionException {
        ValaParser.and_expression_return retval = new ValaParser.and_expression_return();
        retval.start = input.LT(1);
        int and_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token AND67=null;
        ValaParser.equality_expression_return equality_expression66 = null;

        ValaParser.equality_expression_return equality_expression68 = null;


        CommonTree AND67_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:150:2: ( equality_expression ( AND equality_expression )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:151:2: equality_expression ( AND equality_expression )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_equality_expression_in_and_expression577);
            equality_expression66=equality_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, equality_expression66.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:152:2: ( AND equality_expression )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==AND) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:152:3: AND equality_expression
            	    {
            	    AND67=(Token)match(input,AND,FOLLOW_AND_in_and_expression582); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    AND67_tree = (CommonTree)adaptor.create(AND67);
            	    adaptor.addChild(root_0, AND67_tree);
            	    }
            	    pushFollow(FOLLOW_equality_expression_in_and_expression584);
            	    equality_expression68=equality_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, equality_expression68.getTree());

            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, and_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "and_expression"

    public static class equality_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "equality_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:154:1: equality_expression : relational_expression ( ( EQUAL | NOT_EQUAL ) relational_expression )* ;
    public final ValaParser.equality_expression_return equality_expression() throws RecognitionException {
        ValaParser.equality_expression_return retval = new ValaParser.equality_expression_return();
        retval.start = input.LT(1);
        int equality_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set70=null;
        ValaParser.relational_expression_return relational_expression69 = null;

        ValaParser.relational_expression_return relational_expression71 = null;


        CommonTree set70_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:155:2: ( relational_expression ( ( EQUAL | NOT_EQUAL ) relational_expression )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:156:2: relational_expression ( ( EQUAL | NOT_EQUAL ) relational_expression )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_relational_expression_in_equality_expression598);
            relational_expression69=relational_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, relational_expression69.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:157:2: ( ( EQUAL | NOT_EQUAL ) relational_expression )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( ((LA22_0>=EQUAL && LA22_0<=NOT_EQUAL)) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:157:3: ( EQUAL | NOT_EQUAL ) relational_expression
            	    {
            	    set70=(Token)input.LT(1);
            	    if ( (input.LA(1)>=EQUAL && input.LA(1)<=NOT_EQUAL) ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set70));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    pushFollow(FOLLOW_relational_expression_in_equality_expression613);
            	    relational_expression71=relational_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, relational_expression71.getTree());

            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, equality_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "equality_expression"

    public static class relational_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "relational_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:159:1: relational_expression : shift_expression ( ( ( LT | GT | LTEQ | GTEQ ) shift_expression ) | ( KW_IS type ) | ( KW_AS type ) )* ;
    public final ValaParser.relational_expression_return relational_expression() throws RecognitionException {
        ValaParser.relational_expression_return retval = new ValaParser.relational_expression_return();
        retval.start = input.LT(1);
        int relational_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set73=null;
        Token KW_IS75=null;
        Token KW_AS77=null;
        ValaParser.shift_expression_return shift_expression72 = null;

        ValaParser.shift_expression_return shift_expression74 = null;

        ValaParser.type_return type76 = null;

        ValaParser.type_return type78 = null;


        CommonTree set73_tree=null;
        CommonTree KW_IS75_tree=null;
        CommonTree KW_AS77_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:160:2: ( shift_expression ( ( ( LT | GT | LTEQ | GTEQ ) shift_expression ) | ( KW_IS type ) | ( KW_AS type ) )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:161:2: shift_expression ( ( ( LT | GT | LTEQ | GTEQ ) shift_expression ) | ( KW_IS type ) | ( KW_AS type ) )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_shift_expression_in_relational_expression627);
            shift_expression72=shift_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression72.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:162:2: ( ( ( LT | GT | LTEQ | GTEQ ) shift_expression ) | ( KW_IS type ) | ( KW_AS type ) )*
            loop23:
            do {
                int alt23=4;
                alt23 = dfa23.predict(input);
                switch (alt23) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:163:4: ( ( LT | GT | LTEQ | GTEQ ) shift_expression )
            	    {
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:163:4: ( ( LT | GT | LTEQ | GTEQ ) shift_expression )
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:163:5: ( LT | GT | LTEQ | GTEQ ) shift_expression
            	    {
            	    set73=(Token)input.LT(1);
            	    if ( (input.LA(1)>=LT && input.LA(1)<=GTEQ) ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set73));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    pushFollow(FOLLOW_shift_expression_in_relational_expression656);
            	    shift_expression74=shift_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression74.getTree());

            	    }


            	    }
            	    break;
            	case 2 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:165:4: ( KW_IS type )
            	    {
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:165:4: ( KW_IS type )
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:165:6: KW_IS type
            	    {
            	    KW_IS75=(Token)match(input,KW_IS,FOLLOW_KW_IS_in_relational_expression671); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    KW_IS75_tree = (CommonTree)adaptor.create(KW_IS75);
            	    adaptor.addChild(root_0, KW_IS75_tree);
            	    }
            	    pushFollow(FOLLOW_type_in_relational_expression673);
            	    type76=type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type76.getTree());

            	    }


            	    }
            	    break;
            	case 3 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:167:4: ( KW_AS type )
            	    {
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:167:4: ( KW_AS type )
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:167:6: KW_AS type
            	    {
            	    KW_AS77=(Token)match(input,KW_AS,FOLLOW_KW_AS_in_relational_expression688); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    KW_AS77_tree = (CommonTree)adaptor.create(KW_AS77);
            	    adaptor.addChild(root_0, KW_AS77_tree);
            	    }
            	    pushFollow(FOLLOW_type_in_relational_expression690);
            	    type78=type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type78.getTree());

            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, relational_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "relational_expression"

    public static class type_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:170:1: type : ( ( KW_VOID ( MULTIPLY )* ) | ( ( KW_DYNAMIC )? ( KW_OWNED | KW_UNOWNED | KW_WEAK )? symbol ( type_arguments )? ( MULTIPLY )* ( QUESTION )? ( array_type )* ) );
    public final ValaParser.type_return type() throws RecognitionException {
        ValaParser.type_return retval = new ValaParser.type_return();
        retval.start = input.LT(1);
        int type_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_VOID79=null;
        Token MULTIPLY80=null;
        Token KW_DYNAMIC81=null;
        Token set82=null;
        Token MULTIPLY85=null;
        Token QUESTION86=null;
        ValaParser.symbol_return symbol83 = null;

        ValaParser.type_arguments_return type_arguments84 = null;

        ValaParser.array_type_return array_type87 = null;


        CommonTree KW_VOID79_tree=null;
        CommonTree MULTIPLY80_tree=null;
        CommonTree KW_DYNAMIC81_tree=null;
        CommonTree set82_tree=null;
        CommonTree MULTIPLY85_tree=null;
        CommonTree QUESTION86_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:171:2: ( ( KW_VOID ( MULTIPLY )* ) | ( ( KW_DYNAMIC )? ( KW_OWNED | KW_UNOWNED | KW_WEAK )? symbol ( type_arguments )? ( MULTIPLY )* ( QUESTION )? ( array_type )* ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==KW_VOID) ) {
                alt31=1;
            }
            else if ( ((LA31_0>=GLOBAL_NS && LA31_0<=IDENTIFIER)||(LA31_0>=KW_DYNAMIC && LA31_0<=KW_WEAK)) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:172:2: ( KW_VOID ( MULTIPLY )* )
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:172:2: ( KW_VOID ( MULTIPLY )* )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:173:3: KW_VOID ( MULTIPLY )*
                    {
                    KW_VOID79=(Token)match(input,KW_VOID,FOLLOW_KW_VOID_in_type714); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_VOID79_tree = (CommonTree)adaptor.create(KW_VOID79);
                    adaptor.addChild(root_0, KW_VOID79_tree);
                    }
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:174:3: ( MULTIPLY )*
                    loop24:
                    do {
                        int alt24=2;
                        int LA24_0 = input.LA(1);

                        if ( (LA24_0==MULTIPLY) ) {
                            alt24=1;
                        }


                        switch (alt24) {
                    	case 1 :
                    	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:174:4: MULTIPLY
                    	    {
                    	    MULTIPLY80=(Token)match(input,MULTIPLY,FOLLOW_MULTIPLY_in_type719); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    MULTIPLY80_tree = (CommonTree)adaptor.create(MULTIPLY80);
                    	    adaptor.addChild(root_0, MULTIPLY80_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:177:2: ( ( KW_DYNAMIC )? ( KW_OWNED | KW_UNOWNED | KW_WEAK )? symbol ( type_arguments )? ( MULTIPLY )* ( QUESTION )? ( array_type )* )
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:177:2: ( ( KW_DYNAMIC )? ( KW_OWNED | KW_UNOWNED | KW_WEAK )? symbol ( type_arguments )? ( MULTIPLY )* ( QUESTION )? ( array_type )* )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:178:3: ( KW_DYNAMIC )? ( KW_OWNED | KW_UNOWNED | KW_WEAK )? symbol ( type_arguments )? ( MULTIPLY )* ( QUESTION )? ( array_type )*
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:178:3: ( KW_DYNAMIC )?
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==KW_DYNAMIC) ) {
                        alt25=1;
                    }
                    switch (alt25) {
                        case 1 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:178:4: KW_DYNAMIC
                            {
                            KW_DYNAMIC81=(Token)match(input,KW_DYNAMIC,FOLLOW_KW_DYNAMIC_in_type739); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            KW_DYNAMIC81_tree = (CommonTree)adaptor.create(KW_DYNAMIC81);
                            adaptor.addChild(root_0, KW_DYNAMIC81_tree);
                            }

                            }
                            break;

                    }

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:179:3: ( KW_OWNED | KW_UNOWNED | KW_WEAK )?
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( ((LA26_0>=KW_OWNED && LA26_0<=KW_WEAK)) ) {
                        alt26=1;
                    }
                    switch (alt26) {
                        case 1 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:
                            {
                            set82=(Token)input.LT(1);
                            if ( (input.LA(1)>=KW_OWNED && input.LA(1)<=KW_WEAK) ) {
                                input.consume();
                                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set82));
                                state.errorRecovery=false;state.failed=false;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return retval;}
                                MismatchedSetException mse = new MismatchedSetException(null,input);
                                throw mse;
                            }


                            }
                            break;

                    }

                    pushFollow(FOLLOW_symbol_in_type762);
                    symbol83=symbol();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, symbol83.getTree());
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:181:3: ( type_arguments )?
                    int alt27=2;
                    alt27 = dfa27.predict(input);
                    switch (alt27) {
                        case 1 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:181:4: type_arguments
                            {
                            pushFollow(FOLLOW_type_arguments_in_type768);
                            type_arguments84=type_arguments();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_arguments84.getTree());

                            }
                            break;

                    }

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:182:3: ( MULTIPLY )*
                    loop28:
                    do {
                        int alt28=2;
                        int LA28_0 = input.LA(1);

                        if ( (LA28_0==MULTIPLY) ) {
                            alt28=1;
                        }


                        switch (alt28) {
                    	case 1 :
                    	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:182:4: MULTIPLY
                    	    {
                    	    MULTIPLY85=(Token)match(input,MULTIPLY,FOLLOW_MULTIPLY_in_type776); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    MULTIPLY85_tree = (CommonTree)adaptor.create(MULTIPLY85);
                    	    adaptor.addChild(root_0, MULTIPLY85_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop28;
                        }
                    } while (true);

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:183:3: ( QUESTION )?
                    int alt29=2;
                    alt29 = dfa29.predict(input);
                    switch (alt29) {
                        case 1 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:183:4: QUESTION
                            {
                            QUESTION86=(Token)match(input,QUESTION,FOLLOW_QUESTION_in_type784); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            QUESTION86_tree = (CommonTree)adaptor.create(QUESTION86);
                            adaptor.addChild(root_0, QUESTION86_tree);
                            }

                            }
                            break;

                    }

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:184:3: ( array_type )*
                    loop30:
                    do {
                        int alt30=2;
                        alt30 = dfa30.predict(input);
                        switch (alt30) {
                    	case 1 :
                    	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:184:4: array_type
                    	    {
                    	    pushFollow(FOLLOW_array_type_in_type792);
                    	    array_type87=array_type();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, array_type87.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop30;
                        }
                    } while (true);


                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type"

    public static class array_type_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "array_type"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:187:1: array_type : LBRACKET ( array_size )? RBRACKET ( QUESTION )? ;
    public final ValaParser.array_type_return array_type() throws RecognitionException {
        ValaParser.array_type_return retval = new ValaParser.array_type_return();
        retval.start = input.LT(1);
        int array_type_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LBRACKET88=null;
        Token RBRACKET90=null;
        Token QUESTION91=null;
        ValaParser.array_size_return array_size89 = null;


        CommonTree LBRACKET88_tree=null;
        CommonTree RBRACKET90_tree=null;
        CommonTree QUESTION91_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:188:2: ( LBRACKET ( array_size )? RBRACKET ( QUESTION )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:189:2: LBRACKET ( array_size )? RBRACKET ( QUESTION )?
            {
            root_0 = (CommonTree)adaptor.nil();

            LBRACKET88=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_array_type810); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LBRACKET88_tree = (CommonTree)adaptor.create(LBRACKET88);
            adaptor.addChild(root_0, LBRACKET88_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:190:2: ( array_size )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==KW_USING||(LA32_0>=GLOBAL_NS && LA32_0<=IDENTIFIER)||LA32_0==LPAREN||LA32_0==KW_IN||LA32_0==AND||(LA32_0>=KW_IS && LA32_0<=KW_WEAK)||(LA32_0>=PLUS && LA32_0<=MINUS)||(LA32_0>=NOT && LA32_0<=KW_REQUIRES)||(LA32_0>=INTEGER && LA32_0<=LCURL)||LA32_0==TEMPLATE_START||(LA32_0>=KW_THIS && LA32_0<=KW_BASE)) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:190:3: array_size
                    {
                    pushFollow(FOLLOW_array_size_in_array_type815);
                    array_size89=array_size();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, array_size89.getTree());

                    }
                    break;

            }

            RBRACKET90=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_array_type820); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RBRACKET90_tree = (CommonTree)adaptor.create(RBRACKET90);
            adaptor.addChild(root_0, RBRACKET90_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:192:2: ( QUESTION )?
            int alt33=2;
            alt33 = dfa33.predict(input);
            switch (alt33) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:192:3: QUESTION
                    {
                    QUESTION91=(Token)match(input,QUESTION,FOLLOW_QUESTION_in_array_type826); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    QUESTION91_tree = (CommonTree)adaptor.create(QUESTION91);
                    adaptor.addChild(root_0, QUESTION91_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, array_type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "array_type"

    public static class shift_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "shift_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:194:1: shift_expression : additive_expression ( ( SHIFT_LEFT | shift_right ) additive_expression )* ;
    public final ValaParser.shift_expression_return shift_expression() throws RecognitionException {
        ValaParser.shift_expression_return retval = new ValaParser.shift_expression_return();
        retval.start = input.LT(1);
        int shift_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token SHIFT_LEFT93=null;
        ValaParser.additive_expression_return additive_expression92 = null;

        ValaParser.shift_right_return shift_right94 = null;

        ValaParser.additive_expression_return additive_expression95 = null;


        CommonTree SHIFT_LEFT93_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:195:2: ( additive_expression ( ( SHIFT_LEFT | shift_right ) additive_expression )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:196:2: additive_expression ( ( SHIFT_LEFT | shift_right ) additive_expression )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_additive_expression_in_shift_expression840);
            additive_expression92=additive_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, additive_expression92.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:197:2: ( ( SHIFT_LEFT | shift_right ) additive_expression )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==GT) ) {
                    int LA35_1 = input.LA(2);

                    if ( (LA35_1==GT) ) {
                        alt35=1;
                    }


                }
                else if ( (LA35_0==SHIFT_LEFT) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:198:3: ( SHIFT_LEFT | shift_right ) additive_expression
            	    {
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:198:3: ( SHIFT_LEFT | shift_right )
            	    int alt34=2;
            	    int LA34_0 = input.LA(1);

            	    if ( (LA34_0==SHIFT_LEFT) ) {
            	        alt34=1;
            	    }
            	    else if ( (LA34_0==GT) ) {
            	        alt34=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 34, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt34) {
            	        case 1 :
            	            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:198:5: SHIFT_LEFT
            	            {
            	            SHIFT_LEFT93=(Token)match(input,SHIFT_LEFT,FOLLOW_SHIFT_LEFT_in_shift_expression850); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            SHIFT_LEFT93_tree = (CommonTree)adaptor.create(SHIFT_LEFT93);
            	            adaptor.addChild(root_0, SHIFT_LEFT93_tree);
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:198:18: shift_right
            	            {
            	            pushFollow(FOLLOW_shift_right_in_shift_expression854);
            	            shift_right94=shift_right();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_right94.getTree());

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_additive_expression_in_shift_expression858);
            	    additive_expression95=additive_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, additive_expression95.getTree());

            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, shift_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "shift_expression"

    public static class shift_right_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "shift_right"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:201:1: shift_right : GT GT ;
    public final ValaParser.shift_right_return shift_right() throws RecognitionException {
        ValaParser.shift_right_return retval = new ValaParser.shift_right_return();
        retval.start = input.LT(1);
        int shift_right_StartIndex = input.index();
        CommonTree root_0 = null;

        Token GT96=null;
        Token GT97=null;

        CommonTree GT96_tree=null;
        CommonTree GT97_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:202:2: ( GT GT )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:203:2: GT GT
            {
            root_0 = (CommonTree)adaptor.nil();

            GT96=(Token)match(input,GT,FOLLOW_GT_in_shift_right872); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            GT96_tree = (CommonTree)adaptor.create(GT96);
            adaptor.addChild(root_0, GT96_tree);
            }
            GT97=(Token)match(input,GT,FOLLOW_GT_in_shift_right874); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            GT97_tree = (CommonTree)adaptor.create(GT97);
            adaptor.addChild(root_0, GT97_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, shift_right_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "shift_right"

    public static class additive_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "additive_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:205:1: additive_expression : multiplicative_expression ( ( PLUS | MINUS ) multiplicative_expression )* ;
    public final ValaParser.additive_expression_return additive_expression() throws RecognitionException {
        ValaParser.additive_expression_return retval = new ValaParser.additive_expression_return();
        retval.start = input.LT(1);
        int additive_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set99=null;
        ValaParser.multiplicative_expression_return multiplicative_expression98 = null;

        ValaParser.multiplicative_expression_return multiplicative_expression100 = null;


        CommonTree set99_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:206:2: ( multiplicative_expression ( ( PLUS | MINUS ) multiplicative_expression )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:207:2: multiplicative_expression ( ( PLUS | MINUS ) multiplicative_expression )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_multiplicative_expression_in_additive_expression886);
            multiplicative_expression98=multiplicative_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, multiplicative_expression98.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:208:2: ( ( PLUS | MINUS ) multiplicative_expression )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( ((LA36_0>=PLUS && LA36_0<=MINUS)) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:209:3: ( PLUS | MINUS ) multiplicative_expression
            	    {
            	    set99=(Token)input.LT(1);
            	    if ( (input.LA(1)>=PLUS && input.LA(1)<=MINUS) ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set99));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    pushFollow(FOLLOW_multiplicative_expression_in_additive_expression904);
            	    multiplicative_expression100=multiplicative_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, multiplicative_expression100.getTree());

            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, additive_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "additive_expression"

    public static class multiplicative_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "multiplicative_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:212:1: multiplicative_expression : unary_expression ( ( ( MULTIPLY ) | ( DIV ) | ( MOD ) ) unary_expression )* ;
    public final ValaParser.multiplicative_expression_return multiplicative_expression() throws RecognitionException {
        ValaParser.multiplicative_expression_return retval = new ValaParser.multiplicative_expression_return();
        retval.start = input.LT(1);
        int multiplicative_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token MULTIPLY102=null;
        Token DIV103=null;
        Token MOD104=null;
        ValaParser.unary_expression_return unary_expression101 = null;

        ValaParser.unary_expression_return unary_expression105 = null;


        CommonTree MULTIPLY102_tree=null;
        CommonTree DIV103_tree=null;
        CommonTree MOD104_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:213:2: ( unary_expression ( ( ( MULTIPLY ) | ( DIV ) | ( MOD ) ) unary_expression )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:214:2: unary_expression ( ( ( MULTIPLY ) | ( DIV ) | ( MOD ) ) unary_expression )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_unary_expression_in_multiplicative_expression920);
            unary_expression101=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression101.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:215:2: ( ( ( MULTIPLY ) | ( DIV ) | ( MOD ) ) unary_expression )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==MULTIPLY||(LA38_0>=DIV && LA38_0<=MOD)) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:216:3: ( ( MULTIPLY ) | ( DIV ) | ( MOD ) ) unary_expression
            	    {
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:216:3: ( ( MULTIPLY ) | ( DIV ) | ( MOD ) )
            	    int alt37=3;
            	    switch ( input.LA(1) ) {
            	    case MULTIPLY:
            	        {
            	        alt37=1;
            	        }
            	        break;
            	    case DIV:
            	        {
            	        alt37=2;
            	        }
            	        break;
            	    case MOD:
            	        {
            	        alt37=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 37, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt37) {
            	        case 1 :
            	            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:217:3: ( MULTIPLY )
            	            {
            	            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:217:3: ( MULTIPLY )
            	            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:217:4: MULTIPLY
            	            {
            	            MULTIPLY102=(Token)match(input,MULTIPLY,FOLLOW_MULTIPLY_in_multiplicative_expression934); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            MULTIPLY102_tree = (CommonTree)adaptor.create(MULTIPLY102);
            	            adaptor.addChild(root_0, MULTIPLY102_tree);
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:218:5: ( DIV )
            	            {
            	            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:218:5: ( DIV )
            	            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:218:6: DIV
            	            {
            	            DIV103=(Token)match(input,DIV,FOLLOW_DIV_in_multiplicative_expression942); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            DIV103_tree = (CommonTree)adaptor.create(DIV103);
            	            adaptor.addChild(root_0, DIV103_tree);
            	            }

            	            }


            	            }
            	            break;
            	        case 3 :
            	            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:219:5: ( MOD )
            	            {
            	            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:219:5: ( MOD )
            	            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:219:6: MOD
            	            {
            	            MOD104=(Token)match(input,MOD,FOLLOW_MOD_in_multiplicative_expression950); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            MOD104_tree = (CommonTree)adaptor.create(MOD104);
            	            adaptor.addChild(root_0, MOD104_tree);
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_unary_expression_in_multiplicative_expression957);
            	    unary_expression105=unary_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression105.getTree());

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, multiplicative_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "multiplicative_expression"

    public static class unary_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unary_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:223:1: unary_expression : ( ( unary_operator unary_expression ) | primary_expression );
    public final ValaParser.unary_expression_return unary_expression() throws RecognitionException {
        ValaParser.unary_expression_return retval = new ValaParser.unary_expression_return();
        retval.start = input.LT(1);
        int unary_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.unary_operator_return unary_operator106 = null;

        ValaParser.unary_expression_return unary_expression107 = null;

        ValaParser.primary_expression_return primary_expression108 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:224:2: ( ( unary_operator unary_expression ) | primary_expression )
            int alt39=2;
            alt39 = dfa39.predict(input);
            switch (alt39) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:225:3: ( unary_operator unary_expression )
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:225:3: ( unary_operator unary_expression )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:225:5: unary_operator unary_expression
                    {
                    pushFollow(FOLLOW_unary_operator_in_unary_expression976);
                    unary_operator106=unary_operator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_operator106.getTree());
                    pushFollow(FOLLOW_unary_expression_in_unary_expression978);
                    unary_expression107=unary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression107.getTree());

                    }


                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:227:3: primary_expression
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_primary_expression_in_unary_expression990);
                    primary_expression108=primary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression108.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, unary_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "unary_expression"

    public static class unary_operator_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unary_operator"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:229:1: unary_operator : ( PLUS | MINUS | NOT | BITWISE_NOT | INCREMENT | DECREMENT | MULTIPLY | AND | cast_operator | LPAREN NOT RPAREN );
    public final ValaParser.unary_operator_return unary_operator() throws RecognitionException {
        ValaParser.unary_operator_return retval = new ValaParser.unary_operator_return();
        retval.start = input.LT(1);
        int unary_operator_StartIndex = input.index();
        CommonTree root_0 = null;

        Token PLUS109=null;
        Token MINUS110=null;
        Token NOT111=null;
        Token BITWISE_NOT112=null;
        Token INCREMENT113=null;
        Token DECREMENT114=null;
        Token MULTIPLY115=null;
        Token AND116=null;
        Token LPAREN118=null;
        Token NOT119=null;
        Token RPAREN120=null;
        ValaParser.cast_operator_return cast_operator117 = null;


        CommonTree PLUS109_tree=null;
        CommonTree MINUS110_tree=null;
        CommonTree NOT111_tree=null;
        CommonTree BITWISE_NOT112_tree=null;
        CommonTree INCREMENT113_tree=null;
        CommonTree DECREMENT114_tree=null;
        CommonTree MULTIPLY115_tree=null;
        CommonTree AND116_tree=null;
        CommonTree LPAREN118_tree=null;
        CommonTree NOT119_tree=null;
        CommonTree RPAREN120_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:230:2: ( PLUS | MINUS | NOT | BITWISE_NOT | INCREMENT | DECREMENT | MULTIPLY | AND | cast_operator | LPAREN NOT RPAREN )
            int alt40=10;
            alt40 = dfa40.predict(input);
            switch (alt40) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:231:2: PLUS
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    PLUS109=(Token)match(input,PLUS,FOLLOW_PLUS_in_unary_operator1002); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    PLUS109_tree = (CommonTree)adaptor.create(PLUS109);
                    adaptor.addChild(root_0, PLUS109_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:232:4: MINUS
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    MINUS110=(Token)match(input,MINUS,FOLLOW_MINUS_in_unary_operator1008); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    MINUS110_tree = (CommonTree)adaptor.create(MINUS110);
                    adaptor.addChild(root_0, MINUS110_tree);
                    }

                    }
                    break;
                case 3 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:233:4: NOT
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    NOT111=(Token)match(input,NOT,FOLLOW_NOT_in_unary_operator1014); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NOT111_tree = (CommonTree)adaptor.create(NOT111);
                    adaptor.addChild(root_0, NOT111_tree);
                    }

                    }
                    break;
                case 4 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:234:4: BITWISE_NOT
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    BITWISE_NOT112=(Token)match(input,BITWISE_NOT,FOLLOW_BITWISE_NOT_in_unary_operator1020); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    BITWISE_NOT112_tree = (CommonTree)adaptor.create(BITWISE_NOT112);
                    adaptor.addChild(root_0, BITWISE_NOT112_tree);
                    }

                    }
                    break;
                case 5 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:235:4: INCREMENT
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    INCREMENT113=(Token)match(input,INCREMENT,FOLLOW_INCREMENT_in_unary_operator1026); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    INCREMENT113_tree = (CommonTree)adaptor.create(INCREMENT113);
                    adaptor.addChild(root_0, INCREMENT113_tree);
                    }

                    }
                    break;
                case 6 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:236:4: DECREMENT
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    DECREMENT114=(Token)match(input,DECREMENT,FOLLOW_DECREMENT_in_unary_operator1031); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DECREMENT114_tree = (CommonTree)adaptor.create(DECREMENT114);
                    adaptor.addChild(root_0, DECREMENT114_tree);
                    }

                    }
                    break;
                case 7 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:237:4: MULTIPLY
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    MULTIPLY115=(Token)match(input,MULTIPLY,FOLLOW_MULTIPLY_in_unary_operator1036); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    MULTIPLY115_tree = (CommonTree)adaptor.create(MULTIPLY115);
                    adaptor.addChild(root_0, MULTIPLY115_tree);
                    }

                    }
                    break;
                case 8 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:238:4: AND
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    AND116=(Token)match(input,AND,FOLLOW_AND_in_unary_operator1042); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    AND116_tree = (CommonTree)adaptor.create(AND116);
                    adaptor.addChild(root_0, AND116_tree);
                    }

                    }
                    break;
                case 9 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:239:4: cast_operator
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_cast_operator_in_unary_operator1048);
                    cast_operator117=cast_operator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cast_operator117.getTree());

                    }
                    break;
                case 10 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:240:4: LPAREN NOT RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LPAREN118=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_unary_operator1053); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN118_tree = (CommonTree)adaptor.create(LPAREN118);
                    adaptor.addChild(root_0, LPAREN118_tree);
                    }
                    NOT119=(Token)match(input,NOT,FOLLOW_NOT_in_unary_operator1055); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    NOT119_tree = (CommonTree)adaptor.create(NOT119);
                    adaptor.addChild(root_0, NOT119_tree);
                    }
                    RPAREN120=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_unary_operator1057); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN120_tree = (CommonTree)adaptor.create(RPAREN120);
                    adaptor.addChild(root_0, RPAREN120_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, unary_operator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "unary_operator"

    public static class cast_operator_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "cast_operator"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:242:1: cast_operator : ( LPAREN type RPAREN | LPAREN KW_UNOWNED RPAREN | LPAREN KW_OWNED RPAREN | LPAREN KW_WEAK RPAREN );
    public final ValaParser.cast_operator_return cast_operator() throws RecognitionException {
        ValaParser.cast_operator_return retval = new ValaParser.cast_operator_return();
        retval.start = input.LT(1);
        int cast_operator_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LPAREN121=null;
        Token RPAREN123=null;
        Token LPAREN124=null;
        Token KW_UNOWNED125=null;
        Token RPAREN126=null;
        Token LPAREN127=null;
        Token KW_OWNED128=null;
        Token RPAREN129=null;
        Token LPAREN130=null;
        Token KW_WEAK131=null;
        Token RPAREN132=null;
        ValaParser.type_return type122 = null;


        CommonTree LPAREN121_tree=null;
        CommonTree RPAREN123_tree=null;
        CommonTree LPAREN124_tree=null;
        CommonTree KW_UNOWNED125_tree=null;
        CommonTree RPAREN126_tree=null;
        CommonTree LPAREN127_tree=null;
        CommonTree KW_OWNED128_tree=null;
        CommonTree RPAREN129_tree=null;
        CommonTree LPAREN130_tree=null;
        CommonTree KW_WEAK131_tree=null;
        CommonTree RPAREN132_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:243:2: ( LPAREN type RPAREN | LPAREN KW_UNOWNED RPAREN | LPAREN KW_OWNED RPAREN | LPAREN KW_WEAK RPAREN )
            int alt41=4;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==LPAREN) ) {
                switch ( input.LA(2) ) {
                case KW_UNOWNED:
                    {
                    int LA41_2 = input.LA(3);

                    if ( (LA41_2==RPAREN) ) {
                        alt41=2;
                    }
                    else if ( ((LA41_2>=GLOBAL_NS && LA41_2<=IDENTIFIER)) ) {
                        alt41=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 41, 2, input);

                        throw nvae;
                    }
                    }
                    break;
                case KW_OWNED:
                    {
                    int LA41_3 = input.LA(3);

                    if ( (LA41_3==RPAREN) ) {
                        alt41=3;
                    }
                    else if ( ((LA41_3>=GLOBAL_NS && LA41_3<=IDENTIFIER)) ) {
                        alt41=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 41, 3, input);

                        throw nvae;
                    }
                    }
                    break;
                case KW_WEAK:
                    {
                    int LA41_4 = input.LA(3);

                    if ( (LA41_4==RPAREN) ) {
                        alt41=4;
                    }
                    else if ( ((LA41_4>=GLOBAL_NS && LA41_4<=IDENTIFIER)) ) {
                        alt41=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 41, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case GLOBAL_NS:
                case IDENTIFIER:
                case KW_VOID:
                case KW_DYNAMIC:
                    {
                    alt41=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 1, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:244:2: LPAREN type RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LPAREN121=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_cast_operator1067); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN121_tree = (CommonTree)adaptor.create(LPAREN121);
                    adaptor.addChild(root_0, LPAREN121_tree);
                    }
                    pushFollow(FOLLOW_type_in_cast_operator1069);
                    type122=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type122.getTree());
                    RPAREN123=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_cast_operator1071); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN123_tree = (CommonTree)adaptor.create(RPAREN123);
                    adaptor.addChild(root_0, RPAREN123_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:245:4: LPAREN KW_UNOWNED RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LPAREN124=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_cast_operator1076); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN124_tree = (CommonTree)adaptor.create(LPAREN124);
                    adaptor.addChild(root_0, LPAREN124_tree);
                    }
                    KW_UNOWNED125=(Token)match(input,KW_UNOWNED,FOLLOW_KW_UNOWNED_in_cast_operator1078); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_UNOWNED125_tree = (CommonTree)adaptor.create(KW_UNOWNED125);
                    adaptor.addChild(root_0, KW_UNOWNED125_tree);
                    }
                    RPAREN126=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_cast_operator1080); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN126_tree = (CommonTree)adaptor.create(RPAREN126);
                    adaptor.addChild(root_0, RPAREN126_tree);
                    }

                    }
                    break;
                case 3 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:246:4: LPAREN KW_OWNED RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LPAREN127=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_cast_operator1085); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN127_tree = (CommonTree)adaptor.create(LPAREN127);
                    adaptor.addChild(root_0, LPAREN127_tree);
                    }
                    KW_OWNED128=(Token)match(input,KW_OWNED,FOLLOW_KW_OWNED_in_cast_operator1087); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_OWNED128_tree = (CommonTree)adaptor.create(KW_OWNED128);
                    adaptor.addChild(root_0, KW_OWNED128_tree);
                    }
                    RPAREN129=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_cast_operator1089); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN129_tree = (CommonTree)adaptor.create(RPAREN129);
                    adaptor.addChild(root_0, RPAREN129_tree);
                    }

                    }
                    break;
                case 4 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:247:4: LPAREN KW_WEAK RPAREN
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    LPAREN130=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_cast_operator1094); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN130_tree = (CommonTree)adaptor.create(LPAREN130);
                    adaptor.addChild(root_0, LPAREN130_tree);
                    }
                    KW_WEAK131=(Token)match(input,KW_WEAK,FOLLOW_KW_WEAK_in_cast_operator1096); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_WEAK131_tree = (CommonTree)adaptor.create(KW_WEAK131);
                    adaptor.addChild(root_0, KW_WEAK131_tree);
                    }
                    RPAREN132=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_cast_operator1098); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN132_tree = (CommonTree)adaptor.create(RPAREN132);
                    adaptor.addChild(root_0, RPAREN132_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, cast_operator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "cast_operator"

    public static class primary_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primary_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:249:1: primary_expression : ( literal | initializer | tuple | template | this_access | base_access | object_or_array_creation_expression | yield_expression | sizeof_expression | typeof_expression | simple_name ) ( member_access | pointer_member_access | method_call | element_access | post_increment_expression | post_decrement_expression )* ;
    public final ValaParser.primary_expression_return primary_expression() throws RecognitionException {
        ValaParser.primary_expression_return retval = new ValaParser.primary_expression_return();
        retval.start = input.LT(1);
        int primary_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.literal_return literal133 = null;

        ValaParser.initializer_return initializer134 = null;

        ValaParser.tuple_return tuple135 = null;

        ValaParser.template_return template136 = null;

        ValaParser.this_access_return this_access137 = null;

        ValaParser.base_access_return base_access138 = null;

        ValaParser.object_or_array_creation_expression_return object_or_array_creation_expression139 = null;

        ValaParser.yield_expression_return yield_expression140 = null;

        ValaParser.sizeof_expression_return sizeof_expression141 = null;

        ValaParser.typeof_expression_return typeof_expression142 = null;

        ValaParser.simple_name_return simple_name143 = null;

        ValaParser.member_access_return member_access144 = null;

        ValaParser.pointer_member_access_return pointer_member_access145 = null;

        ValaParser.method_call_return method_call146 = null;

        ValaParser.element_access_return element_access147 = null;

        ValaParser.post_increment_expression_return post_increment_expression148 = null;

        ValaParser.post_decrement_expression_return post_decrement_expression149 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:250:2: ( ( literal | initializer | tuple | template | this_access | base_access | object_or_array_creation_expression | yield_expression | sizeof_expression | typeof_expression | simple_name ) ( member_access | pointer_member_access | method_call | element_access | post_increment_expression | post_decrement_expression )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:251:2: ( literal | initializer | tuple | template | this_access | base_access | object_or_array_creation_expression | yield_expression | sizeof_expression | typeof_expression | simple_name ) ( member_access | pointer_member_access | method_call | element_access | post_increment_expression | post_decrement_expression )*
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:251:2: ( literal | initializer | tuple | template | this_access | base_access | object_or_array_creation_expression | yield_expression | sizeof_expression | typeof_expression | simple_name )
            int alt42=11;
            alt42 = dfa42.predict(input);
            switch (alt42) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:252:3: literal
                    {
                    pushFollow(FOLLOW_literal_in_primary_expression1115);
                    literal133=literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, literal133.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:253:5: initializer
                    {
                    pushFollow(FOLLOW_initializer_in_primary_expression1121);
                    initializer134=initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, initializer134.getTree());

                    }
                    break;
                case 3 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:254:5: tuple
                    {
                    pushFollow(FOLLOW_tuple_in_primary_expression1127);
                    tuple135=tuple();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, tuple135.getTree());

                    }
                    break;
                case 4 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:255:5: template
                    {
                    pushFollow(FOLLOW_template_in_primary_expression1133);
                    template136=template();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, template136.getTree());

                    }
                    break;
                case 5 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:256:5: this_access
                    {
                    pushFollow(FOLLOW_this_access_in_primary_expression1139);
                    this_access137=this_access();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, this_access137.getTree());

                    }
                    break;
                case 6 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:257:5: base_access
                    {
                    pushFollow(FOLLOW_base_access_in_primary_expression1145);
                    base_access138=base_access();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, base_access138.getTree());

                    }
                    break;
                case 7 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:258:5: object_or_array_creation_expression
                    {
                    pushFollow(FOLLOW_object_or_array_creation_expression_in_primary_expression1151);
                    object_or_array_creation_expression139=object_or_array_creation_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_array_creation_expression139.getTree());

                    }
                    break;
                case 8 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:259:5: yield_expression
                    {
                    pushFollow(FOLLOW_yield_expression_in_primary_expression1157);
                    yield_expression140=yield_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, yield_expression140.getTree());

                    }
                    break;
                case 9 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:260:5: sizeof_expression
                    {
                    pushFollow(FOLLOW_sizeof_expression_in_primary_expression1163);
                    sizeof_expression141=sizeof_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, sizeof_expression141.getTree());

                    }
                    break;
                case 10 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:261:5: typeof_expression
                    {
                    pushFollow(FOLLOW_typeof_expression_in_primary_expression1169);
                    typeof_expression142=typeof_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeof_expression142.getTree());

                    }
                    break;
                case 11 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:262:5: simple_name
                    {
                    pushFollow(FOLLOW_simple_name_in_primary_expression1175);
                    simple_name143=simple_name();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, simple_name143.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:264:2: ( member_access | pointer_member_access | method_call | element_access | post_increment_expression | post_decrement_expression )*
            loop43:
            do {
                int alt43=7;
                alt43 = dfa43.predict(input);
                switch (alt43) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:265:3: member_access
            	    {
            	    pushFollow(FOLLOW_member_access_in_primary_expression1185);
            	    member_access144=member_access();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_access144.getTree());

            	    }
            	    break;
            	case 2 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:266:5: pointer_member_access
            	    {
            	    pushFollow(FOLLOW_pointer_member_access_in_primary_expression1191);
            	    pointer_member_access145=pointer_member_access();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, pointer_member_access145.getTree());

            	    }
            	    break;
            	case 3 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:267:5: method_call
            	    {
            	    pushFollow(FOLLOW_method_call_in_primary_expression1197);
            	    method_call146=method_call();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_call146.getTree());

            	    }
            	    break;
            	case 4 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:268:5: element_access
            	    {
            	    pushFollow(FOLLOW_element_access_in_primary_expression1203);
            	    element_access147=element_access();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, element_access147.getTree());

            	    }
            	    break;
            	case 5 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:269:5: post_increment_expression
            	    {
            	    pushFollow(FOLLOW_post_increment_expression_in_primary_expression1209);
            	    post_increment_expression148=post_increment_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, post_increment_expression148.getTree());

            	    }
            	    break;
            	case 6 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:270:5: post_decrement_expression
            	    {
            	    pushFollow(FOLLOW_post_decrement_expression_in_primary_expression1215);
            	    post_decrement_expression149=post_decrement_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, post_decrement_expression149.getTree());

            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, primary_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "primary_expression"

    public static class member_access_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "member_access"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:273:1: member_access : DOT identifier ( type_arguments )? ;
    public final ValaParser.member_access_return member_access() throws RecognitionException {
        ValaParser.member_access_return retval = new ValaParser.member_access_return();
        retval.start = input.LT(1);
        int member_access_StartIndex = input.index();
        CommonTree root_0 = null;

        Token DOT150=null;
        ValaParser.identifier_return identifier151 = null;

        ValaParser.type_arguments_return type_arguments152 = null;


        CommonTree DOT150_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:274:2: ( DOT identifier ( type_arguments )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:275:2: DOT identifier ( type_arguments )?
            {
            root_0 = (CommonTree)adaptor.nil();

            DOT150=(Token)match(input,DOT,FOLLOW_DOT_in_member_access1230); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            DOT150_tree = (CommonTree)adaptor.create(DOT150);
            adaptor.addChild(root_0, DOT150_tree);
            }
            pushFollow(FOLLOW_identifier_in_member_access1233);
            identifier151=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier151.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:277:2: ( type_arguments )?
            int alt44=2;
            alt44 = dfa44.predict(input);
            switch (alt44) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:277:3: type_arguments
                    {
                    pushFollow(FOLLOW_type_arguments_in_member_access1237);
                    type_arguments152=type_arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_arguments152.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, member_access_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "member_access"

    public static class identifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "identifier"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:279:1: identifier : ( IDENTIFIER | KW_USING | KW_CONSTRUCT | KW_SET | KW_GET | KW_IN | KW_IS | KW_AS | KW_VOID | KW_DYNAMIC | KW_OWNED | KW_WEAK | KW_UNOWNED | KW_TRUE | KW_FALSE | KW_NULL | KW_NEW | KW_YIELD | KW_SIZEOF | KW_TYPEOF | KW_ASYNC | KW_CLASS | KW_STRUCT | KW_EXTERN | KW_INLINE | KW_STATIC | KW_ABSTRACT | KW_VIRTUAL | KW_OVERRIDE | KW_PRIVATE | KW_PROTECTED | KW_PUBLIC | KW_INTERNAL | KW_ENUM | KW_ERRORDOMAIN | KW_INTERFACE | KW_NAMESPACE | KW_OUT | KW_REF | KW_PARAMS | KW_TRY | KW_CATCH | KW_FINALLY | KW_LOCK | KW_DELETE | KW_FOREACH | KW_CONTINUE | KW_RETURN | KW_BREAK | KW_VAR | KW_THROW | KW_SIGNAL | KW_REQUIRES );
    public final ValaParser.identifier_return identifier() throws RecognitionException {
        ValaParser.identifier_return retval = new ValaParser.identifier_return();
        retval.start = input.LT(1);
        int identifier_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set153=null;

        CommonTree set153_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:280:2: ( IDENTIFIER | KW_USING | KW_CONSTRUCT | KW_SET | KW_GET | KW_IN | KW_IS | KW_AS | KW_VOID | KW_DYNAMIC | KW_OWNED | KW_WEAK | KW_UNOWNED | KW_TRUE | KW_FALSE | KW_NULL | KW_NEW | KW_YIELD | KW_SIZEOF | KW_TYPEOF | KW_ASYNC | KW_CLASS | KW_STRUCT | KW_EXTERN | KW_INLINE | KW_STATIC | KW_ABSTRACT | KW_VIRTUAL | KW_OVERRIDE | KW_PRIVATE | KW_PROTECTED | KW_PUBLIC | KW_INTERNAL | KW_ENUM | KW_ERRORDOMAIN | KW_INTERFACE | KW_NAMESPACE | KW_OUT | KW_REF | KW_PARAMS | KW_TRY | KW_CATCH | KW_FINALLY | KW_LOCK | KW_DELETE | KW_FOREACH | KW_CONTINUE | KW_RETURN | KW_BREAK | KW_VAR | KW_THROW | KW_SIGNAL | KW_REQUIRES )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set153=(Token)input.LT(1);
            if ( input.LA(1)==KW_USING||input.LA(1)==IDENTIFIER||input.LA(1)==KW_IN||(input.LA(1)>=KW_IS && input.LA(1)<=KW_VOID)||(input.LA(1)>=KW_DYNAMIC && input.LA(1)<=KW_WEAK)||(input.LA(1)>=KW_CONSTRUCT && input.LA(1)<=KW_REQUIRES) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set153));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, identifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "identifier"

    public static class post_increment_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "post_increment_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:335:1: post_increment_expression : INCREMENT ;
    public final ValaParser.post_increment_expression_return post_increment_expression() throws RecognitionException {
        ValaParser.post_increment_expression_return retval = new ValaParser.post_increment_expression_return();
        retval.start = input.LT(1);
        int post_increment_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token INCREMENT154=null;

        CommonTree INCREMENT154_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:336:2: ( INCREMENT )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:336:4: INCREMENT
            {
            root_0 = (CommonTree)adaptor.nil();

            INCREMENT154=(Token)match(input,INCREMENT,FOLLOW_INCREMENT_in_post_increment_expression1525); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            INCREMENT154_tree = (CommonTree)adaptor.create(INCREMENT154);
            adaptor.addChild(root_0, INCREMENT154_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, post_increment_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "post_increment_expression"

    public static class post_decrement_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "post_decrement_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:338:1: post_decrement_expression : DECREMENT ;
    public final ValaParser.post_decrement_expression_return post_decrement_expression() throws RecognitionException {
        ValaParser.post_decrement_expression_return retval = new ValaParser.post_decrement_expression_return();
        retval.start = input.LT(1);
        int post_decrement_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token DECREMENT155=null;

        CommonTree DECREMENT155_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:339:2: ( DECREMENT )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:339:4: DECREMENT
            {
            root_0 = (CommonTree)adaptor.nil();

            DECREMENT155=(Token)match(input,DECREMENT,FOLLOW_DECREMENT_in_post_decrement_expression1534); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            DECREMENT155_tree = (CommonTree)adaptor.create(DECREMENT155);
            adaptor.addChild(root_0, DECREMENT155_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, post_decrement_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "post_decrement_expression"

    public static class element_access_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "element_access"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:341:1: element_access : LBRACKET expression ( slice_array )? RBRACKET ;
    public final ValaParser.element_access_return element_access() throws RecognitionException {
        ValaParser.element_access_return retval = new ValaParser.element_access_return();
        retval.start = input.LT(1);
        int element_access_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LBRACKET156=null;
        Token RBRACKET159=null;
        ValaParser.expression_return expression157 = null;

        ValaParser.slice_array_return slice_array158 = null;


        CommonTree LBRACKET156_tree=null;
        CommonTree RBRACKET159_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:342:2: ( LBRACKET expression ( slice_array )? RBRACKET )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:343:2: LBRACKET expression ( slice_array )? RBRACKET
            {
            root_0 = (CommonTree)adaptor.nil();

            LBRACKET156=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_element_access1545); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LBRACKET156_tree = (CommonTree)adaptor.create(LBRACKET156);
            adaptor.addChild(root_0, LBRACKET156_tree);
            }
            pushFollow(FOLLOW_expression_in_element_access1549);
            expression157=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression157.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:345:2: ( slice_array )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==COLON) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:345:3: slice_array
                    {
                    pushFollow(FOLLOW_slice_array_in_element_access1553);
                    slice_array158=slice_array();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, slice_array158.getTree());

                    }
                    break;

            }

            RBRACKET159=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_element_access1558); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RBRACKET159_tree = (CommonTree)adaptor.create(RBRACKET159);
            adaptor.addChild(root_0, RBRACKET159_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, element_access_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "element_access"

    public static class slice_array_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "slice_array"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:348:1: slice_array : COLON expression ;
    public final ValaParser.slice_array_return slice_array() throws RecognitionException {
        ValaParser.slice_array_return retval = new ValaParser.slice_array_return();
        retval.start = input.LT(1);
        int slice_array_StartIndex = input.index();
        CommonTree root_0 = null;

        Token COLON160=null;
        ValaParser.expression_return expression161 = null;


        CommonTree COLON160_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:349:2: ( COLON expression )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:350:2: COLON expression
            {
            root_0 = (CommonTree)adaptor.nil();

            COLON160=(Token)match(input,COLON,FOLLOW_COLON_in_slice_array1569); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COLON160_tree = (CommonTree)adaptor.create(COLON160);
            adaptor.addChild(root_0, COLON160_tree);
            }
            pushFollow(FOLLOW_expression_in_slice_array1573);
            expression161=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression161.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, slice_array_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "slice_array"

    public static class pointer_member_access_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "pointer_member_access"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:353:1: pointer_member_access : POINTER_ACCESS identifier ( type_arguments )? ;
    public final ValaParser.pointer_member_access_return pointer_member_access() throws RecognitionException {
        ValaParser.pointer_member_access_return retval = new ValaParser.pointer_member_access_return();
        retval.start = input.LT(1);
        int pointer_member_access_StartIndex = input.index();
        CommonTree root_0 = null;

        Token POINTER_ACCESS162=null;
        ValaParser.identifier_return identifier163 = null;

        ValaParser.type_arguments_return type_arguments164 = null;


        CommonTree POINTER_ACCESS162_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:354:2: ( POINTER_ACCESS identifier ( type_arguments )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:355:2: POINTER_ACCESS identifier ( type_arguments )?
            {
            root_0 = (CommonTree)adaptor.nil();

            POINTER_ACCESS162=(Token)match(input,POINTER_ACCESS,FOLLOW_POINTER_ACCESS_in_pointer_member_access1585); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            POINTER_ACCESS162_tree = (CommonTree)adaptor.create(POINTER_ACCESS162);
            adaptor.addChild(root_0, POINTER_ACCESS162_tree);
            }
            pushFollow(FOLLOW_identifier_in_pointer_member_access1589);
            identifier163=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier163.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:357:2: ( type_arguments )?
            int alt46=2;
            alt46 = dfa46.predict(input);
            switch (alt46) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:357:3: type_arguments
                    {
                    pushFollow(FOLLOW_type_arguments_in_pointer_member_access1593);
                    type_arguments164=type_arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_arguments164.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, pointer_member_access_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "pointer_member_access"

    public static class literal_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "literal"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:359:1: literal : ( boolean_literal | null_literal | open_regex_literal | vertbatim_string_literal | integer_literal | hex_literal | real_literal | char_literal | string_literal );
    public final ValaParser.literal_return literal() throws RecognitionException {
        ValaParser.literal_return retval = new ValaParser.literal_return();
        retval.start = input.LT(1);
        int literal_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.boolean_literal_return boolean_literal165 = null;

        ValaParser.null_literal_return null_literal166 = null;

        ValaParser.open_regex_literal_return open_regex_literal167 = null;

        ValaParser.vertbatim_string_literal_return vertbatim_string_literal168 = null;

        ValaParser.integer_literal_return integer_literal169 = null;

        ValaParser.hex_literal_return hex_literal170 = null;

        ValaParser.real_literal_return real_literal171 = null;

        ValaParser.char_literal_return char_literal172 = null;

        ValaParser.string_literal_return string_literal173 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:360:2: ( boolean_literal | null_literal | open_regex_literal | vertbatim_string_literal | integer_literal | hex_literal | real_literal | char_literal | string_literal )
            int alt47=9;
            switch ( input.LA(1) ) {
            case KW_TRUE:
            case KW_FALSE:
                {
                alt47=1;
                }
                break;
            case KW_NULL:
                {
                alt47=2;
                }
                break;
            case REGEX_LITERAL:
                {
                alt47=3;
                }
                break;
            case VERBATIM_LITERAL:
                {
                alt47=4;
                }
                break;
            case INTEGER:
                {
                alt47=5;
                }
                break;
            case HEX:
                {
                alt47=6;
                }
                break;
            case REAL:
                {
                alt47=7;
                }
                break;
            case CHAR:
                {
                alt47=8;
                }
                break;
            case STRING:
                {
                alt47=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }

            switch (alt47) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:361:2: boolean_literal
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_boolean_literal_in_literal1606);
                    boolean_literal165=boolean_literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_literal165.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:362:4: null_literal
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_null_literal_in_literal1612);
                    null_literal166=null_literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, null_literal166.getTree());

                    }
                    break;
                case 3 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:363:4: open_regex_literal
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_open_regex_literal_in_literal1618);
                    open_regex_literal167=open_regex_literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, open_regex_literal167.getTree());

                    }
                    break;
                case 4 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:364:4: vertbatim_string_literal
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_vertbatim_string_literal_in_literal1624);
                    vertbatim_string_literal168=vertbatim_string_literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, vertbatim_string_literal168.getTree());

                    }
                    break;
                case 5 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:365:4: integer_literal
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_integer_literal_in_literal1630);
                    integer_literal169=integer_literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, integer_literal169.getTree());

                    }
                    break;
                case 6 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:366:4: hex_literal
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_hex_literal_in_literal1635);
                    hex_literal170=hex_literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, hex_literal170.getTree());

                    }
                    break;
                case 7 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:367:4: real_literal
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_real_literal_in_literal1641);
                    real_literal171=real_literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, real_literal171.getTree());

                    }
                    break;
                case 8 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:368:4: char_literal
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_char_literal_in_literal1646);
                    char_literal172=char_literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, char_literal172.getTree());

                    }
                    break;
                case 9 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:369:4: string_literal
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_string_literal_in_literal1651);
                    string_literal173=string_literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, string_literal173.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, literal_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "literal"

    public static class integer_literal_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "integer_literal"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:372:1: integer_literal : INTEGER ;
    public final ValaParser.integer_literal_return integer_literal() throws RecognitionException {
        ValaParser.integer_literal_return retval = new ValaParser.integer_literal_return();
        retval.start = input.LT(1);
        int integer_literal_StartIndex = input.index();
        CommonTree root_0 = null;

        Token INTEGER174=null;

        CommonTree INTEGER174_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:373:2: ( INTEGER )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:374:2: INTEGER
            {
            root_0 = (CommonTree)adaptor.nil();

            INTEGER174=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_integer_literal1666); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            INTEGER174_tree = (CommonTree)adaptor.create(INTEGER174);
            adaptor.addChild(root_0, INTEGER174_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, integer_literal_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "integer_literal"

    public static class real_literal_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "real_literal"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:376:1: real_literal : REAL ;
    public final ValaParser.real_literal_return real_literal() throws RecognitionException {
        ValaParser.real_literal_return retval = new ValaParser.real_literal_return();
        retval.start = input.LT(1);
        int real_literal_StartIndex = input.index();
        CommonTree root_0 = null;

        Token REAL175=null;

        CommonTree REAL175_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:377:2: ( REAL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:378:2: REAL
            {
            root_0 = (CommonTree)adaptor.nil();

            REAL175=(Token)match(input,REAL,FOLLOW_REAL_in_real_literal1678); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            REAL175_tree = (CommonTree)adaptor.create(REAL175);
            adaptor.addChild(root_0, REAL175_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, real_literal_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "real_literal"

    public static class string_literal_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "string_literal"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:380:1: string_literal : STRING ;
    public final ValaParser.string_literal_return string_literal() throws RecognitionException {
        ValaParser.string_literal_return retval = new ValaParser.string_literal_return();
        retval.start = input.LT(1);
        int string_literal_StartIndex = input.index();
        CommonTree root_0 = null;

        Token STRING176=null;

        CommonTree STRING176_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:381:2: ( STRING )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:382:2: STRING
            {
            root_0 = (CommonTree)adaptor.nil();

            STRING176=(Token)match(input,STRING,FOLLOW_STRING_in_string_literal1689); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            STRING176_tree = (CommonTree)adaptor.create(STRING176);
            adaptor.addChild(root_0, STRING176_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, string_literal_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "string_literal"

    public static class hex_literal_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "hex_literal"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:384:1: hex_literal : HEX ;
    public final ValaParser.hex_literal_return hex_literal() throws RecognitionException {
        ValaParser.hex_literal_return retval = new ValaParser.hex_literal_return();
        retval.start = input.LT(1);
        int hex_literal_StartIndex = input.index();
        CommonTree root_0 = null;

        Token HEX177=null;

        CommonTree HEX177_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:385:2: ( HEX )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:386:2: HEX
            {
            root_0 = (CommonTree)adaptor.nil();

            HEX177=(Token)match(input,HEX,FOLLOW_HEX_in_hex_literal1701); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            HEX177_tree = (CommonTree)adaptor.create(HEX177);
            adaptor.addChild(root_0, HEX177_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, hex_literal_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "hex_literal"

    public static class boolean_literal_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "boolean_literal"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:388:1: boolean_literal : ( KW_TRUE | KW_FALSE );
    public final ValaParser.boolean_literal_return boolean_literal() throws RecognitionException {
        ValaParser.boolean_literal_return retval = new ValaParser.boolean_literal_return();
        retval.start = input.LT(1);
        int boolean_literal_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set178=null;

        CommonTree set178_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:389:2: ( KW_TRUE | KW_FALSE )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set178=(Token)input.LT(1);
            if ( (input.LA(1)>=KW_TRUE && input.LA(1)<=KW_FALSE) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set178));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, boolean_literal_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "boolean_literal"

    public static class null_literal_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "null_literal"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:391:1: null_literal : KW_NULL ;
    public final ValaParser.null_literal_return null_literal() throws RecognitionException {
        ValaParser.null_literal_return retval = new ValaParser.null_literal_return();
        retval.start = input.LT(1);
        int null_literal_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_NULL179=null;

        CommonTree KW_NULL179_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:392:2: ( KW_NULL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:392:4: KW_NULL
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_NULL179=(Token)match(input,KW_NULL,FOLLOW_KW_NULL_in_null_literal1723); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_NULL179_tree = (CommonTree)adaptor.create(KW_NULL179);
            adaptor.addChild(root_0, KW_NULL179_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, null_literal_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "null_literal"

    public static class char_literal_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "char_literal"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:394:1: char_literal : CHAR ;
    public final ValaParser.char_literal_return char_literal() throws RecognitionException {
        ValaParser.char_literal_return retval = new ValaParser.char_literal_return();
        retval.start = input.LT(1);
        int char_literal_StartIndex = input.index();
        CommonTree root_0 = null;

        Token CHAR180=null;

        CommonTree CHAR180_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:395:2: ( CHAR )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:396:2: CHAR
            {
            root_0 = (CommonTree)adaptor.nil();

            CHAR180=(Token)match(input,CHAR,FOLLOW_CHAR_in_char_literal1735); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            CHAR180_tree = (CommonTree)adaptor.create(CHAR180);
            adaptor.addChild(root_0, CHAR180_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, char_literal_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "char_literal"

    public static class open_regex_literal_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "open_regex_literal"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:398:1: open_regex_literal : REGEX_LITERAL ;
    public final ValaParser.open_regex_literal_return open_regex_literal() throws RecognitionException {
        ValaParser.open_regex_literal_return retval = new ValaParser.open_regex_literal_return();
        retval.start = input.LT(1);
        int open_regex_literal_StartIndex = input.index();
        CommonTree root_0 = null;

        Token REGEX_LITERAL181=null;

        CommonTree REGEX_LITERAL181_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:399:2: ( REGEX_LITERAL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:400:2: REGEX_LITERAL
            {
            root_0 = (CommonTree)adaptor.nil();

            REGEX_LITERAL181=(Token)match(input,REGEX_LITERAL,FOLLOW_REGEX_LITERAL_in_open_regex_literal1746); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            REGEX_LITERAL181_tree = (CommonTree)adaptor.create(REGEX_LITERAL181);
            adaptor.addChild(root_0, REGEX_LITERAL181_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, open_regex_literal_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "open_regex_literal"

    public static class vertbatim_string_literal_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "vertbatim_string_literal"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:402:1: vertbatim_string_literal : VERBATIM_LITERAL ;
    public final ValaParser.vertbatim_string_literal_return vertbatim_string_literal() throws RecognitionException {
        ValaParser.vertbatim_string_literal_return retval = new ValaParser.vertbatim_string_literal_return();
        retval.start = input.LT(1);
        int vertbatim_string_literal_StartIndex = input.index();
        CommonTree root_0 = null;

        Token VERBATIM_LITERAL182=null;

        CommonTree VERBATIM_LITERAL182_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:403:2: ( VERBATIM_LITERAL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:404:2: VERBATIM_LITERAL
            {
            root_0 = (CommonTree)adaptor.nil();

            VERBATIM_LITERAL182=(Token)match(input,VERBATIM_LITERAL,FOLLOW_VERBATIM_LITERAL_in_vertbatim_string_literal1757); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            VERBATIM_LITERAL182_tree = (CommonTree)adaptor.create(VERBATIM_LITERAL182);
            adaptor.addChild(root_0, VERBATIM_LITERAL182_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, vertbatim_string_literal_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "vertbatim_string_literal"

    public static class initializer_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "initializer"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:406:1: initializer : LCURL ( argument ( COMMA argument )* )? RCURL ;
    public final ValaParser.initializer_return initializer() throws RecognitionException {
        ValaParser.initializer_return retval = new ValaParser.initializer_return();
        retval.start = input.LT(1);
        int initializer_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LCURL183=null;
        Token COMMA185=null;
        Token RCURL187=null;
        ValaParser.argument_return argument184 = null;

        ValaParser.argument_return argument186 = null;


        CommonTree LCURL183_tree=null;
        CommonTree COMMA185_tree=null;
        CommonTree RCURL187_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:407:2: ( LCURL ( argument ( COMMA argument )* )? RCURL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:408:2: LCURL ( argument ( COMMA argument )* )? RCURL
            {
            root_0 = (CommonTree)adaptor.nil();

            LCURL183=(Token)match(input,LCURL,FOLLOW_LCURL_in_initializer1769); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LCURL183_tree = (CommonTree)adaptor.create(LCURL183);
            adaptor.addChild(root_0, LCURL183_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:409:3: ( argument ( COMMA argument )* )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==KW_USING||(LA49_0>=GLOBAL_NS && LA49_0<=IDENTIFIER)||LA49_0==LPAREN||LA49_0==KW_IN||LA49_0==AND||(LA49_0>=KW_IS && LA49_0<=KW_WEAK)||(LA49_0>=PLUS && LA49_0<=MINUS)||(LA49_0>=NOT && LA49_0<=KW_REQUIRES)||(LA49_0>=KW_OUT && LA49_0<=KW_REF)||(LA49_0>=INTEGER && LA49_0<=LCURL)||LA49_0==TEMPLATE_START||(LA49_0>=KW_THIS && LA49_0<=KW_BASE)) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:409:4: argument ( COMMA argument )*
                    {
                    pushFollow(FOLLOW_argument_in_initializer1775);
                    argument184=argument();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, argument184.getTree());
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:410:3: ( COMMA argument )*
                    loop48:
                    do {
                        int alt48=2;
                        int LA48_0 = input.LA(1);

                        if ( (LA48_0==COMMA) ) {
                            alt48=1;
                        }


                        switch (alt48) {
                    	case 1 :
                    	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:410:4: COMMA argument
                    	    {
                    	    COMMA185=(Token)match(input,COMMA,FOLLOW_COMMA_in_initializer1781); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    COMMA185_tree = (CommonTree)adaptor.create(COMMA185);
                    	    adaptor.addChild(root_0, COMMA185_tree);
                    	    }
                    	    pushFollow(FOLLOW_argument_in_initializer1783);
                    	    argument186=argument();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, argument186.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop48;
                        }
                    } while (true);


                    }
                    break;

            }

            RCURL187=(Token)match(input,RCURL,FOLLOW_RCURL_in_initializer1790); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RCURL187_tree = (CommonTree)adaptor.create(RCURL187);
            adaptor.addChild(root_0, RCURL187_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "initializer"

    public static class arguments_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "arguments"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:413:1: arguments : argument ( COMMA argument )* ;
    public final ValaParser.arguments_return arguments() throws RecognitionException {
        ValaParser.arguments_return retval = new ValaParser.arguments_return();
        retval.start = input.LT(1);
        int arguments_StartIndex = input.index();
        CommonTree root_0 = null;

        Token COMMA189=null;
        ValaParser.argument_return argument188 = null;

        ValaParser.argument_return argument190 = null;


        CommonTree COMMA189_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:414:2: ( argument ( COMMA argument )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:415:2: argument ( COMMA argument )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_argument_in_arguments1802);
            argument188=argument();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, argument188.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:416:2: ( COMMA argument )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==COMMA) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:416:3: COMMA argument
            	    {
            	    COMMA189=(Token)match(input,COMMA,FOLLOW_COMMA_in_arguments1807); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA189_tree = (CommonTree)adaptor.create(COMMA189);
            	    adaptor.addChild(root_0, COMMA189_tree);
            	    }
            	    pushFollow(FOLLOW_argument_in_arguments1809);
            	    argument190=argument();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, argument190.getTree());

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, arguments_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "arguments"

    public static class argument_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "argument"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:418:1: argument : ( identifier COLON )? ( ( KW_REF ) | ( KW_OUT ) )? expression ;
    public final ValaParser.argument_return argument() throws RecognitionException {
        ValaParser.argument_return retval = new ValaParser.argument_return();
        retval.start = input.LT(1);
        int argument_StartIndex = input.index();
        CommonTree root_0 = null;

        Token COLON192=null;
        Token KW_REF193=null;
        Token KW_OUT194=null;
        ValaParser.identifier_return identifier191 = null;

        ValaParser.expression_return expression195 = null;


        CommonTree COLON192_tree=null;
        CommonTree KW_REF193_tree=null;
        CommonTree KW_OUT194_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:419:2: ( ( identifier COLON )? ( ( KW_REF ) | ( KW_OUT ) )? expression )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:420:2: ( identifier COLON )? ( ( KW_REF ) | ( KW_OUT ) )? expression
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:420:2: ( identifier COLON )?
            int alt51=2;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:421:3: identifier COLON
                    {
                    pushFollow(FOLLOW_identifier_in_argument1826);
                    identifier191=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier191.getTree());
                    COLON192=(Token)match(input,COLON,FOLLOW_COLON_in_argument1830); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON192_tree = (CommonTree)adaptor.create(COLON192);
                    adaptor.addChild(root_0, COLON192_tree);
                    }

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:2: ( ( KW_REF ) | ( KW_OUT ) )?
            int alt52=3;
            alt52 = dfa52.predict(input);
            switch (alt52) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:3: ( KW_REF )
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:3: ( KW_REF )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:4: KW_REF
                    {
                    KW_REF193=(Token)match(input,KW_REF,FOLLOW_KW_REF_in_argument1840); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_REF193_tree = (CommonTree)adaptor.create(KW_REF193);
                    adaptor.addChild(root_0, KW_REF193_tree);
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:14: ( KW_OUT )
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:14: ( KW_OUT )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:15: KW_OUT
                    {
                    KW_OUT194=(Token)match(input,KW_OUT,FOLLOW_KW_OUT_in_argument1846); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_OUT194_tree = (CommonTree)adaptor.create(KW_OUT194);
                    adaptor.addChild(root_0, KW_OUT194_tree);
                    }

                    }


                    }
                    break;

            }

            pushFollow(FOLLOW_expression_in_argument1852);
            expression195=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression195.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, argument_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "argument"

    public static class tuple_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "tuple"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:427:1: tuple : LPAREN expression ( COMMA expression )* RPAREN ;
    public final ValaParser.tuple_return tuple() throws RecognitionException {
        ValaParser.tuple_return retval = new ValaParser.tuple_return();
        retval.start = input.LT(1);
        int tuple_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LPAREN196=null;
        Token COMMA198=null;
        Token RPAREN200=null;
        ValaParser.expression_return expression197 = null;

        ValaParser.expression_return expression199 = null;


        CommonTree LPAREN196_tree=null;
        CommonTree COMMA198_tree=null;
        CommonTree RPAREN200_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:428:2: ( LPAREN expression ( COMMA expression )* RPAREN )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:429:2: LPAREN expression ( COMMA expression )* RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            LPAREN196=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_tuple1864); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN196_tree = (CommonTree)adaptor.create(LPAREN196);
            adaptor.addChild(root_0, LPAREN196_tree);
            }
            pushFollow(FOLLOW_expression_in_tuple1868);
            expression197=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression197.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:431:2: ( COMMA expression )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==COMMA) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:432:3: COMMA expression
            	    {
            	    COMMA198=(Token)match(input,COMMA,FOLLOW_COMMA_in_tuple1876); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA198_tree = (CommonTree)adaptor.create(COMMA198);
            	    adaptor.addChild(root_0, COMMA198_tree);
            	    }
            	    pushFollow(FOLLOW_expression_in_tuple1881);
            	    expression199=expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression199.getTree());

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            RPAREN200=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_tuple1889); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN200_tree = (CommonTree)adaptor.create(RPAREN200);
            adaptor.addChild(root_0, RPAREN200_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, tuple_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "tuple"

    public static class template_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "template"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:437:1: template : TEMPLATE_START ( expression COMMA )* QUOT ;
    public final ValaParser.template_return template() throws RecognitionException {
        ValaParser.template_return retval = new ValaParser.template_return();
        retval.start = input.LT(1);
        int template_StartIndex = input.index();
        CommonTree root_0 = null;

        Token TEMPLATE_START201=null;
        Token COMMA203=null;
        Token QUOT204=null;
        ValaParser.expression_return expression202 = null;


        CommonTree TEMPLATE_START201_tree=null;
        CommonTree COMMA203_tree=null;
        CommonTree QUOT204_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:438:2: ( TEMPLATE_START ( expression COMMA )* QUOT )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:439:2: TEMPLATE_START ( expression COMMA )* QUOT
            {
            root_0 = (CommonTree)adaptor.nil();

            TEMPLATE_START201=(Token)match(input,TEMPLATE_START,FOLLOW_TEMPLATE_START_in_template1900); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            TEMPLATE_START201_tree = (CommonTree)adaptor.create(TEMPLATE_START201);
            adaptor.addChild(root_0, TEMPLATE_START201_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:440:2: ( expression COMMA )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==KW_USING||(LA54_0>=GLOBAL_NS && LA54_0<=IDENTIFIER)||LA54_0==LPAREN||LA54_0==KW_IN||LA54_0==AND||(LA54_0>=KW_IS && LA54_0<=KW_WEAK)||(LA54_0>=PLUS && LA54_0<=MINUS)||(LA54_0>=NOT && LA54_0<=KW_REQUIRES)||(LA54_0>=INTEGER && LA54_0<=LCURL)||LA54_0==TEMPLATE_START||(LA54_0>=KW_THIS && LA54_0<=KW_BASE)) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:440:3: expression COMMA
            	    {
            	    pushFollow(FOLLOW_expression_in_template1904);
            	    expression202=expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression202.getTree());
            	    COMMA203=(Token)match(input,COMMA,FOLLOW_COMMA_in_template1906); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA203_tree = (CommonTree)adaptor.create(COMMA203);
            	    adaptor.addChild(root_0, COMMA203_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            QUOT204=(Token)match(input,QUOT,FOLLOW_QUOT_in_template1911); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            QUOT204_tree = (CommonTree)adaptor.create(QUOT204);
            adaptor.addChild(root_0, QUOT204_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, template_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "template"

    public static class this_access_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "this_access"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:443:1: this_access : KW_THIS ;
    public final ValaParser.this_access_return this_access() throws RecognitionException {
        ValaParser.this_access_return retval = new ValaParser.this_access_return();
        retval.start = input.LT(1);
        int this_access_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_THIS205=null;

        CommonTree KW_THIS205_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:444:2: ( KW_THIS )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:444:4: KW_THIS
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_THIS205=(Token)match(input,KW_THIS,FOLLOW_KW_THIS_in_this_access1922); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_THIS205_tree = (CommonTree)adaptor.create(KW_THIS205);
            adaptor.addChild(root_0, KW_THIS205_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 54, this_access_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "this_access"

    public static class base_access_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "base_access"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:446:1: base_access : KW_BASE ;
    public final ValaParser.base_access_return base_access() throws RecognitionException {
        ValaParser.base_access_return retval = new ValaParser.base_access_return();
        retval.start = input.LT(1);
        int base_access_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_BASE206=null;

        CommonTree KW_BASE206_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:447:2: ( KW_BASE )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:447:4: KW_BASE
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_BASE206=(Token)match(input,KW_BASE,FOLLOW_KW_BASE_in_base_access1932); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_BASE206_tree = (CommonTree)adaptor.create(KW_BASE206);
            adaptor.addChild(root_0, KW_BASE206_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 55, base_access_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "base_access"

    public static class object_or_array_creation_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "object_or_array_creation_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:449:1: object_or_array_creation_expression : KW_NEW member ( object_creation_expression | array_creation_expression ) ;
    public final ValaParser.object_or_array_creation_expression_return object_or_array_creation_expression() throws RecognitionException {
        ValaParser.object_or_array_creation_expression_return retval = new ValaParser.object_or_array_creation_expression_return();
        retval.start = input.LT(1);
        int object_or_array_creation_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_NEW207=null;
        ValaParser.member_return member208 = null;

        ValaParser.object_creation_expression_return object_creation_expression209 = null;

        ValaParser.array_creation_expression_return array_creation_expression210 = null;


        CommonTree KW_NEW207_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:450:2: ( KW_NEW member ( object_creation_expression | array_creation_expression ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:451:2: KW_NEW member ( object_creation_expression | array_creation_expression )
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_NEW207=(Token)match(input,KW_NEW,FOLLOW_KW_NEW_in_object_or_array_creation_expression1944); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_NEW207_tree = (CommonTree)adaptor.create(KW_NEW207);
            adaptor.addChild(root_0, KW_NEW207_tree);
            }
            pushFollow(FOLLOW_member_in_object_or_array_creation_expression1948);
            member208=member();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, member208.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:453:2: ( object_creation_expression | array_creation_expression )
            int alt55=2;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:453:4: object_creation_expression
                    {
                    pushFollow(FOLLOW_object_creation_expression_in_object_or_array_creation_expression1954);
                    object_creation_expression209=object_creation_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, object_creation_expression209.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:453:33: array_creation_expression
                    {
                    pushFollow(FOLLOW_array_creation_expression_in_object_or_array_creation_expression1958);
                    array_creation_expression210=array_creation_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, array_creation_expression210.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 56, object_or_array_creation_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "object_or_array_creation_expression"

    public static class object_creation_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "object_creation_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:455:1: object_creation_expression : LPAREN ( arguments )? RPAREN ( object_initializer )? ;
    public final ValaParser.object_creation_expression_return object_creation_expression() throws RecognitionException {
        ValaParser.object_creation_expression_return retval = new ValaParser.object_creation_expression_return();
        retval.start = input.LT(1);
        int object_creation_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LPAREN211=null;
        Token RPAREN213=null;
        ValaParser.arguments_return arguments212 = null;

        ValaParser.object_initializer_return object_initializer214 = null;


        CommonTree LPAREN211_tree=null;
        CommonTree RPAREN213_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:456:2: ( LPAREN ( arguments )? RPAREN ( object_initializer )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:457:2: LPAREN ( arguments )? RPAREN ( object_initializer )?
            {
            root_0 = (CommonTree)adaptor.nil();

            LPAREN211=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_object_creation_expression1972); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN211_tree = (CommonTree)adaptor.create(LPAREN211);
            adaptor.addChild(root_0, LPAREN211_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:458:2: ( arguments )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==KW_USING||(LA56_0>=GLOBAL_NS && LA56_0<=IDENTIFIER)||LA56_0==LPAREN||LA56_0==KW_IN||LA56_0==AND||(LA56_0>=KW_IS && LA56_0<=KW_WEAK)||(LA56_0>=PLUS && LA56_0<=MINUS)||(LA56_0>=NOT && LA56_0<=KW_REQUIRES)||(LA56_0>=KW_OUT && LA56_0<=KW_REF)||(LA56_0>=INTEGER && LA56_0<=LCURL)||LA56_0==TEMPLATE_START||(LA56_0>=KW_THIS && LA56_0<=KW_BASE)) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:458:4: arguments
                    {
                    pushFollow(FOLLOW_arguments_in_object_creation_expression1979);
                    arguments212=arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments212.getTree());

                    }
                    break;

            }

            RPAREN213=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_object_creation_expression1986); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN213_tree = (CommonTree)adaptor.create(RPAREN213);
            adaptor.addChild(root_0, RPAREN213_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:460:2: ( object_initializer )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==LCURL) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:460:4: object_initializer
                    {
                    pushFollow(FOLLOW_object_initializer_in_object_creation_expression1993);
                    object_initializer214=object_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, object_initializer214.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 57, object_creation_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "object_creation_expression"

    public static class object_initializer_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "object_initializer"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:462:1: object_initializer : LCURL member_initializer ( COMMA member_initializer )? RCURL ;
    public final ValaParser.object_initializer_return object_initializer() throws RecognitionException {
        ValaParser.object_initializer_return retval = new ValaParser.object_initializer_return();
        retval.start = input.LT(1);
        int object_initializer_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LCURL215=null;
        Token COMMA217=null;
        Token RCURL219=null;
        ValaParser.member_initializer_return member_initializer216 = null;

        ValaParser.member_initializer_return member_initializer218 = null;


        CommonTree LCURL215_tree=null;
        CommonTree COMMA217_tree=null;
        CommonTree RCURL219_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:463:2: ( LCURL member_initializer ( COMMA member_initializer )? RCURL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:464:2: LCURL member_initializer ( COMMA member_initializer )? RCURL
            {
            root_0 = (CommonTree)adaptor.nil();

            LCURL215=(Token)match(input,LCURL,FOLLOW_LCURL_in_object_initializer2008); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LCURL215_tree = (CommonTree)adaptor.create(LCURL215);
            adaptor.addChild(root_0, LCURL215_tree);
            }
            pushFollow(FOLLOW_member_initializer_in_object_initializer2012);
            member_initializer216=member_initializer();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, member_initializer216.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:466:2: ( COMMA member_initializer )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==COMMA) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:467:3: COMMA member_initializer
                    {
                    COMMA217=(Token)match(input,COMMA,FOLLOW_COMMA_in_object_initializer2020); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA217_tree = (CommonTree)adaptor.create(COMMA217);
                    adaptor.addChild(root_0, COMMA217_tree);
                    }
                    pushFollow(FOLLOW_member_initializer_in_object_initializer2024);
                    member_initializer218=member_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_initializer218.getTree());

                    }
                    break;

            }

            RCURL219=(Token)match(input,RCURL,FOLLOW_RCURL_in_object_initializer2032); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RCURL219_tree = (CommonTree)adaptor.create(RCURL219);
            adaptor.addChild(root_0, RCURL219_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 58, object_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "object_initializer"

    public static class member_initializer_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "member_initializer"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:472:1: member_initializer : identifier ASSIGNMENT expression ;
    public final ValaParser.member_initializer_return member_initializer() throws RecognitionException {
        ValaParser.member_initializer_return retval = new ValaParser.member_initializer_return();
        retval.start = input.LT(1);
        int member_initializer_StartIndex = input.index();
        CommonTree root_0 = null;

        Token ASSIGNMENT221=null;
        ValaParser.identifier_return identifier220 = null;

        ValaParser.expression_return expression222 = null;


        CommonTree ASSIGNMENT221_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:473:2: ( identifier ASSIGNMENT expression )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:473:4: identifier ASSIGNMENT expression
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_member_initializer2042);
            identifier220=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier220.getTree());
            ASSIGNMENT221=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_member_initializer2044); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGNMENT221_tree = (CommonTree)adaptor.create(ASSIGNMENT221);
            adaptor.addChild(root_0, ASSIGNMENT221_tree);
            }
            pushFollow(FOLLOW_expression_in_member_initializer2046);
            expression222=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression222.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 59, member_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "member_initializer"

    public static class array_creation_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "array_creation_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:475:1: array_creation_expression : ( LBRACKET RBRACKET )* ( LBRACKET ( array_size )? RBRACKET )? ( initializer )? ;
    public final ValaParser.array_creation_expression_return array_creation_expression() throws RecognitionException {
        ValaParser.array_creation_expression_return retval = new ValaParser.array_creation_expression_return();
        retval.start = input.LT(1);
        int array_creation_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LBRACKET223=null;
        Token RBRACKET224=null;
        Token LBRACKET225=null;
        Token RBRACKET227=null;
        ValaParser.array_size_return array_size226 = null;

        ValaParser.initializer_return initializer228 = null;


        CommonTree LBRACKET223_tree=null;
        CommonTree RBRACKET224_tree=null;
        CommonTree LBRACKET225_tree=null;
        CommonTree RBRACKET227_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:476:2: ( ( LBRACKET RBRACKET )* ( LBRACKET ( array_size )? RBRACKET )? ( initializer )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:477:2: ( LBRACKET RBRACKET )* ( LBRACKET ( array_size )? RBRACKET )? ( initializer )?
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:477:2: ( LBRACKET RBRACKET )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==LBRACKET) ) {
                    int LA59_1 = input.LA(2);

                    if ( (LA59_1==RBRACKET) ) {
                        int LA59_3 = input.LA(3);

                        if ( (synpred172_Vala()) ) {
                            alt59=1;
                        }


                    }


                }


                switch (alt59) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:478:3: LBRACKET RBRACKET
            	    {
            	    LBRACKET223=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_array_creation_expression2062); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    LBRACKET223_tree = (CommonTree)adaptor.create(LBRACKET223);
            	    adaptor.addChild(root_0, LBRACKET223_tree);
            	    }
            	    RBRACKET224=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_array_creation_expression2068); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    RBRACKET224_tree = (CommonTree)adaptor.create(RBRACKET224);
            	    adaptor.addChild(root_0, RBRACKET224_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:481:2: ( LBRACKET ( array_size )? RBRACKET )?
            int alt61=2;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:482:3: LBRACKET ( array_size )? RBRACKET
                    {
                    LBRACKET225=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_array_creation_expression2080); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LBRACKET225_tree = (CommonTree)adaptor.create(LBRACKET225);
                    adaptor.addChild(root_0, LBRACKET225_tree);
                    }
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:483:3: ( array_size )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==KW_USING||(LA60_0>=GLOBAL_NS && LA60_0<=IDENTIFIER)||LA60_0==LPAREN||LA60_0==KW_IN||LA60_0==AND||(LA60_0>=KW_IS && LA60_0<=KW_WEAK)||(LA60_0>=PLUS && LA60_0<=MINUS)||(LA60_0>=NOT && LA60_0<=KW_REQUIRES)||(LA60_0>=INTEGER && LA60_0<=LCURL)||LA60_0==TEMPLATE_START||(LA60_0>=KW_THIS && LA60_0<=KW_BASE)) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:483:4: array_size
                            {
                            pushFollow(FOLLOW_array_size_in_array_creation_expression2087);
                            array_size226=array_size();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, array_size226.getTree());

                            }
                            break;

                    }

                    RBRACKET227=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_array_creation_expression2094); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RBRACKET227_tree = (CommonTree)adaptor.create(RBRACKET227);
                    adaptor.addChild(root_0, RBRACKET227_tree);
                    }

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:486:2: ( initializer )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==LCURL) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:486:3: initializer
                    {
                    pushFollow(FOLLOW_initializer_in_array_creation_expression2103);
                    initializer228=initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, initializer228.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 60, array_creation_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "array_creation_expression"

    public static class array_size_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "array_size"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:488:1: array_size : expression ( COMMA expression )* ;
    public final ValaParser.array_size_return array_size() throws RecognitionException {
        ValaParser.array_size_return retval = new ValaParser.array_size_return();
        retval.start = input.LT(1);
        int array_size_StartIndex = input.index();
        CommonTree root_0 = null;

        Token COMMA230=null;
        ValaParser.expression_return expression229 = null;

        ValaParser.expression_return expression231 = null;


        CommonTree COMMA230_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:489:2: ( expression ( COMMA expression )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:490:2: expression ( COMMA expression )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_expression_in_array_size2117);
            expression229=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression229.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:491:2: ( COMMA expression )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==COMMA) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:491:3: COMMA expression
            	    {
            	    COMMA230=(Token)match(input,COMMA,FOLLOW_COMMA_in_array_size2122); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA230_tree = (CommonTree)adaptor.create(COMMA230);
            	    adaptor.addChild(root_0, COMMA230_tree);
            	    }
            	    pushFollow(FOLLOW_expression_in_array_size2124);
            	    expression231=expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression231.getTree());

            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 61, array_size_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "array_size"

    public static class member_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "member"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:493:1: member : ( GLOBAL_NS identifier | identifier ) ( type_arguments )? ( member_access )* ;
    public final ValaParser.member_return member() throws RecognitionException {
        ValaParser.member_return retval = new ValaParser.member_return();
        retval.start = input.LT(1);
        int member_StartIndex = input.index();
        CommonTree root_0 = null;

        Token GLOBAL_NS232=null;
        ValaParser.identifier_return identifier233 = null;

        ValaParser.identifier_return identifier234 = null;

        ValaParser.type_arguments_return type_arguments235 = null;

        ValaParser.member_access_return member_access236 = null;


        CommonTree GLOBAL_NS232_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:494:2: ( ( GLOBAL_NS identifier | identifier ) ( type_arguments )? ( member_access )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:495:2: ( GLOBAL_NS identifier | identifier ) ( type_arguments )? ( member_access )*
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:495:2: ( GLOBAL_NS identifier | identifier )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==GLOBAL_NS) ) {
                alt64=1;
            }
            else if ( (LA64_0==KW_USING||LA64_0==IDENTIFIER||LA64_0==KW_IN||(LA64_0>=KW_IS && LA64_0<=KW_VOID)||(LA64_0>=KW_DYNAMIC && LA64_0<=KW_WEAK)||(LA64_0>=KW_CONSTRUCT && LA64_0<=KW_REQUIRES)) ) {
                alt64=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:496:3: GLOBAL_NS identifier
                    {
                    GLOBAL_NS232=(Token)match(input,GLOBAL_NS,FOLLOW_GLOBAL_NS_in_member2144); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    GLOBAL_NS232_tree = (CommonTree)adaptor.create(GLOBAL_NS232);
                    adaptor.addChild(root_0, GLOBAL_NS232_tree);
                    }
                    pushFollow(FOLLOW_identifier_in_member2146);
                    identifier233=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier233.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:497:5: identifier
                    {
                    pushFollow(FOLLOW_identifier_in_member2153);
                    identifier234=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier234.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:499:2: ( type_arguments )?
            int alt65=2;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:499:3: type_arguments
                    {
                    pushFollow(FOLLOW_type_arguments_in_member2162);
                    type_arguments235=type_arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_arguments235.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:500:2: ( member_access )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==DOT) ) {
                    int LA66_2 = input.LA(2);

                    if ( (LA66_2==KW_USING||LA66_2==IDENTIFIER||LA66_2==KW_IN||(LA66_2>=KW_IS && LA66_2<=KW_VOID)||(LA66_2>=KW_DYNAMIC && LA66_2<=KW_WEAK)||(LA66_2>=KW_CONSTRUCT && LA66_2<=KW_REQUIRES)) ) {
                        int LA66_3 = input.LA(3);

                        if ( (synpred179_Vala()) ) {
                            alt66=1;
                        }


                    }


                }


                switch (alt66) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:500:3: member_access
            	    {
            	    pushFollow(FOLLOW_member_access_in_member2169);
            	    member_access236=member_access();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_access236.getTree());

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 62, member_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "member"

    public static class type_arguments_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type_arguments"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:502:1: type_arguments : LT type ( COMMA type )* GT ;
    public final ValaParser.type_arguments_return type_arguments() throws RecognitionException {
        ValaParser.type_arguments_return retval = new ValaParser.type_arguments_return();
        retval.start = input.LT(1);
        int type_arguments_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LT237=null;
        Token COMMA239=null;
        Token GT241=null;
        ValaParser.type_return type238 = null;

        ValaParser.type_return type240 = null;


        CommonTree LT237_tree=null;
        CommonTree COMMA239_tree=null;
        CommonTree GT241_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:503:2: ( LT type ( COMMA type )* GT )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:504:2: LT type ( COMMA type )* GT
            {
            root_0 = (CommonTree)adaptor.nil();

            LT237=(Token)match(input,LT,FOLLOW_LT_in_type_arguments2182); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LT237_tree = (CommonTree)adaptor.create(LT237);
            adaptor.addChild(root_0, LT237_tree);
            }
            pushFollow(FOLLOW_type_in_type_arguments2186);
            type238=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type238.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:506:2: ( COMMA type )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==COMMA) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:506:3: COMMA type
            	    {
            	    COMMA239=(Token)match(input,COMMA,FOLLOW_COMMA_in_type_arguments2190); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA239_tree = (CommonTree)adaptor.create(COMMA239);
            	    adaptor.addChild(root_0, COMMA239_tree);
            	    }
            	    pushFollow(FOLLOW_type_in_type_arguments2192);
            	    type240=type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type240.getTree());

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            GT241=(Token)match(input,GT,FOLLOW_GT_in_type_arguments2198); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            GT241_tree = (CommonTree)adaptor.create(GT241);
            adaptor.addChild(root_0, GT241_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 63, type_arguments_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type_arguments"

    public static class yield_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "yield_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:509:1: yield_expression : KW_YIELD ( base_access DOT )? member method_call ;
    public final ValaParser.yield_expression_return yield_expression() throws RecognitionException {
        ValaParser.yield_expression_return retval = new ValaParser.yield_expression_return();
        retval.start = input.LT(1);
        int yield_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_YIELD242=null;
        Token DOT244=null;
        ValaParser.base_access_return base_access243 = null;

        ValaParser.member_return member245 = null;

        ValaParser.method_call_return method_call246 = null;


        CommonTree KW_YIELD242_tree=null;
        CommonTree DOT244_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:510:2: ( KW_YIELD ( base_access DOT )? member method_call )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:510:4: KW_YIELD ( base_access DOT )? member method_call
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_YIELD242=(Token)match(input,KW_YIELD,FOLLOW_KW_YIELD_in_yield_expression2208); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_YIELD242_tree = (CommonTree)adaptor.create(KW_YIELD242);
            adaptor.addChild(root_0, KW_YIELD242_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:510:13: ( base_access DOT )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==KW_BASE) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:510:14: base_access DOT
                    {
                    pushFollow(FOLLOW_base_access_in_yield_expression2211);
                    base_access243=base_access();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, base_access243.getTree());
                    DOT244=(Token)match(input,DOT,FOLLOW_DOT_in_yield_expression2213); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    DOT244_tree = (CommonTree)adaptor.create(DOT244);
                    adaptor.addChild(root_0, DOT244_tree);
                    }

                    }
                    break;

            }

            pushFollow(FOLLOW_member_in_yield_expression2217);
            member245=member();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, member245.getTree());
            pushFollow(FOLLOW_method_call_in_yield_expression2219);
            method_call246=method_call();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_call246.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 64, yield_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "yield_expression"

    public static class method_call_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "method_call"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:512:1: method_call : LPAREN ( arguments )? RPAREN ( object_initializer )? ;
    public final ValaParser.method_call_return method_call() throws RecognitionException {
        ValaParser.method_call_return retval = new ValaParser.method_call_return();
        retval.start = input.LT(1);
        int method_call_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LPAREN247=null;
        Token RPAREN249=null;
        ValaParser.arguments_return arguments248 = null;

        ValaParser.object_initializer_return object_initializer250 = null;


        CommonTree LPAREN247_tree=null;
        CommonTree RPAREN249_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:513:2: ( LPAREN ( arguments )? RPAREN ( object_initializer )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:514:2: LPAREN ( arguments )? RPAREN ( object_initializer )?
            {
            root_0 = (CommonTree)adaptor.nil();

            LPAREN247=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_method_call2231); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN247_tree = (CommonTree)adaptor.create(LPAREN247);
            adaptor.addChild(root_0, LPAREN247_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:515:2: ( arguments )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==KW_USING||(LA69_0>=GLOBAL_NS && LA69_0<=IDENTIFIER)||LA69_0==LPAREN||LA69_0==KW_IN||LA69_0==AND||(LA69_0>=KW_IS && LA69_0<=KW_WEAK)||(LA69_0>=PLUS && LA69_0<=MINUS)||(LA69_0>=NOT && LA69_0<=KW_REQUIRES)||(LA69_0>=KW_OUT && LA69_0<=KW_REF)||(LA69_0>=INTEGER && LA69_0<=LCURL)||LA69_0==TEMPLATE_START||(LA69_0>=KW_THIS && LA69_0<=KW_BASE)) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:515:3: arguments
                    {
                    pushFollow(FOLLOW_arguments_in_method_call2237);
                    arguments248=arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments248.getTree());

                    }
                    break;

            }

            RPAREN249=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_method_call2243); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN249_tree = (CommonTree)adaptor.create(RPAREN249);
            adaptor.addChild(root_0, RPAREN249_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:517:2: ( object_initializer )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==LCURL) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:517:3: object_initializer
                    {
                    pushFollow(FOLLOW_object_initializer_in_method_call2249);
                    object_initializer250=object_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, object_initializer250.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 65, method_call_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "method_call"

    public static class sizeof_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "sizeof_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:519:1: sizeof_expression : KW_SIZEOF LPAREN type RPAREN ;
    public final ValaParser.sizeof_expression_return sizeof_expression() throws RecognitionException {
        ValaParser.sizeof_expression_return retval = new ValaParser.sizeof_expression_return();
        retval.start = input.LT(1);
        int sizeof_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_SIZEOF251=null;
        Token LPAREN252=null;
        Token RPAREN254=null;
        ValaParser.type_return type253 = null;


        CommonTree KW_SIZEOF251_tree=null;
        CommonTree LPAREN252_tree=null;
        CommonTree RPAREN254_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:520:2: ( KW_SIZEOF LPAREN type RPAREN )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:521:2: KW_SIZEOF LPAREN type RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_SIZEOF251=(Token)match(input,KW_SIZEOF,FOLLOW_KW_SIZEOF_in_sizeof_expression2263); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_SIZEOF251_tree = (CommonTree)adaptor.create(KW_SIZEOF251);
            adaptor.addChild(root_0, KW_SIZEOF251_tree);
            }
            LPAREN252=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_sizeof_expression2266); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN252_tree = (CommonTree)adaptor.create(LPAREN252);
            adaptor.addChild(root_0, LPAREN252_tree);
            }
            pushFollow(FOLLOW_type_in_sizeof_expression2270);
            type253=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type253.getTree());
            RPAREN254=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_sizeof_expression2274); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN254_tree = (CommonTree)adaptor.create(RPAREN254);
            adaptor.addChild(root_0, RPAREN254_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 66, sizeof_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "sizeof_expression"

    public static class typeof_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeof_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:526:1: typeof_expression : KW_TYPEOF LPAREN type RPAREN ;
    public final ValaParser.typeof_expression_return typeof_expression() throws RecognitionException {
        ValaParser.typeof_expression_return retval = new ValaParser.typeof_expression_return();
        retval.start = input.LT(1);
        int typeof_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_TYPEOF255=null;
        Token LPAREN256=null;
        Token RPAREN258=null;
        ValaParser.type_return type257 = null;


        CommonTree KW_TYPEOF255_tree=null;
        CommonTree LPAREN256_tree=null;
        CommonTree RPAREN258_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:527:2: ( KW_TYPEOF LPAREN type RPAREN )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:527:4: KW_TYPEOF LPAREN type RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_TYPEOF255=(Token)match(input,KW_TYPEOF,FOLLOW_KW_TYPEOF_in_typeof_expression2284); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_TYPEOF255_tree = (CommonTree)adaptor.create(KW_TYPEOF255);
            adaptor.addChild(root_0, KW_TYPEOF255_tree);
            }
            LPAREN256=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_typeof_expression2286); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN256_tree = (CommonTree)adaptor.create(LPAREN256);
            adaptor.addChild(root_0, LPAREN256_tree);
            }
            pushFollow(FOLLOW_type_in_typeof_expression2288);
            type257=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type257.getTree());
            RPAREN258=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_typeof_expression2290); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN258_tree = (CommonTree)adaptor.create(RPAREN258);
            adaptor.addChild(root_0, RPAREN258_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 67, typeof_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "typeof_expression"

    public static class simple_name_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "simple_name"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:529:1: simple_name : ( GLOBAL_NS identifier | identifier ) ( type_arguments )? ;
    public final ValaParser.simple_name_return simple_name() throws RecognitionException {
        ValaParser.simple_name_return retval = new ValaParser.simple_name_return();
        retval.start = input.LT(1);
        int simple_name_StartIndex = input.index();
        CommonTree root_0 = null;

        Token GLOBAL_NS259=null;
        ValaParser.identifier_return identifier260 = null;

        ValaParser.identifier_return identifier261 = null;

        ValaParser.type_arguments_return type_arguments262 = null;


        CommonTree GLOBAL_NS259_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:530:2: ( ( GLOBAL_NS identifier | identifier ) ( type_arguments )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:530:4: ( GLOBAL_NS identifier | identifier ) ( type_arguments )?
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:530:4: ( GLOBAL_NS identifier | identifier )
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==GLOBAL_NS) ) {
                alt71=1;
            }
            else if ( (LA71_0==KW_USING||LA71_0==IDENTIFIER||LA71_0==KW_IN||(LA71_0>=KW_IS && LA71_0<=KW_VOID)||(LA71_0>=KW_DYNAMIC && LA71_0<=KW_WEAK)||(LA71_0>=KW_CONSTRUCT && LA71_0<=KW_REQUIRES)) ) {
                alt71=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }
            switch (alt71) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:530:6: GLOBAL_NS identifier
                    {
                    GLOBAL_NS259=(Token)match(input,GLOBAL_NS,FOLLOW_GLOBAL_NS_in_simple_name2302); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    GLOBAL_NS259_tree = (CommonTree)adaptor.create(GLOBAL_NS259);
                    adaptor.addChild(root_0, GLOBAL_NS259_tree);
                    }
                    pushFollow(FOLLOW_identifier_in_simple_name2304);
                    identifier260=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier260.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:530:29: identifier
                    {
                    pushFollow(FOLLOW_identifier_in_simple_name2308);
                    identifier261=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier261.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:530:42: ( type_arguments )?
            int alt72=2;
            alt72 = dfa72.predict(input);
            switch (alt72) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:530:43: type_arguments
                    {
                    pushFollow(FOLLOW_type_arguments_in_simple_name2313);
                    type_arguments262=type_arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_arguments262.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 68, simple_name_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "simple_name"

    public static class lambda_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "lambda_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:532:1: lambda_expression : lambda_expression_params LAMBDA lambda_expression_body ;
    public final ValaParser.lambda_expression_return lambda_expression() throws RecognitionException {
        ValaParser.lambda_expression_return retval = new ValaParser.lambda_expression_return();
        retval.start = input.LT(1);
        int lambda_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LAMBDA264=null;
        ValaParser.lambda_expression_params_return lambda_expression_params263 = null;

        ValaParser.lambda_expression_body_return lambda_expression_body265 = null;


        CommonTree LAMBDA264_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:533:2: ( lambda_expression_params LAMBDA lambda_expression_body )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:533:4: lambda_expression_params LAMBDA lambda_expression_body
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_lambda_expression_params_in_lambda_expression2325);
            lambda_expression_params263=lambda_expression_params();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, lambda_expression_params263.getTree());
            LAMBDA264=(Token)match(input,LAMBDA,FOLLOW_LAMBDA_in_lambda_expression2327); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LAMBDA264_tree = (CommonTree)adaptor.create(LAMBDA264);
            adaptor.addChild(root_0, LAMBDA264_tree);
            }
            pushFollow(FOLLOW_lambda_expression_body_in_lambda_expression2329);
            lambda_expression_body265=lambda_expression_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, lambda_expression_body265.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 69, lambda_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "lambda_expression"

    public static class lambda_expression_params_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "lambda_expression_params"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:535:1: lambda_expression_params : ( identifier | ( LPAREN ( identifier ( COMMA identifier )* )? RPAREN ) );
    public final ValaParser.lambda_expression_params_return lambda_expression_params() throws RecognitionException {
        ValaParser.lambda_expression_params_return retval = new ValaParser.lambda_expression_params_return();
        retval.start = input.LT(1);
        int lambda_expression_params_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LPAREN267=null;
        Token COMMA269=null;
        Token RPAREN271=null;
        ValaParser.identifier_return identifier266 = null;

        ValaParser.identifier_return identifier268 = null;

        ValaParser.identifier_return identifier270 = null;


        CommonTree LPAREN267_tree=null;
        CommonTree COMMA269_tree=null;
        CommonTree RPAREN271_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:536:2: ( identifier | ( LPAREN ( identifier ( COMMA identifier )* )? RPAREN ) )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==KW_USING||LA75_0==IDENTIFIER||LA75_0==KW_IN||(LA75_0>=KW_IS && LA75_0<=KW_VOID)||(LA75_0>=KW_DYNAMIC && LA75_0<=KW_WEAK)||(LA75_0>=KW_CONSTRUCT && LA75_0<=KW_REQUIRES)) ) {
                alt75=1;
            }
            else if ( (LA75_0==LPAREN) ) {
                alt75=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:537:2: identifier
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_identifier_in_lambda_expression_params2341);
                    identifier266=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier266.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:539:2: ( LPAREN ( identifier ( COMMA identifier )* )? RPAREN )
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:539:2: ( LPAREN ( identifier ( COMMA identifier )* )? RPAREN )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:540:3: LPAREN ( identifier ( COMMA identifier )* )? RPAREN
                    {
                    LPAREN267=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_lambda_expression_params2353); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN267_tree = (CommonTree)adaptor.create(LPAREN267);
                    adaptor.addChild(root_0, LPAREN267_tree);
                    }
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:541:3: ( identifier ( COMMA identifier )* )?
                    int alt74=2;
                    int LA74_0 = input.LA(1);

                    if ( (LA74_0==KW_USING||LA74_0==IDENTIFIER||LA74_0==KW_IN||(LA74_0>=KW_IS && LA74_0<=KW_VOID)||(LA74_0>=KW_DYNAMIC && LA74_0<=KW_WEAK)||(LA74_0>=KW_CONSTRUCT && LA74_0<=KW_REQUIRES)) ) {
                        alt74=1;
                    }
                    switch (alt74) {
                        case 1 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:541:4: identifier ( COMMA identifier )*
                            {
                            pushFollow(FOLLOW_identifier_in_lambda_expression_params2360);
                            identifier268=identifier();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier268.getTree());
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:541:15: ( COMMA identifier )*
                            loop73:
                            do {
                                int alt73=2;
                                int LA73_0 = input.LA(1);

                                if ( (LA73_0==COMMA) ) {
                                    alt73=1;
                                }


                                switch (alt73) {
                            	case 1 :
                            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:541:16: COMMA identifier
                            	    {
                            	    COMMA269=(Token)match(input,COMMA,FOLLOW_COMMA_in_lambda_expression_params2363); if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) {
                            	    COMMA269_tree = (CommonTree)adaptor.create(COMMA269);
                            	    adaptor.addChild(root_0, COMMA269_tree);
                            	    }
                            	    pushFollow(FOLLOW_identifier_in_lambda_expression_params2365);
                            	    identifier270=identifier();

                            	    state._fsp--;
                            	    if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier270.getTree());

                            	    }
                            	    break;

                            	default :
                            	    break loop73;
                                }
                            } while (true);


                            }
                            break;

                    }

                    RPAREN271=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_lambda_expression_params2375); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN271_tree = (CommonTree)adaptor.create(RPAREN271);
                    adaptor.addChild(root_0, RPAREN271_tree);
                    }

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 70, lambda_expression_params_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "lambda_expression_params"

    public static class lambda_expression_body_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "lambda_expression_body"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:545:1: lambda_expression_body : ( expression | block );
    public final ValaParser.lambda_expression_body_return lambda_expression_body() throws RecognitionException {
        ValaParser.lambda_expression_body_return retval = new ValaParser.lambda_expression_body_return();
        retval.start = input.LT(1);
        int lambda_expression_body_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.expression_return expression272 = null;

        ValaParser.block_return block273 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:546:2: ( expression | block )
            int alt76=2;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:546:4: expression
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_expression_in_lambda_expression_body2389);
                    expression272=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression272.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:546:17: block
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_block_in_lambda_expression_body2393);
                    block273=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block273.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 71, lambda_expression_body_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "lambda_expression_body"

    public static class member_declaration_modifiers_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "member_declaration_modifiers"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:548:1: member_declaration_modifiers : ( member_declaration_modifier )+ ;
    public final ValaParser.member_declaration_modifiers_return member_declaration_modifiers() throws RecognitionException {
        ValaParser.member_declaration_modifiers_return retval = new ValaParser.member_declaration_modifiers_return();
        retval.start = input.LT(1);
        int member_declaration_modifiers_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.member_declaration_modifier_return member_declaration_modifier274 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:549:2: ( ( member_declaration_modifier )+ )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:549:4: ( member_declaration_modifier )+
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:549:4: ( member_declaration_modifier )+
            int cnt77=0;
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==KW_NEW||(LA77_0>=KW_ASYNC && LA77_0<=KW_CLASS)||(LA77_0>=KW_EXTERN && LA77_0<=KW_OVERRIDE)) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:0:0: member_declaration_modifier
            	    {
            	    pushFollow(FOLLOW_member_declaration_modifier_in_member_declaration_modifiers2403);
            	    member_declaration_modifier274=member_declaration_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declaration_modifier274.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt77 >= 1 ) break loop77;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(77, input);
                        throw eee;
                }
                cnt77++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 72, member_declaration_modifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "member_declaration_modifiers"

    public static class member_declaration_modifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "member_declaration_modifier"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:551:1: member_declaration_modifier : ( KW_ASYNC | KW_CLASS | KW_EXTERN | KW_INLINE | KW_STATIC | KW_ABSTRACT | KW_VIRTUAL | KW_OVERRIDE | KW_NEW );
    public final ValaParser.member_declaration_modifier_return member_declaration_modifier() throws RecognitionException {
        ValaParser.member_declaration_modifier_return retval = new ValaParser.member_declaration_modifier_return();
        retval.start = input.LT(1);
        int member_declaration_modifier_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set275=null;

        CommonTree set275_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:552:2: ( KW_ASYNC | KW_CLASS | KW_EXTERN | KW_INLINE | KW_STATIC | KW_ABSTRACT | KW_VIRTUAL | KW_OVERRIDE | KW_NEW )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set275=(Token)input.LT(1);
            if ( input.LA(1)==KW_NEW||(input.LA(1)>=KW_ASYNC && input.LA(1)<=KW_CLASS)||(input.LA(1)>=KW_EXTERN && input.LA(1)<=KW_OVERRIDE) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set275));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 73, member_declaration_modifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "member_declaration_modifier"

    public static class constructor_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constructor_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:563:1: constructor_declaration : ( constructor_declaration_modifiers )? KW_CONSTRUCT block ;
    public final ValaParser.constructor_declaration_return constructor_declaration() throws RecognitionException {
        ValaParser.constructor_declaration_return retval = new ValaParser.constructor_declaration_return();
        retval.start = input.LT(1);
        int constructor_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_CONSTRUCT277=null;
        ValaParser.constructor_declaration_modifiers_return constructor_declaration_modifiers276 = null;

        ValaParser.block_return block278 = null;


        CommonTree KW_CONSTRUCT277_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:564:2: ( ( constructor_declaration_modifiers )? KW_CONSTRUCT block )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:565:2: ( constructor_declaration_modifiers )? KW_CONSTRUCT block
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:565:2: ( constructor_declaration_modifiers )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( ((LA78_0>=KW_ASYNC && LA78_0<=KW_CLASS)||(LA78_0>=KW_EXTERN && LA78_0<=KW_OVERRIDE)) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:565:3: constructor_declaration_modifiers
                    {
                    pushFollow(FOLLOW_constructor_declaration_modifiers_in_constructor_declaration2470);
                    constructor_declaration_modifiers276=constructor_declaration_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_declaration_modifiers276.getTree());

                    }
                    break;

            }

            KW_CONSTRUCT277=(Token)match(input,KW_CONSTRUCT,FOLLOW_KW_CONSTRUCT_in_constructor_declaration2476); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_CONSTRUCT277_tree = (CommonTree)adaptor.create(KW_CONSTRUCT277);
            adaptor.addChild(root_0, KW_CONSTRUCT277_tree);
            }
            pushFollow(FOLLOW_block_in_constructor_declaration2479);
            block278=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block278.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 74, constructor_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constructor_declaration"

    public static class constructor_declaration_modifiers_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constructor_declaration_modifiers"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:569:1: constructor_declaration_modifiers : ( constructor_declaration_modifier )+ ;
    public final ValaParser.constructor_declaration_modifiers_return constructor_declaration_modifiers() throws RecognitionException {
        ValaParser.constructor_declaration_modifiers_return retval = new ValaParser.constructor_declaration_modifiers_return();
        retval.start = input.LT(1);
        int constructor_declaration_modifiers_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.constructor_declaration_modifier_return constructor_declaration_modifier279 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:570:2: ( ( constructor_declaration_modifier )+ )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:571:2: ( constructor_declaration_modifier )+
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:571:2: ( constructor_declaration_modifier )+
            int cnt79=0;
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( ((LA79_0>=KW_ASYNC && LA79_0<=KW_CLASS)||(LA79_0>=KW_EXTERN && LA79_0<=KW_OVERRIDE)) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:0:0: constructor_declaration_modifier
            	    {
            	    pushFollow(FOLLOW_constructor_declaration_modifier_in_constructor_declaration_modifiers2491);
            	    constructor_declaration_modifier279=constructor_declaration_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_declaration_modifier279.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt79 >= 1 ) break loop79;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(79, input);
                        throw eee;
                }
                cnt79++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 75, constructor_declaration_modifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constructor_declaration_modifiers"

    public static class constructor_declaration_modifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constructor_declaration_modifier"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:573:1: constructor_declaration_modifier : ( KW_ASYNC | KW_CLASS | KW_EXTERN | KW_INLINE | KW_STATIC | KW_ABSTRACT | KW_VIRTUAL | KW_OVERRIDE );
    public final ValaParser.constructor_declaration_modifier_return constructor_declaration_modifier() throws RecognitionException {
        ValaParser.constructor_declaration_modifier_return retval = new ValaParser.constructor_declaration_modifier_return();
        retval.start = input.LT(1);
        int constructor_declaration_modifier_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set280=null;

        CommonTree set280_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:574:2: ( KW_ASYNC | KW_CLASS | KW_EXTERN | KW_INLINE | KW_STATIC | KW_ABSTRACT | KW_VIRTUAL | KW_OVERRIDE )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set280=(Token)input.LT(1);
            if ( (input.LA(1)>=KW_ASYNC && input.LA(1)<=KW_CLASS)||(input.LA(1)>=KW_EXTERN && input.LA(1)<=KW_OVERRIDE) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set280));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 76, constructor_declaration_modifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constructor_declaration_modifier"

    public static class destructor_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "destructor_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:584:1: destructor_declaration : ( constructor_declaration_modifiers )? BITWISE_NOT IDENTIFIER LPAREN RPAREN block ;
    public final ValaParser.destructor_declaration_return destructor_declaration() throws RecognitionException {
        ValaParser.destructor_declaration_return retval = new ValaParser.destructor_declaration_return();
        retval.start = input.LT(1);
        int destructor_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token BITWISE_NOT282=null;
        Token IDENTIFIER283=null;
        Token LPAREN284=null;
        Token RPAREN285=null;
        ValaParser.constructor_declaration_modifiers_return constructor_declaration_modifiers281 = null;

        ValaParser.block_return block286 = null;


        CommonTree BITWISE_NOT282_tree=null;
        CommonTree IDENTIFIER283_tree=null;
        CommonTree LPAREN284_tree=null;
        CommonTree RPAREN285_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:585:2: ( ( constructor_declaration_modifiers )? BITWISE_NOT IDENTIFIER LPAREN RPAREN block )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:586:3: ( constructor_declaration_modifiers )? BITWISE_NOT IDENTIFIER LPAREN RPAREN block
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:586:3: ( constructor_declaration_modifiers )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( ((LA80_0>=KW_ASYNC && LA80_0<=KW_CLASS)||(LA80_0>=KW_EXTERN && LA80_0<=KW_OVERRIDE)) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:586:4: constructor_declaration_modifiers
                    {
                    pushFollow(FOLLOW_constructor_declaration_modifiers_in_destructor_declaration2560);
                    constructor_declaration_modifiers281=constructor_declaration_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_declaration_modifiers281.getTree());

                    }
                    break;

            }

            BITWISE_NOT282=(Token)match(input,BITWISE_NOT,FOLLOW_BITWISE_NOT_in_destructor_declaration2567); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            BITWISE_NOT282_tree = (CommonTree)adaptor.create(BITWISE_NOT282);
            adaptor.addChild(root_0, BITWISE_NOT282_tree);
            }
            IDENTIFIER283=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_destructor_declaration2571); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER283_tree = (CommonTree)adaptor.create(IDENTIFIER283);
            adaptor.addChild(root_0, IDENTIFIER283_tree);
            }
            LPAREN284=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_destructor_declaration2575); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN284_tree = (CommonTree)adaptor.create(LPAREN284);
            adaptor.addChild(root_0, LPAREN284_tree);
            }
            RPAREN285=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_destructor_declaration2581); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN285_tree = (CommonTree)adaptor.create(RPAREN285);
            adaptor.addChild(root_0, RPAREN285_tree);
            }
            pushFollow(FOLLOW_block_in_destructor_declaration2586);
            block286=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block286.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 77, destructor_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "destructor_declaration"

    public static class class_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "class_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:593:1: class_declaration : ( access_modifier )? ( type_declaration_modifiers )? KW_CLASS symbol ( type_arguments )? ( COLON base_types )? LCURL ( class_member )* RCURL ;
    public final ValaParser.class_declaration_return class_declaration() throws RecognitionException {
        ValaParser.class_declaration_return retval = new ValaParser.class_declaration_return();
        retval.start = input.LT(1);
        int class_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_CLASS289=null;
        Token COLON292=null;
        Token LCURL294=null;
        Token RCURL296=null;
        ValaParser.access_modifier_return access_modifier287 = null;

        ValaParser.type_declaration_modifiers_return type_declaration_modifiers288 = null;

        ValaParser.symbol_return symbol290 = null;

        ValaParser.type_arguments_return type_arguments291 = null;

        ValaParser.base_types_return base_types293 = null;

        ValaParser.class_member_return class_member295 = null;


        CommonTree KW_CLASS289_tree=null;
        CommonTree COLON292_tree=null;
        CommonTree LCURL294_tree=null;
        CommonTree RCURL296_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:594:2: ( ( access_modifier )? ( type_declaration_modifiers )? KW_CLASS symbol ( type_arguments )? ( COLON base_types )? LCURL ( class_member )* RCURL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:595:2: ( access_modifier )? ( type_declaration_modifiers )? KW_CLASS symbol ( type_arguments )? ( COLON base_types )? LCURL ( class_member )* RCURL
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:595:2: ( access_modifier )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( ((LA81_0>=KW_PRIVATE && LA81_0<=KW_INTERNAL)) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:595:3: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_class_declaration2599);
                    access_modifier287=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier287.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:596:2: ( type_declaration_modifiers )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==KW_EXTERN||(LA82_0>=KW_STATIC && LA82_0<=KW_ABSTRACT)) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:596:3: type_declaration_modifiers
                    {
                    pushFollow(FOLLOW_type_declaration_modifiers_in_class_declaration2606);
                    type_declaration_modifiers288=type_declaration_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_declaration_modifiers288.getTree());

                    }
                    break;

            }

            KW_CLASS289=(Token)match(input,KW_CLASS,FOLLOW_KW_CLASS_in_class_declaration2612); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_CLASS289_tree = (CommonTree)adaptor.create(KW_CLASS289);
            adaptor.addChild(root_0, KW_CLASS289_tree);
            }
            pushFollow(FOLLOW_symbol_in_class_declaration2615);
            symbol290=symbol();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, symbol290.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:599:2: ( type_arguments )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==LT) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:599:3: type_arguments
                    {
                    pushFollow(FOLLOW_type_arguments_in_class_declaration2620);
                    type_arguments291=type_arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_arguments291.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:600:2: ( COLON base_types )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==COLON) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:600:3: COLON base_types
                    {
                    COLON292=(Token)match(input,COLON,FOLLOW_COLON_in_class_declaration2626); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON292_tree = (CommonTree)adaptor.create(COLON292);
                    adaptor.addChild(root_0, COLON292_tree);
                    }
                    pushFollow(FOLLOW_base_types_in_class_declaration2628);
                    base_types293=base_types();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, base_types293.getTree());

                    }
                    break;

            }

            LCURL294=(Token)match(input,LCURL,FOLLOW_LCURL_in_class_declaration2634); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LCURL294_tree = (CommonTree)adaptor.create(LCURL294);
            adaptor.addChild(root_0, LCURL294_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:602:2: ( class_member )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==KW_USING||(LA85_0>=GLOBAL_NS && LA85_0<=LBRACKET)||LA85_0==KW_IN||(LA85_0>=KW_IS && LA85_0<=KW_VOID)||(LA85_0>=KW_DYNAMIC && LA85_0<=KW_WEAK)||LA85_0==BITWISE_NOT||(LA85_0>=KW_CONSTRUCT && LA85_0<=KW_REQUIRES)||(LA85_0>=KW_DELEGATE && LA85_0<=KW_CONST)) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:602:3: class_member
            	    {
            	    pushFollow(FOLLOW_class_member_in_class_declaration2639);
            	    class_member295=class_member();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_member295.getTree());

            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            RCURL296=(Token)match(input,RCURL,FOLLOW_RCURL_in_class_declaration2644); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RCURL296_tree = (CommonTree)adaptor.create(RCURL296);
            adaptor.addChild(root_0, RCURL296_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 78, class_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "class_declaration"

    public static class base_types_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "base_types"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:605:1: base_types : type ( COMMA type )* ;
    public final ValaParser.base_types_return base_types() throws RecognitionException {
        ValaParser.base_types_return retval = new ValaParser.base_types_return();
        retval.start = input.LT(1);
        int base_types_StartIndex = input.index();
        CommonTree root_0 = null;

        Token COMMA298=null;
        ValaParser.type_return type297 = null;

        ValaParser.type_return type299 = null;


        CommonTree COMMA298_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:606:2: ( type ( COMMA type )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:607:2: type ( COMMA type )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_type_in_base_types2656);
            type297=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type297.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:608:2: ( COMMA type )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==COMMA) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:608:3: COMMA type
            	    {
            	    COMMA298=(Token)match(input,COMMA,FOLLOW_COMMA_in_base_types2661); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA298_tree = (CommonTree)adaptor.create(COMMA298);
            	    adaptor.addChild(root_0, COMMA298_tree);
            	    }
            	    pushFollow(FOLLOW_type_in_base_types2663);
            	    type299=type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type299.getTree());

            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 79, base_types_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "base_types"

    public static class class_member_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "class_member"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:610:1: class_member : ( attributes )? ( class_declaration | struct_declaration | enum_declaration | delegate_declaration | method_declaration | signal_declaration | field_declaration | constant_declaration | property_declaration | constructor_declaration | creation_method_declaration | destructor_declaration | unknown_chain ) ;
    public final ValaParser.class_member_return class_member() throws RecognitionException {
        ValaParser.class_member_return retval = new ValaParser.class_member_return();
        retval.start = input.LT(1);
        int class_member_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.attributes_return attributes300 = null;

        ValaParser.class_declaration_return class_declaration301 = null;

        ValaParser.struct_declaration_return struct_declaration302 = null;

        ValaParser.enum_declaration_return enum_declaration303 = null;

        ValaParser.delegate_declaration_return delegate_declaration304 = null;

        ValaParser.method_declaration_return method_declaration305 = null;

        ValaParser.signal_declaration_return signal_declaration306 = null;

        ValaParser.field_declaration_return field_declaration307 = null;

        ValaParser.constant_declaration_return constant_declaration308 = null;

        ValaParser.property_declaration_return property_declaration309 = null;

        ValaParser.constructor_declaration_return constructor_declaration310 = null;

        ValaParser.creation_method_declaration_return creation_method_declaration311 = null;

        ValaParser.destructor_declaration_return destructor_declaration312 = null;

        ValaParser.unknown_chain_return unknown_chain313 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:611:2: ( ( attributes )? ( class_declaration | struct_declaration | enum_declaration | delegate_declaration | method_declaration | signal_declaration | field_declaration | constant_declaration | property_declaration | constructor_declaration | creation_method_declaration | destructor_declaration | unknown_chain ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:612:2: ( attributes )? ( class_declaration | struct_declaration | enum_declaration | delegate_declaration | method_declaration | signal_declaration | field_declaration | constant_declaration | property_declaration | constructor_declaration | creation_method_declaration | destructor_declaration | unknown_chain )
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:612:2: ( attributes )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==LBRACKET) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:612:3: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_class_member2678);
                    attributes300=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes300.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:613:2: ( class_declaration | struct_declaration | enum_declaration | delegate_declaration | method_declaration | signal_declaration | field_declaration | constant_declaration | property_declaration | constructor_declaration | creation_method_declaration | destructor_declaration | unknown_chain )
            int alt88=13;
            alt88 = dfa88.predict(input);
            switch (alt88) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:613:4: class_declaration
                    {
                    pushFollow(FOLLOW_class_declaration_in_class_member2685);
                    class_declaration301=class_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration301.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:614:4: struct_declaration
                    {
                    pushFollow(FOLLOW_struct_declaration_in_class_member2691);
                    struct_declaration302=struct_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration302.getTree());

                    }
                    break;
                case 3 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:615:4: enum_declaration
                    {
                    pushFollow(FOLLOW_enum_declaration_in_class_member2697);
                    enum_declaration303=enum_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_declaration303.getTree());

                    }
                    break;
                case 4 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:616:4: delegate_declaration
                    {
                    pushFollow(FOLLOW_delegate_declaration_in_class_member2703);
                    delegate_declaration304=delegate_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration304.getTree());

                    }
                    break;
                case 5 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:617:4: method_declaration
                    {
                    pushFollow(FOLLOW_method_declaration_in_class_member2709);
                    method_declaration305=method_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration305.getTree());

                    }
                    break;
                case 6 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:618:4: signal_declaration
                    {
                    pushFollow(FOLLOW_signal_declaration_in_class_member2715);
                    signal_declaration306=signal_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, signal_declaration306.getTree());

                    }
                    break;
                case 7 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:619:4: field_declaration
                    {
                    pushFollow(FOLLOW_field_declaration_in_class_member2721);
                    field_declaration307=field_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, field_declaration307.getTree());

                    }
                    break;
                case 8 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:620:4: constant_declaration
                    {
                    pushFollow(FOLLOW_constant_declaration_in_class_member2727);
                    constant_declaration308=constant_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declaration308.getTree());

                    }
                    break;
                case 9 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:621:4: property_declaration
                    {
                    pushFollow(FOLLOW_property_declaration_in_class_member2733);
                    property_declaration309=property_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration309.getTree());

                    }
                    break;
                case 10 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:622:4: constructor_declaration
                    {
                    pushFollow(FOLLOW_constructor_declaration_in_class_member2739);
                    constructor_declaration310=constructor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_declaration310.getTree());

                    }
                    break;
                case 11 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:623:4: creation_method_declaration
                    {
                    pushFollow(FOLLOW_creation_method_declaration_in_class_member2745);
                    creation_method_declaration311=creation_method_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, creation_method_declaration311.getTree());

                    }
                    break;
                case 12 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:624:4: destructor_declaration
                    {
                    pushFollow(FOLLOW_destructor_declaration_in_class_member2750);
                    destructor_declaration312=destructor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, destructor_declaration312.getTree());

                    }
                    break;
                case 13 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:625:4: unknown_chain
                    {
                    pushFollow(FOLLOW_unknown_chain_in_class_member2756);
                    unknown_chain313=unknown_chain();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unknown_chain313.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 80, class_member_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "class_member"

    public static class access_modifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "access_modifier"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:627:1: access_modifier : ( KW_PRIVATE | KW_PROTECTED | KW_INTERNAL | KW_PUBLIC );
    public final ValaParser.access_modifier_return access_modifier() throws RecognitionException {
        ValaParser.access_modifier_return retval = new ValaParser.access_modifier_return();
        retval.start = input.LT(1);
        int access_modifier_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set314=null;

        CommonTree set314_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:628:2: ( KW_PRIVATE | KW_PROTECTED | KW_INTERNAL | KW_PUBLIC )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set314=(Token)input.LT(1);
            if ( (input.LA(1)>=KW_PRIVATE && input.LA(1)<=KW_INTERNAL) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set314));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 81, access_modifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "access_modifier"

    public static class type_declaration_modifiers_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type_declaration_modifiers"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:634:1: type_declaration_modifiers : ( type_declaration_modifier )+ ;
    public final ValaParser.type_declaration_modifiers_return type_declaration_modifiers() throws RecognitionException {
        ValaParser.type_declaration_modifiers_return retval = new ValaParser.type_declaration_modifiers_return();
        retval.start = input.LT(1);
        int type_declaration_modifiers_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.type_declaration_modifier_return type_declaration_modifier315 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:635:2: ( ( type_declaration_modifier )+ )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:635:4: ( type_declaration_modifier )+
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:635:4: ( type_declaration_modifier )+
            int cnt89=0;
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==KW_EXTERN||(LA89_0>=KW_STATIC && LA89_0<=KW_ABSTRACT)) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:0:0: type_declaration_modifier
            	    {
            	    pushFollow(FOLLOW_type_declaration_modifier_in_type_declaration_modifiers2794);
            	    type_declaration_modifier315=type_declaration_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_declaration_modifier315.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt89 >= 1 ) break loop89;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(89, input);
                        throw eee;
                }
                cnt89++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 82, type_declaration_modifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type_declaration_modifiers"

    public static class type_declaration_modifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type_declaration_modifier"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:637:1: type_declaration_modifier : ( KW_ABSTRACT | KW_EXTERN | KW_STATIC );
    public final ValaParser.type_declaration_modifier_return type_declaration_modifier() throws RecognitionException {
        ValaParser.type_declaration_modifier_return retval = new ValaParser.type_declaration_modifier_return();
        retval.start = input.LT(1);
        int type_declaration_modifier_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set316=null;

        CommonTree set316_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:638:2: ( KW_ABSTRACT | KW_EXTERN | KW_STATIC )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set316=(Token)input.LT(1);
            if ( input.LA(1)==KW_EXTERN||(input.LA(1)>=KW_STATIC && input.LA(1)<=KW_ABSTRACT) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set316));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 83, type_declaration_modifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type_declaration_modifier"

    public static class enum_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enum_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:643:1: enum_declaration : ( access_modifier )? ( type_declaration_modifiers )? KW_ENUM symbol LCURL ( enum_member )* RCURL ;
    public final ValaParser.enum_declaration_return enum_declaration() throws RecognitionException {
        ValaParser.enum_declaration_return retval = new ValaParser.enum_declaration_return();
        retval.start = input.LT(1);
        int enum_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_ENUM319=null;
        Token LCURL321=null;
        Token RCURL323=null;
        ValaParser.access_modifier_return access_modifier317 = null;

        ValaParser.type_declaration_modifiers_return type_declaration_modifiers318 = null;

        ValaParser.symbol_return symbol320 = null;

        ValaParser.enum_member_return enum_member322 = null;


        CommonTree KW_ENUM319_tree=null;
        CommonTree LCURL321_tree=null;
        CommonTree RCURL323_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 84) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:644:2: ( ( access_modifier )? ( type_declaration_modifiers )? KW_ENUM symbol LCURL ( enum_member )* RCURL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:645:2: ( access_modifier )? ( type_declaration_modifiers )? KW_ENUM symbol LCURL ( enum_member )* RCURL
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:645:2: ( access_modifier )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( ((LA90_0>=KW_PRIVATE && LA90_0<=KW_INTERNAL)) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:645:3: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_enum_declaration2830);
                    access_modifier317=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier317.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:646:2: ( type_declaration_modifiers )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==KW_EXTERN||(LA91_0>=KW_STATIC && LA91_0<=KW_ABSTRACT)) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:646:3: type_declaration_modifiers
                    {
                    pushFollow(FOLLOW_type_declaration_modifiers_in_enum_declaration2837);
                    type_declaration_modifiers318=type_declaration_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_declaration_modifiers318.getTree());

                    }
                    break;

            }

            KW_ENUM319=(Token)match(input,KW_ENUM,FOLLOW_KW_ENUM_in_enum_declaration2843); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_ENUM319_tree = (CommonTree)adaptor.create(KW_ENUM319);
            adaptor.addChild(root_0, KW_ENUM319_tree);
            }
            pushFollow(FOLLOW_symbol_in_enum_declaration2846);
            symbol320=symbol();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, symbol320.getTree());
            LCURL321=(Token)match(input,LCURL,FOLLOW_LCURL_in_enum_declaration2849); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LCURL321_tree = (CommonTree)adaptor.create(LCURL321);
            adaptor.addChild(root_0, LCURL321_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:650:2: ( enum_member )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==KW_USING||(LA92_0>=GLOBAL_NS && LA92_0<=LBRACKET)||LA92_0==KW_IN||(LA92_0>=KW_IS && LA92_0<=KW_VOID)||(LA92_0>=KW_DYNAMIC && LA92_0<=KW_WEAK)||(LA92_0>=KW_CONSTRUCT && LA92_0<=KW_REQUIRES)||LA92_0==KW_CONST) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:650:3: enum_member
            	    {
            	    pushFollow(FOLLOW_enum_member_in_enum_declaration2854);
            	    enum_member322=enum_member();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_member322.getTree());

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            RCURL323=(Token)match(input,RCURL,FOLLOW_RCURL_in_enum_declaration2860); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RCURL323_tree = (CommonTree)adaptor.create(RCURL323);
            adaptor.addChild(root_0, RCURL323_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 84, enum_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enum_declaration"

    public static class enum_member_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enum_member"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:653:1: enum_member : ( ( ( attributes )? ( method_declaration | constant_declaration | unknown_chain ) ) | ( enum_values ) );
    public final ValaParser.enum_member_return enum_member() throws RecognitionException {
        ValaParser.enum_member_return retval = new ValaParser.enum_member_return();
        retval.start = input.LT(1);
        int enum_member_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.attributes_return attributes324 = null;

        ValaParser.method_declaration_return method_declaration325 = null;

        ValaParser.constant_declaration_return constant_declaration326 = null;

        ValaParser.unknown_chain_return unknown_chain327 = null;

        ValaParser.enum_values_return enum_values328 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 85) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:654:2: ( ( ( attributes )? ( method_declaration | constant_declaration | unknown_chain ) ) | ( enum_values ) )
            int alt95=2;
            alt95 = dfa95.predict(input);
            switch (alt95) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:655:2: ( ( attributes )? ( method_declaration | constant_declaration | unknown_chain ) )
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:655:2: ( ( attributes )? ( method_declaration | constant_declaration | unknown_chain ) )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:656:3: ( attributes )? ( method_declaration | constant_declaration | unknown_chain )
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:656:3: ( attributes )?
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( (LA93_0==LBRACKET) ) {
                        alt93=1;
                    }
                    switch (alt93) {
                        case 1 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:656:4: attributes
                            {
                            pushFollow(FOLLOW_attributes_in_enum_member2875);
                            attributes324=attributes();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes324.getTree());

                            }
                            break;

                    }

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:657:3: ( method_declaration | constant_declaration | unknown_chain )
                    int alt94=3;
                    alt94 = dfa94.predict(input);
                    switch (alt94) {
                        case 1 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:658:4: method_declaration
                            {
                            pushFollow(FOLLOW_method_declaration_in_enum_member2886);
                            method_declaration325=method_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration325.getTree());

                            }
                            break;
                        case 2 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:659:6: constant_declaration
                            {
                            pushFollow(FOLLOW_constant_declaration_in_enum_member2894);
                            constant_declaration326=constant_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declaration326.getTree());

                            }
                            break;
                        case 3 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:660:6: unknown_chain
                            {
                            pushFollow(FOLLOW_unknown_chain_in_enum_member2902);
                            unknown_chain327=unknown_chain();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, unknown_chain327.getTree());

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:664:2: ( enum_values )
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:664:2: ( enum_values )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:664:3: enum_values
                    {
                    pushFollow(FOLLOW_enum_values_in_enum_member2916);
                    enum_values328=enum_values();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_values328.getTree());

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 85, enum_member_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enum_member"

    public static class enum_values_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enum_values"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:666:1: enum_values : enum_value ( COMMA enum_value )* ( COMMA )? ( SEMICOLON )? ;
    public final ValaParser.enum_values_return enum_values() throws RecognitionException {
        ValaParser.enum_values_return retval = new ValaParser.enum_values_return();
        retval.start = input.LT(1);
        int enum_values_StartIndex = input.index();
        CommonTree root_0 = null;

        Token COMMA330=null;
        Token COMMA332=null;
        Token SEMICOLON333=null;
        ValaParser.enum_value_return enum_value329 = null;

        ValaParser.enum_value_return enum_value331 = null;


        CommonTree COMMA330_tree=null;
        CommonTree COMMA332_tree=null;
        CommonTree SEMICOLON333_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 86) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:667:2: ( enum_value ( COMMA enum_value )* ( COMMA )? ( SEMICOLON )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:668:2: enum_value ( COMMA enum_value )* ( COMMA )? ( SEMICOLON )?
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_enum_value_in_enum_values2929);
            enum_value329=enum_value();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_value329.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:669:2: ( COMMA enum_value )*
            loop96:
            do {
                int alt96=2;
                alt96 = dfa96.predict(input);
                switch (alt96) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:669:3: COMMA enum_value
            	    {
            	    COMMA330=(Token)match(input,COMMA,FOLLOW_COMMA_in_enum_values2934); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA330_tree = (CommonTree)adaptor.create(COMMA330);
            	    adaptor.addChild(root_0, COMMA330_tree);
            	    }
            	    pushFollow(FOLLOW_enum_value_in_enum_values2936);
            	    enum_value331=enum_value();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_value331.getTree());

            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:670:2: ( COMMA )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==COMMA) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:670:3: COMMA
                    {
                    COMMA332=(Token)match(input,COMMA,FOLLOW_COMMA_in_enum_values2942); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA332_tree = (CommonTree)adaptor.create(COMMA332);
                    adaptor.addChild(root_0, COMMA332_tree);
                    }

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:671:2: ( SEMICOLON )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==SEMICOLON) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:671:3: SEMICOLON
                    {
                    SEMICOLON333=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_enum_values2948); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON333_tree = (CommonTree)adaptor.create(SEMICOLON333);
                    adaptor.addChild(root_0, SEMICOLON333_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 86, enum_values_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enum_values"

    public static class enum_value_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enum_value"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:673:1: enum_value : ( attributes )? identifier ( ASSIGNMENT expression )? ;
    public final ValaParser.enum_value_return enum_value() throws RecognitionException {
        ValaParser.enum_value_return retval = new ValaParser.enum_value_return();
        retval.start = input.LT(1);
        int enum_value_StartIndex = input.index();
        CommonTree root_0 = null;

        Token ASSIGNMENT336=null;
        ValaParser.attributes_return attributes334 = null;

        ValaParser.identifier_return identifier335 = null;

        ValaParser.expression_return expression337 = null;


        CommonTree ASSIGNMENT336_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 87) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:674:2: ( ( attributes )? identifier ( ASSIGNMENT expression )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:675:2: ( attributes )? identifier ( ASSIGNMENT expression )?
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:675:2: ( attributes )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==LBRACKET) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:675:3: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_enum_value2964);
                    attributes334=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes334.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_identifier_in_enum_value2970);
            identifier335=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier335.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:677:2: ( ASSIGNMENT expression )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==ASSIGNMENT) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:677:3: ASSIGNMENT expression
                    {
                    ASSIGNMENT336=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_enum_value2974); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGNMENT336_tree = (CommonTree)adaptor.create(ASSIGNMENT336);
                    adaptor.addChild(root_0, ASSIGNMENT336_tree);
                    }
                    pushFollow(FOLLOW_expression_in_enum_value2976);
                    expression337=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression337.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 87, enum_value_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enum_value"

    public static class errordomain_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "errordomain_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:679:1: errordomain_declaration : ( access_modifier )? ( type_declaration_modifiers )? KW_ERRORDOMAIN symbol LCURL errorcodes ( SEMICOLON ( method_declaration )* )? RCURL ;
    public final ValaParser.errordomain_declaration_return errordomain_declaration() throws RecognitionException {
        ValaParser.errordomain_declaration_return retval = new ValaParser.errordomain_declaration_return();
        retval.start = input.LT(1);
        int errordomain_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_ERRORDOMAIN340=null;
        Token LCURL342=null;
        Token SEMICOLON344=null;
        Token RCURL346=null;
        ValaParser.access_modifier_return access_modifier338 = null;

        ValaParser.type_declaration_modifiers_return type_declaration_modifiers339 = null;

        ValaParser.symbol_return symbol341 = null;

        ValaParser.errorcodes_return errorcodes343 = null;

        ValaParser.method_declaration_return method_declaration345 = null;


        CommonTree KW_ERRORDOMAIN340_tree=null;
        CommonTree LCURL342_tree=null;
        CommonTree SEMICOLON344_tree=null;
        CommonTree RCURL346_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 88) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:680:2: ( ( access_modifier )? ( type_declaration_modifiers )? KW_ERRORDOMAIN symbol LCURL errorcodes ( SEMICOLON ( method_declaration )* )? RCURL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:681:2: ( access_modifier )? ( type_declaration_modifiers )? KW_ERRORDOMAIN symbol LCURL errorcodes ( SEMICOLON ( method_declaration )* )? RCURL
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:681:2: ( access_modifier )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( ((LA101_0>=KW_PRIVATE && LA101_0<=KW_INTERNAL)) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:681:3: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_errordomain_declaration2991);
                    access_modifier338=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier338.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:682:2: ( type_declaration_modifiers )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==KW_EXTERN||(LA102_0>=KW_STATIC && LA102_0<=KW_ABSTRACT)) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:682:3: type_declaration_modifiers
                    {
                    pushFollow(FOLLOW_type_declaration_modifiers_in_errordomain_declaration2998);
                    type_declaration_modifiers339=type_declaration_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_declaration_modifiers339.getTree());

                    }
                    break;

            }

            KW_ERRORDOMAIN340=(Token)match(input,KW_ERRORDOMAIN,FOLLOW_KW_ERRORDOMAIN_in_errordomain_declaration3004); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_ERRORDOMAIN340_tree = (CommonTree)adaptor.create(KW_ERRORDOMAIN340);
            adaptor.addChild(root_0, KW_ERRORDOMAIN340_tree);
            }
            pushFollow(FOLLOW_symbol_in_errordomain_declaration3007);
            symbol341=symbol();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, symbol341.getTree());
            LCURL342=(Token)match(input,LCURL,FOLLOW_LCURL_in_errordomain_declaration3010); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LCURL342_tree = (CommonTree)adaptor.create(LCURL342);
            adaptor.addChild(root_0, LCURL342_tree);
            }
            pushFollow(FOLLOW_errorcodes_in_errordomain_declaration3014);
            errorcodes343=errorcodes();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, errorcodes343.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:687:2: ( SEMICOLON ( method_declaration )* )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==SEMICOLON) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:687:3: SEMICOLON ( method_declaration )*
                    {
                    SEMICOLON344=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_errordomain_declaration3019); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON344_tree = (CommonTree)adaptor.create(SEMICOLON344);
                    adaptor.addChild(root_0, SEMICOLON344_tree);
                    }
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:687:14: ( method_declaration )*
                    loop103:
                    do {
                        int alt103=2;
                        int LA103_0 = input.LA(1);

                        if ( ((LA103_0>=GLOBAL_NS && LA103_0<=IDENTIFIER)||LA103_0==KW_VOID||(LA103_0>=KW_DYNAMIC && LA103_0<=KW_WEAK)||LA103_0==KW_NEW||(LA103_0>=KW_ASYNC && LA103_0<=KW_CLASS)||(LA103_0>=KW_EXTERN && LA103_0<=KW_INTERNAL)) ) {
                            alt103=1;
                        }


                        switch (alt103) {
                    	case 1 :
                    	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:687:15: method_declaration
                    	    {
                    	    pushFollow(FOLLOW_method_declaration_in_errordomain_declaration3023);
                    	    method_declaration345=method_declaration();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration345.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop103;
                        }
                    } while (true);


                    }
                    break;

            }

            RCURL346=(Token)match(input,RCURL,FOLLOW_RCURL_in_errordomain_declaration3031); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RCURL346_tree = (CommonTree)adaptor.create(RCURL346);
            adaptor.addChild(root_0, RCURL346_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 88, errordomain_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "errordomain_declaration"

    public static class errorcodes_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "errorcodes"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:690:1: errorcodes : errorcode ( COMMA errorcode )* ( COMMA )? ;
    public final ValaParser.errorcodes_return errorcodes() throws RecognitionException {
        ValaParser.errorcodes_return retval = new ValaParser.errorcodes_return();
        retval.start = input.LT(1);
        int errorcodes_StartIndex = input.index();
        CommonTree root_0 = null;

        Token COMMA348=null;
        Token COMMA350=null;
        ValaParser.errorcode_return errorcode347 = null;

        ValaParser.errorcode_return errorcode349 = null;


        CommonTree COMMA348_tree=null;
        CommonTree COMMA350_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 89) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:691:2: ( errorcode ( COMMA errorcode )* ( COMMA )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:692:2: errorcode ( COMMA errorcode )* ( COMMA )?
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_errorcode_in_errorcodes3043);
            errorcode347=errorcode();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, errorcode347.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:693:2: ( COMMA errorcode )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==COMMA) ) {
                    int LA105_1 = input.LA(2);

                    if ( ((LA105_1>=IDENTIFIER && LA105_1<=LBRACKET)) ) {
                        alt105=1;
                    }


                }


                switch (alt105) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:693:3: COMMA errorcode
            	    {
            	    COMMA348=(Token)match(input,COMMA,FOLLOW_COMMA_in_errorcodes3048); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA348_tree = (CommonTree)adaptor.create(COMMA348);
            	    adaptor.addChild(root_0, COMMA348_tree);
            	    }
            	    pushFollow(FOLLOW_errorcode_in_errorcodes3050);
            	    errorcode349=errorcode();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, errorcode349.getTree());

            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:694:2: ( COMMA )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==COMMA) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:694:3: COMMA
                    {
                    COMMA350=(Token)match(input,COMMA,FOLLOW_COMMA_in_errorcodes3056); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COMMA350_tree = (CommonTree)adaptor.create(COMMA350);
                    adaptor.addChild(root_0, COMMA350_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 89, errorcodes_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "errorcodes"

    public static class errorcode_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "errorcode"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:696:1: errorcode : ( attributes )? IDENTIFIER ( ASSIGNMENT expression )? ;
    public final ValaParser.errorcode_return errorcode() throws RecognitionException {
        ValaParser.errorcode_return retval = new ValaParser.errorcode_return();
        retval.start = input.LT(1);
        int errorcode_StartIndex = input.index();
        CommonTree root_0 = null;

        Token IDENTIFIER352=null;
        Token ASSIGNMENT353=null;
        ValaParser.attributes_return attributes351 = null;

        ValaParser.expression_return expression354 = null;


        CommonTree IDENTIFIER352_tree=null;
        CommonTree ASSIGNMENT353_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 90) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:697:2: ( ( attributes )? IDENTIFIER ( ASSIGNMENT expression )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:697:4: ( attributes )? IDENTIFIER ( ASSIGNMENT expression )?
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:697:4: ( attributes )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==LBRACKET) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:697:5: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_errorcode3070);
                    attributes351=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes351.getTree());

                    }
                    break;

            }

            IDENTIFIER352=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_errorcode3074); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER352_tree = (CommonTree)adaptor.create(IDENTIFIER352);
            adaptor.addChild(root_0, IDENTIFIER352_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:697:29: ( ASSIGNMENT expression )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==ASSIGNMENT) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:697:30: ASSIGNMENT expression
                    {
                    ASSIGNMENT353=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_errorcode3077); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGNMENT353_tree = (CommonTree)adaptor.create(ASSIGNMENT353);
                    adaptor.addChild(root_0, ASSIGNMENT353_tree);
                    }
                    pushFollow(FOLLOW_expression_in_errorcode3079);
                    expression354=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression354.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 90, errorcode_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "errorcode"

    public static class interface_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:699:1: interface_declaration : ( access_modifier )? ( type_declaration_modifiers )? KW_INTERFACE symbol ( type_parameters )? ( COLON base_types )? LCURL ( interface_member )* RCURL ;
    public final ValaParser.interface_declaration_return interface_declaration() throws RecognitionException {
        ValaParser.interface_declaration_return retval = new ValaParser.interface_declaration_return();
        retval.start = input.LT(1);
        int interface_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_INTERFACE357=null;
        Token COLON360=null;
        Token LCURL362=null;
        Token RCURL364=null;
        ValaParser.access_modifier_return access_modifier355 = null;

        ValaParser.type_declaration_modifiers_return type_declaration_modifiers356 = null;

        ValaParser.symbol_return symbol358 = null;

        ValaParser.type_parameters_return type_parameters359 = null;

        ValaParser.base_types_return base_types361 = null;

        ValaParser.interface_member_return interface_member363 = null;


        CommonTree KW_INTERFACE357_tree=null;
        CommonTree COLON360_tree=null;
        CommonTree LCURL362_tree=null;
        CommonTree RCURL364_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 91) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:700:2: ( ( access_modifier )? ( type_declaration_modifiers )? KW_INTERFACE symbol ( type_parameters )? ( COLON base_types )? LCURL ( interface_member )* RCURL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:701:2: ( access_modifier )? ( type_declaration_modifiers )? KW_INTERFACE symbol ( type_parameters )? ( COLON base_types )? LCURL ( interface_member )* RCURL
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:701:2: ( access_modifier )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( ((LA109_0>=KW_PRIVATE && LA109_0<=KW_INTERNAL)) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:701:3: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_interface_declaration3094);
                    access_modifier355=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier355.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:702:2: ( type_declaration_modifiers )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==KW_EXTERN||(LA110_0>=KW_STATIC && LA110_0<=KW_ABSTRACT)) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:702:3: type_declaration_modifiers
                    {
                    pushFollow(FOLLOW_type_declaration_modifiers_in_interface_declaration3101);
                    type_declaration_modifiers356=type_declaration_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_declaration_modifiers356.getTree());

                    }
                    break;

            }

            KW_INTERFACE357=(Token)match(input,KW_INTERFACE,FOLLOW_KW_INTERFACE_in_interface_declaration3107); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_INTERFACE357_tree = (CommonTree)adaptor.create(KW_INTERFACE357);
            adaptor.addChild(root_0, KW_INTERFACE357_tree);
            }
            pushFollow(FOLLOW_symbol_in_interface_declaration3110);
            symbol358=symbol();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, symbol358.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:705:2: ( type_parameters )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==LT) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:705:3: type_parameters
                    {
                    pushFollow(FOLLOW_type_parameters_in_interface_declaration3115);
                    type_parameters359=type_parameters();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameters359.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:706:2: ( COLON base_types )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==COLON) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:706:3: COLON base_types
                    {
                    COLON360=(Token)match(input,COLON,FOLLOW_COLON_in_interface_declaration3121); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON360_tree = (CommonTree)adaptor.create(COLON360);
                    adaptor.addChild(root_0, COLON360_tree);
                    }
                    pushFollow(FOLLOW_base_types_in_interface_declaration3123);
                    base_types361=base_types();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, base_types361.getTree());

                    }
                    break;

            }

            LCURL362=(Token)match(input,LCURL,FOLLOW_LCURL_in_interface_declaration3129); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LCURL362_tree = (CommonTree)adaptor.create(LCURL362);
            adaptor.addChild(root_0, LCURL362_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:708:2: ( interface_member )*
            loop113:
            do {
                int alt113=2;
                int LA113_0 = input.LA(1);

                if ( ((LA113_0>=GLOBAL_NS && LA113_0<=LBRACKET)||LA113_0==KW_VOID||(LA113_0>=KW_DYNAMIC && LA113_0<=KW_WEAK)||LA113_0==KW_NEW||(LA113_0>=KW_ASYNC && LA113_0<=KW_ENUM)||LA113_0==KW_SIGNAL||(LA113_0>=KW_DELEGATE && LA113_0<=KW_CONST)) ) {
                    alt113=1;
                }


                switch (alt113) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:708:3: interface_member
            	    {
            	    pushFollow(FOLLOW_interface_member_in_interface_declaration3134);
            	    interface_member363=interface_member();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_member363.getTree());

            	    }
            	    break;

            	default :
            	    break loop113;
                }
            } while (true);

            RCURL364=(Token)match(input,RCURL,FOLLOW_RCURL_in_interface_declaration3139); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RCURL364_tree = (CommonTree)adaptor.create(RCURL364);
            adaptor.addChild(root_0, RCURL364_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 91, interface_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_declaration"

    public static class type_parameters_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type_parameters"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:711:1: type_parameters : LT identifier ( COMMA identifier )* GT ;
    public final ValaParser.type_parameters_return type_parameters() throws RecognitionException {
        ValaParser.type_parameters_return retval = new ValaParser.type_parameters_return();
        retval.start = input.LT(1);
        int type_parameters_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LT365=null;
        Token COMMA367=null;
        Token GT369=null;
        ValaParser.identifier_return identifier366 = null;

        ValaParser.identifier_return identifier368 = null;


        CommonTree LT365_tree=null;
        CommonTree COMMA367_tree=null;
        CommonTree GT369_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 92) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:712:2: ( LT identifier ( COMMA identifier )* GT )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:713:2: LT identifier ( COMMA identifier )* GT
            {
            root_0 = (CommonTree)adaptor.nil();

            LT365=(Token)match(input,LT,FOLLOW_LT_in_type_parameters3151); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LT365_tree = (CommonTree)adaptor.create(LT365);
            adaptor.addChild(root_0, LT365_tree);
            }
            pushFollow(FOLLOW_identifier_in_type_parameters3155);
            identifier366=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier366.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:715:2: ( COMMA identifier )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==COMMA) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:715:3: COMMA identifier
            	    {
            	    COMMA367=(Token)match(input,COMMA,FOLLOW_COMMA_in_type_parameters3159); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA367_tree = (CommonTree)adaptor.create(COMMA367);
            	    adaptor.addChild(root_0, COMMA367_tree);
            	    }
            	    pushFollow(FOLLOW_identifier_in_type_parameters3161);
            	    identifier368=identifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier368.getTree());

            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);

            GT369=(Token)match(input,GT,FOLLOW_GT_in_type_parameters3167); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            GT369_tree = (CommonTree)adaptor.create(GT369);
            adaptor.addChild(root_0, GT369_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 92, type_parameters_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type_parameters"

    public static class interface_member_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_member"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:718:1: interface_member : ( attributes )? ( class_declaration | struct_declaration | enum_declaration | delegate_declaration | method_declaration | signal_declaration | field_declaration | constant_declaration | property_declaration ) ;
    public final ValaParser.interface_member_return interface_member() throws RecognitionException {
        ValaParser.interface_member_return retval = new ValaParser.interface_member_return();
        retval.start = input.LT(1);
        int interface_member_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.attributes_return attributes370 = null;

        ValaParser.class_declaration_return class_declaration371 = null;

        ValaParser.struct_declaration_return struct_declaration372 = null;

        ValaParser.enum_declaration_return enum_declaration373 = null;

        ValaParser.delegate_declaration_return delegate_declaration374 = null;

        ValaParser.method_declaration_return method_declaration375 = null;

        ValaParser.signal_declaration_return signal_declaration376 = null;

        ValaParser.field_declaration_return field_declaration377 = null;

        ValaParser.constant_declaration_return constant_declaration378 = null;

        ValaParser.property_declaration_return property_declaration379 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 93) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:719:2: ( ( attributes )? ( class_declaration | struct_declaration | enum_declaration | delegate_declaration | method_declaration | signal_declaration | field_declaration | constant_declaration | property_declaration ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:719:4: ( attributes )? ( class_declaration | struct_declaration | enum_declaration | delegate_declaration | method_declaration | signal_declaration | field_declaration | constant_declaration | property_declaration )
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:719:4: ( attributes )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==LBRACKET) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:719:5: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_interface_member3178);
                    attributes370=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes370.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:720:2: ( class_declaration | struct_declaration | enum_declaration | delegate_declaration | method_declaration | signal_declaration | field_declaration | constant_declaration | property_declaration )
            int alt116=9;
            alt116 = dfa116.predict(input);
            switch (alt116) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:721:2: class_declaration
                    {
                    pushFollow(FOLLOW_class_declaration_in_interface_member3187);
                    class_declaration371=class_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration371.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:722:4: struct_declaration
                    {
                    pushFollow(FOLLOW_struct_declaration_in_interface_member3192);
                    struct_declaration372=struct_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration372.getTree());

                    }
                    break;
                case 3 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:723:4: enum_declaration
                    {
                    pushFollow(FOLLOW_enum_declaration_in_interface_member3198);
                    enum_declaration373=enum_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_declaration373.getTree());

                    }
                    break;
                case 4 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:724:4: delegate_declaration
                    {
                    pushFollow(FOLLOW_delegate_declaration_in_interface_member3204);
                    delegate_declaration374=delegate_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration374.getTree());

                    }
                    break;
                case 5 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:725:4: method_declaration
                    {
                    pushFollow(FOLLOW_method_declaration_in_interface_member3210);
                    method_declaration375=method_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration375.getTree());

                    }
                    break;
                case 6 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:726:4: signal_declaration
                    {
                    pushFollow(FOLLOW_signal_declaration_in_interface_member3216);
                    signal_declaration376=signal_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, signal_declaration376.getTree());

                    }
                    break;
                case 7 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:727:4: field_declaration
                    {
                    pushFollow(FOLLOW_field_declaration_in_interface_member3222);
                    field_declaration377=field_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, field_declaration377.getTree());

                    }
                    break;
                case 8 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:728:4: constant_declaration
                    {
                    pushFollow(FOLLOW_constant_declaration_in_interface_member3228);
                    constant_declaration378=constant_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declaration378.getTree());

                    }
                    break;
                case 9 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:729:4: property_declaration
                    {
                    pushFollow(FOLLOW_property_declaration_in_interface_member3234);
                    property_declaration379=property_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration379.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 93, interface_member_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_member"

    public static class namespace_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "namespace_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:731:1: namespace_declaration : KW_NAMESPACE symbol LCURL ( using_directive )* ( namespace_member )* RCURL ;
    public final ValaParser.namespace_declaration_return namespace_declaration() throws RecognitionException {
        ValaParser.namespace_declaration_return retval = new ValaParser.namespace_declaration_return();
        retval.start = input.LT(1);
        int namespace_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_NAMESPACE380=null;
        Token LCURL382=null;
        Token RCURL385=null;
        ValaParser.symbol_return symbol381 = null;

        ValaParser.using_directive_return using_directive383 = null;

        ValaParser.namespace_member_return namespace_member384 = null;


        CommonTree KW_NAMESPACE380_tree=null;
        CommonTree LCURL382_tree=null;
        CommonTree RCURL385_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 94) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:732:2: ( KW_NAMESPACE symbol LCURL ( using_directive )* ( namespace_member )* RCURL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:733:2: KW_NAMESPACE symbol LCURL ( using_directive )* ( namespace_member )* RCURL
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_NAMESPACE380=(Token)match(input,KW_NAMESPACE,FOLLOW_KW_NAMESPACE_in_namespace_declaration3248); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_NAMESPACE380_tree = (CommonTree)adaptor.create(KW_NAMESPACE380);
            adaptor.addChild(root_0, KW_NAMESPACE380_tree);
            }
            pushFollow(FOLLOW_symbol_in_namespace_declaration3251);
            symbol381=symbol();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, symbol381.getTree());
            LCURL382=(Token)match(input,LCURL,FOLLOW_LCURL_in_namespace_declaration3255); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LCURL382_tree = (CommonTree)adaptor.create(LCURL382);
            adaptor.addChild(root_0, LCURL382_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:736:2: ( using_directive )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==KW_USING) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:736:3: using_directive
            	    {
            	    pushFollow(FOLLOW_using_directive_in_namespace_declaration3261);
            	    using_directive383=using_directive();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, using_directive383.getTree());

            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:737:2: ( namespace_member )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( ((LA118_0>=GLOBAL_NS && LA118_0<=LBRACKET)||LA118_0==KW_VOID||(LA118_0>=KW_DYNAMIC && LA118_0<=KW_WEAK)||LA118_0==KW_NEW||(LA118_0>=KW_ASYNC && LA118_0<=KW_NAMESPACE)||(LA118_0>=KW_DELEGATE && LA118_0<=KW_CONST)) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:737:3: namespace_member
            	    {
            	    pushFollow(FOLLOW_namespace_member_in_namespace_declaration3268);
            	    namespace_member384=namespace_member();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_member384.getTree());

            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);

            RCURL385=(Token)match(input,RCURL,FOLLOW_RCURL_in_namespace_declaration3274); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RCURL385_tree = (CommonTree)adaptor.create(RCURL385);
            adaptor.addChild(root_0, RCURL385_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 94, namespace_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "namespace_declaration"

    public static class struct_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "struct_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:740:1: struct_declaration : ( access_modifier )? ( type_declaration_modifiers )? KW_STRUCT symbol ( COLON base_types )? LCURL ( struct_member )* RCURL ;
    public final ValaParser.struct_declaration_return struct_declaration() throws RecognitionException {
        ValaParser.struct_declaration_return retval = new ValaParser.struct_declaration_return();
        retval.start = input.LT(1);
        int struct_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_STRUCT388=null;
        Token COLON390=null;
        Token LCURL392=null;
        Token RCURL394=null;
        ValaParser.access_modifier_return access_modifier386 = null;

        ValaParser.type_declaration_modifiers_return type_declaration_modifiers387 = null;

        ValaParser.symbol_return symbol389 = null;

        ValaParser.base_types_return base_types391 = null;

        ValaParser.struct_member_return struct_member393 = null;


        CommonTree KW_STRUCT388_tree=null;
        CommonTree COLON390_tree=null;
        CommonTree LCURL392_tree=null;
        CommonTree RCURL394_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 95) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:741:2: ( ( access_modifier )? ( type_declaration_modifiers )? KW_STRUCT symbol ( COLON base_types )? LCURL ( struct_member )* RCURL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:742:2: ( access_modifier )? ( type_declaration_modifiers )? KW_STRUCT symbol ( COLON base_types )? LCURL ( struct_member )* RCURL
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:742:2: ( access_modifier )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( ((LA119_0>=KW_PRIVATE && LA119_0<=KW_INTERNAL)) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:742:3: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_struct_declaration3287);
                    access_modifier386=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier386.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:743:2: ( type_declaration_modifiers )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==KW_EXTERN||(LA120_0>=KW_STATIC && LA120_0<=KW_ABSTRACT)) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:743:3: type_declaration_modifiers
                    {
                    pushFollow(FOLLOW_type_declaration_modifiers_in_struct_declaration3294);
                    type_declaration_modifiers387=type_declaration_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_declaration_modifiers387.getTree());

                    }
                    break;

            }

            KW_STRUCT388=(Token)match(input,KW_STRUCT,FOLLOW_KW_STRUCT_in_struct_declaration3300); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_STRUCT388_tree = (CommonTree)adaptor.create(KW_STRUCT388);
            adaptor.addChild(root_0, KW_STRUCT388_tree);
            }
            pushFollow(FOLLOW_symbol_in_struct_declaration3303);
            symbol389=symbol();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, symbol389.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:746:9: ( COLON base_types )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==COLON) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:746:10: COLON base_types
                    {
                    COLON390=(Token)match(input,COLON,FOLLOW_COLON_in_struct_declaration3314); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    COLON390_tree = (CommonTree)adaptor.create(COLON390);
                    adaptor.addChild(root_0, COLON390_tree);
                    }
                    pushFollow(FOLLOW_base_types_in_struct_declaration3316);
                    base_types391=base_types();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, base_types391.getTree());

                    }
                    break;

            }

            LCURL392=(Token)match(input,LCURL,FOLLOW_LCURL_in_struct_declaration3329); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LCURL392_tree = (CommonTree)adaptor.create(LCURL392);
            adaptor.addChild(root_0, LCURL392_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:748:9: ( struct_member )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==KW_USING||(LA122_0>=GLOBAL_NS && LA122_0<=LBRACKET)||LA122_0==KW_IN||(LA122_0>=KW_IS && LA122_0<=KW_VOID)||(LA122_0>=KW_DYNAMIC && LA122_0<=KW_WEAK)||(LA122_0>=KW_CONSTRUCT && LA122_0<=KW_REQUIRES)||LA122_0==KW_CONST) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:748:10: struct_member
            	    {
            	    pushFollow(FOLLOW_struct_member_in_struct_declaration3341);
            	    struct_member393=struct_member();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_member393.getTree());

            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);

            RCURL394=(Token)match(input,RCURL,FOLLOW_RCURL_in_struct_declaration3354); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RCURL394_tree = (CommonTree)adaptor.create(RCURL394);
            adaptor.addChild(root_0, RCURL394_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 95, struct_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "struct_declaration"

    public static class struct_member_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "struct_member"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:751:1: struct_member : ( attributes )? ( method_declaration | field_declaration | constant_declaration | property_declaration | creation_method_declaration | unknown_chain ) ;
    public final ValaParser.struct_member_return struct_member() throws RecognitionException {
        ValaParser.struct_member_return retval = new ValaParser.struct_member_return();
        retval.start = input.LT(1);
        int struct_member_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.attributes_return attributes395 = null;

        ValaParser.method_declaration_return method_declaration396 = null;

        ValaParser.field_declaration_return field_declaration397 = null;

        ValaParser.constant_declaration_return constant_declaration398 = null;

        ValaParser.property_declaration_return property_declaration399 = null;

        ValaParser.creation_method_declaration_return creation_method_declaration400 = null;

        ValaParser.unknown_chain_return unknown_chain401 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 96) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:752:2: ( ( attributes )? ( method_declaration | field_declaration | constant_declaration | property_declaration | creation_method_declaration | unknown_chain ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:753:2: ( attributes )? ( method_declaration | field_declaration | constant_declaration | property_declaration | creation_method_declaration | unknown_chain )
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:753:2: ( attributes )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==LBRACKET) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:753:3: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_struct_member3367);
                    attributes395=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes395.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:754:2: ( method_declaration | field_declaration | constant_declaration | property_declaration | creation_method_declaration | unknown_chain )
            int alt124=6;
            alt124 = dfa124.predict(input);
            switch (alt124) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:755:3: method_declaration
                    {
                    pushFollow(FOLLOW_method_declaration_in_struct_member3378);
                    method_declaration396=method_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration396.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:756:5: field_declaration
                    {
                    pushFollow(FOLLOW_field_declaration_in_struct_member3385);
                    field_declaration397=field_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, field_declaration397.getTree());

                    }
                    break;
                case 3 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:757:5: constant_declaration
                    {
                    pushFollow(FOLLOW_constant_declaration_in_struct_member3392);
                    constant_declaration398=constant_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declaration398.getTree());

                    }
                    break;
                case 4 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:758:5: property_declaration
                    {
                    pushFollow(FOLLOW_property_declaration_in_struct_member3399);
                    property_declaration399=property_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration399.getTree());

                    }
                    break;
                case 5 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:759:5: creation_method_declaration
                    {
                    pushFollow(FOLLOW_creation_method_declaration_in_struct_member3405);
                    creation_method_declaration400=creation_method_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, creation_method_declaration400.getTree());

                    }
                    break;
                case 6 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:760:5: unknown_chain
                    {
                    pushFollow(FOLLOW_unknown_chain_in_struct_member3411);
                    unknown_chain401=unknown_chain();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unknown_chain401.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 96, struct_member_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "struct_member"

    public static class creation_method_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "creation_method_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:763:1: creation_method_declaration : ( access_modifier )? ( constructor_declaration_modifiers )? symbol parameters ( throws_part )? ( requires_decl )? ( ensures_decl )? ( SEMICOLON | block ) ;
    public final ValaParser.creation_method_declaration_return creation_method_declaration() throws RecognitionException {
        ValaParser.creation_method_declaration_return retval = new ValaParser.creation_method_declaration_return();
        retval.start = input.LT(1);
        int creation_method_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token SEMICOLON409=null;
        ValaParser.access_modifier_return access_modifier402 = null;

        ValaParser.constructor_declaration_modifiers_return constructor_declaration_modifiers403 = null;

        ValaParser.symbol_return symbol404 = null;

        ValaParser.parameters_return parameters405 = null;

        ValaParser.throws_part_return throws_part406 = null;

        ValaParser.requires_decl_return requires_decl407 = null;

        ValaParser.ensures_decl_return ensures_decl408 = null;

        ValaParser.block_return block410 = null;


        CommonTree SEMICOLON409_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 97) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:764:2: ( ( access_modifier )? ( constructor_declaration_modifiers )? symbol parameters ( throws_part )? ( requires_decl )? ( ensures_decl )? ( SEMICOLON | block ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:765:2: ( access_modifier )? ( constructor_declaration_modifiers )? symbol parameters ( throws_part )? ( requires_decl )? ( ensures_decl )? ( SEMICOLON | block )
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:765:2: ( access_modifier )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( ((LA125_0>=KW_PRIVATE && LA125_0<=KW_INTERNAL)) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:765:3: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_creation_method_declaration3427);
                    access_modifier402=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier402.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:766:2: ( constructor_declaration_modifiers )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( ((LA126_0>=KW_ASYNC && LA126_0<=KW_CLASS)||(LA126_0>=KW_EXTERN && LA126_0<=KW_OVERRIDE)) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:766:3: constructor_declaration_modifiers
                    {
                    pushFollow(FOLLOW_constructor_declaration_modifiers_in_creation_method_declaration3434);
                    constructor_declaration_modifiers403=constructor_declaration_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_declaration_modifiers403.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_symbol_in_creation_method_declaration3440);
            symbol404=symbol();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, symbol404.getTree());
            pushFollow(FOLLOW_parameters_in_creation_method_declaration3444);
            parameters405=parameters();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, parameters405.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:769:2: ( throws_part )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==KW_THROWS) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:769:3: throws_part
                    {
                    pushFollow(FOLLOW_throws_part_in_creation_method_declaration3449);
                    throws_part406=throws_part();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, throws_part406.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:770:2: ( requires_decl )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==KW_REQUIRES) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:770:3: requires_decl
                    {
                    pushFollow(FOLLOW_requires_decl_in_creation_method_declaration3456);
                    requires_decl407=requires_decl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, requires_decl407.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:771:2: ( ensures_decl )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==KW_ENSURES) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:771:3: ensures_decl
                    {
                    pushFollow(FOLLOW_ensures_decl_in_creation_method_declaration3463);
                    ensures_decl408=ensures_decl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, ensures_decl408.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:772:2: ( SEMICOLON | block )
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==SEMICOLON) ) {
                alt130=1;
            }
            else if ( (LA130_0==LCURL) ) {
                alt130=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }
            switch (alt130) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:772:3: SEMICOLON
                    {
                    SEMICOLON409=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_creation_method_declaration3470); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON409_tree = (CommonTree)adaptor.create(SEMICOLON409);
                    adaptor.addChild(root_0, SEMICOLON409_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:772:15: block
                    {
                    pushFollow(FOLLOW_block_in_creation_method_declaration3474);
                    block410=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block410.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 97, creation_method_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "creation_method_declaration"

    public static class throws_part_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "throws_part"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:774:1: throws_part : KW_THROWS type ( COMMA type )* ;
    public final ValaParser.throws_part_return throws_part() throws RecognitionException {
        ValaParser.throws_part_return retval = new ValaParser.throws_part_return();
        retval.start = input.LT(1);
        int throws_part_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_THROWS411=null;
        Token COMMA413=null;
        ValaParser.type_return type412 = null;

        ValaParser.type_return type414 = null;


        CommonTree KW_THROWS411_tree=null;
        CommonTree COMMA413_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 98) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:775:2: ( KW_THROWS type ( COMMA type )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:776:2: KW_THROWS type ( COMMA type )*
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_THROWS411=(Token)match(input,KW_THROWS,FOLLOW_KW_THROWS_in_throws_part3486); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_THROWS411_tree = (CommonTree)adaptor.create(KW_THROWS411);
            adaptor.addChild(root_0, KW_THROWS411_tree);
            }
            pushFollow(FOLLOW_type_in_throws_part3489);
            type412=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type412.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:778:2: ( COMMA type )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==COMMA) ) {
                    alt131=1;
                }


                switch (alt131) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:778:3: COMMA type
            	    {
            	    COMMA413=(Token)match(input,COMMA,FOLLOW_COMMA_in_throws_part3494); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA413_tree = (CommonTree)adaptor.create(COMMA413);
            	    adaptor.addChild(root_0, COMMA413_tree);
            	    }
            	    pushFollow(FOLLOW_type_in_throws_part3496);
            	    type414=type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type414.getTree());

            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 98, throws_part_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "throws_part"

    public static class parameters_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "parameters"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:780:1: parameters : LPAREN ( parameters_decl )? RPAREN ;
    public final ValaParser.parameters_return parameters() throws RecognitionException {
        ValaParser.parameters_return retval = new ValaParser.parameters_return();
        retval.start = input.LT(1);
        int parameters_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LPAREN415=null;
        Token RPAREN417=null;
        ValaParser.parameters_decl_return parameters_decl416 = null;


        CommonTree LPAREN415_tree=null;
        CommonTree RPAREN417_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 99) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:781:2: ( LPAREN ( parameters_decl )? RPAREN )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:782:2: LPAREN ( parameters_decl )? RPAREN
            {
            root_0 = (CommonTree)adaptor.nil();

            LPAREN415=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parameters3510); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN415_tree = (CommonTree)adaptor.create(LPAREN415);
            adaptor.addChild(root_0, LPAREN415_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:783:2: ( parameters_decl )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( ((LA132_0>=GLOBAL_NS && LA132_0<=LBRACKET)||LA132_0==KW_VOID||(LA132_0>=KW_DYNAMIC && LA132_0<=KW_WEAK)||(LA132_0>=KW_OUT && LA132_0<=KW_PARAMS)||LA132_0==ELIPSIS) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:783:3: parameters_decl
                    {
                    pushFollow(FOLLOW_parameters_decl_in_parameters3515);
                    parameters_decl416=parameters_decl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, parameters_decl416.getTree());

                    }
                    break;

            }

            RPAREN417=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parameters3520); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN417_tree = (CommonTree)adaptor.create(RPAREN417);
            adaptor.addChild(root_0, RPAREN417_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 99, parameters_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "parameters"

    public static class parameters_decl_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "parameters_decl"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:786:1: parameters_decl : parameter ( COMMA parameter )* ;
    public final ValaParser.parameters_decl_return parameters_decl() throws RecognitionException {
        ValaParser.parameters_decl_return retval = new ValaParser.parameters_decl_return();
        retval.start = input.LT(1);
        int parameters_decl_StartIndex = input.index();
        CommonTree root_0 = null;

        Token COMMA419=null;
        ValaParser.parameter_return parameter418 = null;

        ValaParser.parameter_return parameter420 = null;


        CommonTree COMMA419_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 100) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:787:2: ( parameter ( COMMA parameter )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:788:2: parameter ( COMMA parameter )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_parameter_in_parameters_decl3530);
            parameter418=parameter();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter418.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:789:2: ( COMMA parameter )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==COMMA) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:789:3: COMMA parameter
            	    {
            	    COMMA419=(Token)match(input,COMMA,FOLLOW_COMMA_in_parameters_decl3534); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA419_tree = (CommonTree)adaptor.create(COMMA419);
            	    adaptor.addChild(root_0, COMMA419_tree);
            	    }
            	    pushFollow(FOLLOW_parameter_in_parameters_decl3536);
            	    parameter420=parameter();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter420.getTree());

            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 100, parameters_decl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "parameters_decl"

    public static class requires_decl_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "requires_decl"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:793:1: requires_decl : KW_REQUIRES LPAREN expression RPAREN ( requires_decl )? ;
    public final ValaParser.requires_decl_return requires_decl() throws RecognitionException {
        ValaParser.requires_decl_return retval = new ValaParser.requires_decl_return();
        retval.start = input.LT(1);
        int requires_decl_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_REQUIRES421=null;
        Token LPAREN422=null;
        Token RPAREN424=null;
        ValaParser.expression_return expression423 = null;

        ValaParser.requires_decl_return requires_decl425 = null;


        CommonTree KW_REQUIRES421_tree=null;
        CommonTree LPAREN422_tree=null;
        CommonTree RPAREN424_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 101) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:794:2: ( KW_REQUIRES LPAREN expression RPAREN ( requires_decl )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:795:2: KW_REQUIRES LPAREN expression RPAREN ( requires_decl )?
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_REQUIRES421=(Token)match(input,KW_REQUIRES,FOLLOW_KW_REQUIRES_in_requires_decl3554); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_REQUIRES421_tree = (CommonTree)adaptor.create(KW_REQUIRES421);
            adaptor.addChild(root_0, KW_REQUIRES421_tree);
            }
            LPAREN422=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_requires_decl3557); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN422_tree = (CommonTree)adaptor.create(LPAREN422);
            adaptor.addChild(root_0, LPAREN422_tree);
            }
            pushFollow(FOLLOW_expression_in_requires_decl3561);
            expression423=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression423.getTree());
            RPAREN424=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_requires_decl3565); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN424_tree = (CommonTree)adaptor.create(RPAREN424);
            adaptor.addChild(root_0, RPAREN424_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:799:2: ( requires_decl )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==KW_REQUIRES) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:799:3: requires_decl
                    {
                    pushFollow(FOLLOW_requires_decl_in_requires_decl3569);
                    requires_decl425=requires_decl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, requires_decl425.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 101, requires_decl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "requires_decl"

    public static class parameter_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "parameter"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:801:1: parameter : ( attributes )? ( ELIPSIS | ( ( KW_PARAMS )? ( ( KW_OWNED ) | ( KW_UNOWNED ) )? ( ( KW_REF ) | ( KW_OUT ) )? type identifier ( ASSIGNMENT expression )? ) ) ;
    public final ValaParser.parameter_return parameter() throws RecognitionException {
        ValaParser.parameter_return retval = new ValaParser.parameter_return();
        retval.start = input.LT(1);
        int parameter_StartIndex = input.index();
        CommonTree root_0 = null;

        Token ELIPSIS427=null;
        Token KW_PARAMS428=null;
        Token KW_OWNED429=null;
        Token KW_UNOWNED430=null;
        Token KW_REF431=null;
        Token KW_OUT432=null;
        Token ASSIGNMENT435=null;
        ValaParser.attributes_return attributes426 = null;

        ValaParser.type_return type433 = null;

        ValaParser.identifier_return identifier434 = null;

        ValaParser.expression_return expression436 = null;


        CommonTree ELIPSIS427_tree=null;
        CommonTree KW_PARAMS428_tree=null;
        CommonTree KW_OWNED429_tree=null;
        CommonTree KW_UNOWNED430_tree=null;
        CommonTree KW_REF431_tree=null;
        CommonTree KW_OUT432_tree=null;
        CommonTree ASSIGNMENT435_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 102) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:802:2: ( ( attributes )? ( ELIPSIS | ( ( KW_PARAMS )? ( ( KW_OWNED ) | ( KW_UNOWNED ) )? ( ( KW_REF ) | ( KW_OUT ) )? type identifier ( ASSIGNMENT expression )? ) ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:803:2: ( attributes )? ( ELIPSIS | ( ( KW_PARAMS )? ( ( KW_OWNED ) | ( KW_UNOWNED ) )? ( ( KW_REF ) | ( KW_OUT ) )? type identifier ( ASSIGNMENT expression )? ) )
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:803:2: ( attributes )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==LBRACKET) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:803:3: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_parameter3585);
                    attributes426=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes426.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:804:2: ( ELIPSIS | ( ( KW_PARAMS )? ( ( KW_OWNED ) | ( KW_UNOWNED ) )? ( ( KW_REF ) | ( KW_OUT ) )? type identifier ( ASSIGNMENT expression )? ) )
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==ELIPSIS) ) {
                alt140=1;
            }
            else if ( ((LA140_0>=GLOBAL_NS && LA140_0<=IDENTIFIER)||LA140_0==KW_VOID||(LA140_0>=KW_DYNAMIC && LA140_0<=KW_WEAK)||(LA140_0>=KW_OUT && LA140_0<=KW_PARAMS)) ) {
                alt140=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 140, 0, input);

                throw nvae;
            }
            switch (alt140) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:805:3: ELIPSIS
                    {
                    ELIPSIS427=(Token)match(input,ELIPSIS,FOLLOW_ELIPSIS_in_parameter3597); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ELIPSIS427_tree = (CommonTree)adaptor.create(ELIPSIS427);
                    adaptor.addChild(root_0, ELIPSIS427_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:807:3: ( ( KW_PARAMS )? ( ( KW_OWNED ) | ( KW_UNOWNED ) )? ( ( KW_REF ) | ( KW_OUT ) )? type identifier ( ASSIGNMENT expression )? )
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:807:3: ( ( KW_PARAMS )? ( ( KW_OWNED ) | ( KW_UNOWNED ) )? ( ( KW_REF ) | ( KW_OUT ) )? type identifier ( ASSIGNMENT expression )? )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:808:4: ( KW_PARAMS )? ( ( KW_OWNED ) | ( KW_UNOWNED ) )? ( ( KW_REF ) | ( KW_OUT ) )? type identifier ( ASSIGNMENT expression )?
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:808:4: ( KW_PARAMS )?
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==KW_PARAMS) ) {
                        alt136=1;
                    }
                    switch (alt136) {
                        case 1 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:808:5: KW_PARAMS
                            {
                            KW_PARAMS428=(Token)match(input,KW_PARAMS,FOLLOW_KW_PARAMS_in_parameter3614); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            KW_PARAMS428_tree = (CommonTree)adaptor.create(KW_PARAMS428);
                            adaptor.addChild(root_0, KW_PARAMS428_tree);
                            }

                            }
                            break;

                    }

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:4: ( ( KW_OWNED ) | ( KW_UNOWNED ) )?
                    int alt137=3;
                    int LA137_0 = input.LA(1);

                    if ( (LA137_0==KW_OWNED) ) {
                        int LA137_1 = input.LA(2);

                        if ( (synpred294_Vala()) ) {
                            alt137=1;
                        }
                    }
                    else if ( (LA137_0==KW_UNOWNED) ) {
                        int LA137_2 = input.LA(2);

                        if ( (synpred295_Vala()) ) {
                            alt137=2;
                        }
                    }
                    switch (alt137) {
                        case 1 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:5: ( KW_OWNED )
                            {
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:5: ( KW_OWNED )
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:6: KW_OWNED
                            {
                            KW_OWNED429=(Token)match(input,KW_OWNED,FOLLOW_KW_OWNED_in_parameter3623); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            KW_OWNED429_tree = (CommonTree)adaptor.create(KW_OWNED429);
                            adaptor.addChild(root_0, KW_OWNED429_tree);
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:18: ( KW_UNOWNED )
                            {
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:18: ( KW_UNOWNED )
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:19: KW_UNOWNED
                            {
                            KW_UNOWNED430=(Token)match(input,KW_UNOWNED,FOLLOW_KW_UNOWNED_in_parameter3629); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            KW_UNOWNED430_tree = (CommonTree)adaptor.create(KW_UNOWNED430);
                            adaptor.addChild(root_0, KW_UNOWNED430_tree);
                            }

                            }


                            }
                            break;

                    }

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:810:4: ( ( KW_REF ) | ( KW_OUT ) )?
                    int alt138=3;
                    int LA138_0 = input.LA(1);

                    if ( (LA138_0==KW_REF) ) {
                        alt138=1;
                    }
                    else if ( (LA138_0==KW_OUT) ) {
                        alt138=2;
                    }
                    switch (alt138) {
                        case 1 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:810:5: ( KW_REF )
                            {
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:810:5: ( KW_REF )
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:810:6: KW_REF
                            {
                            KW_REF431=(Token)match(input,KW_REF,FOLLOW_KW_REF_in_parameter3639); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            KW_REF431_tree = (CommonTree)adaptor.create(KW_REF431);
                            adaptor.addChild(root_0, KW_REF431_tree);
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:810:16: ( KW_OUT )
                            {
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:810:16: ( KW_OUT )
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:810:17: KW_OUT
                            {
                            KW_OUT432=(Token)match(input,KW_OUT,FOLLOW_KW_OUT_in_parameter3645); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            KW_OUT432_tree = (CommonTree)adaptor.create(KW_OUT432);
                            adaptor.addChild(root_0, KW_OUT432_tree);
                            }

                            }


                            }
                            break;

                    }

                    pushFollow(FOLLOW_type_in_parameter3653);
                    type433=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type433.getTree());
                    pushFollow(FOLLOW_identifier_in_parameter3659);
                    identifier434=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier434.getTree());
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:813:4: ( ASSIGNMENT expression )?
                    int alt139=2;
                    int LA139_0 = input.LA(1);

                    if ( (LA139_0==ASSIGNMENT) ) {
                        alt139=1;
                    }
                    switch (alt139) {
                        case 1 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:813:5: ASSIGNMENT expression
                            {
                            ASSIGNMENT435=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_parameter3666); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            ASSIGNMENT435_tree = (CommonTree)adaptor.create(ASSIGNMENT435);
                            adaptor.addChild(root_0, ASSIGNMENT435_tree);
                            }
                            pushFollow(FOLLOW_expression_in_parameter3668);
                            expression436=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression436.getTree());

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 102, parameter_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "parameter"

    public static class ensures_decl_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "ensures_decl"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:817:1: ensures_decl : KW_ENSURES LPAREN expression RPAREN ( ensures_decl )? ;
    public final ValaParser.ensures_decl_return ensures_decl() throws RecognitionException {
        ValaParser.ensures_decl_return retval = new ValaParser.ensures_decl_return();
        retval.start = input.LT(1);
        int ensures_decl_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_ENSURES437=null;
        Token LPAREN438=null;
        Token RPAREN440=null;
        ValaParser.expression_return expression439 = null;

        ValaParser.ensures_decl_return ensures_decl441 = null;


        CommonTree KW_ENSURES437_tree=null;
        CommonTree LPAREN438_tree=null;
        CommonTree RPAREN440_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 103) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:818:2: ( KW_ENSURES LPAREN expression RPAREN ( ensures_decl )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:819:2: KW_ENSURES LPAREN expression RPAREN ( ensures_decl )?
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_ENSURES437=(Token)match(input,KW_ENSURES,FOLLOW_KW_ENSURES_in_ensures_decl3691); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_ENSURES437_tree = (CommonTree)adaptor.create(KW_ENSURES437);
            adaptor.addChild(root_0, KW_ENSURES437_tree);
            }
            LPAREN438=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_ensures_decl3696); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN438_tree = (CommonTree)adaptor.create(LPAREN438);
            adaptor.addChild(root_0, LPAREN438_tree);
            }
            pushFollow(FOLLOW_expression_in_ensures_decl3700);
            expression439=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression439.getTree());
            RPAREN440=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_ensures_decl3704); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN440_tree = (CommonTree)adaptor.create(RPAREN440);
            adaptor.addChild(root_0, RPAREN440_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:823:2: ( ensures_decl )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==KW_ENSURES) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:823:3: ensures_decl
                    {
                    pushFollow(FOLLOW_ensures_decl_in_ensures_decl3710);
                    ensures_decl441=ensures_decl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, ensures_decl441.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 103, ensures_decl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "ensures_decl"

    public static class delegate_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "delegate_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:825:1: delegate_declaration : ( access_modifier )? ( delegate_declaration_modifiers )? KW_DELEGATE type symbol ( type_parameters )? parameters ( throws_part )? SEMICOLON ;
    public final ValaParser.delegate_declaration_return delegate_declaration() throws RecognitionException {
        ValaParser.delegate_declaration_return retval = new ValaParser.delegate_declaration_return();
        retval.start = input.LT(1);
        int delegate_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_DELEGATE444=null;
        Token SEMICOLON450=null;
        ValaParser.access_modifier_return access_modifier442 = null;

        ValaParser.delegate_declaration_modifiers_return delegate_declaration_modifiers443 = null;

        ValaParser.type_return type445 = null;

        ValaParser.symbol_return symbol446 = null;

        ValaParser.type_parameters_return type_parameters447 = null;

        ValaParser.parameters_return parameters448 = null;

        ValaParser.throws_part_return throws_part449 = null;


        CommonTree KW_DELEGATE444_tree=null;
        CommonTree SEMICOLON450_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 104) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:826:2: ( ( access_modifier )? ( delegate_declaration_modifiers )? KW_DELEGATE type symbol ( type_parameters )? parameters ( throws_part )? SEMICOLON )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:827:2: ( access_modifier )? ( delegate_declaration_modifiers )? KW_DELEGATE type symbol ( type_parameters )? parameters ( throws_part )? SEMICOLON
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:827:2: ( access_modifier )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( ((LA142_0>=KW_PRIVATE && LA142_0<=KW_INTERNAL)) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:827:3: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_delegate_declaration3725);
                    access_modifier442=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier442.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:828:2: ( delegate_declaration_modifiers )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( ((LA143_0>=KW_ASYNC && LA143_0<=KW_CLASS)||(LA143_0>=KW_EXTERN && LA143_0<=KW_OVERRIDE)) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:828:3: delegate_declaration_modifiers
                    {
                    pushFollow(FOLLOW_delegate_declaration_modifiers_in_delegate_declaration3732);
                    delegate_declaration_modifiers443=delegate_declaration_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration_modifiers443.getTree());

                    }
                    break;

            }

            KW_DELEGATE444=(Token)match(input,KW_DELEGATE,FOLLOW_KW_DELEGATE_in_delegate_declaration3738); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_DELEGATE444_tree = (CommonTree)adaptor.create(KW_DELEGATE444);
            adaptor.addChild(root_0, KW_DELEGATE444_tree);
            }
            pushFollow(FOLLOW_type_in_delegate_declaration3741);
            type445=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type445.getTree());
            pushFollow(FOLLOW_symbol_in_delegate_declaration3745);
            symbol446=symbol();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, symbol446.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:832:2: ( type_parameters )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==LT) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:832:3: type_parameters
                    {
                    pushFollow(FOLLOW_type_parameters_in_delegate_declaration3750);
                    type_parameters447=type_parameters();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameters447.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_parameters_in_delegate_declaration3755);
            parameters448=parameters();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, parameters448.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:834:2: ( throws_part )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==KW_THROWS) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:834:3: throws_part
                    {
                    pushFollow(FOLLOW_throws_part_in_delegate_declaration3759);
                    throws_part449=throws_part();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, throws_part449.getTree());

                    }
                    break;

            }

            SEMICOLON450=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_delegate_declaration3765); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON450_tree = (CommonTree)adaptor.create(SEMICOLON450);
            adaptor.addChild(root_0, SEMICOLON450_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 104, delegate_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "delegate_declaration"

    public static class delegate_declaration_modifiers_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "delegate_declaration_modifiers"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:837:1: delegate_declaration_modifiers : ( delegate_declaration_modifier )+ ;
    public final ValaParser.delegate_declaration_modifiers_return delegate_declaration_modifiers() throws RecognitionException {
        ValaParser.delegate_declaration_modifiers_return retval = new ValaParser.delegate_declaration_modifiers_return();
        retval.start = input.LT(1);
        int delegate_declaration_modifiers_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.delegate_declaration_modifier_return delegate_declaration_modifier451 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 105) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:838:2: ( ( delegate_declaration_modifier )+ )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:838:4: ( delegate_declaration_modifier )+
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:838:4: ( delegate_declaration_modifier )+
            int cnt146=0;
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( ((LA146_0>=KW_ASYNC && LA146_0<=KW_CLASS)||(LA146_0>=KW_EXTERN && LA146_0<=KW_OVERRIDE)) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:0:0: delegate_declaration_modifier
            	    {
            	    pushFollow(FOLLOW_delegate_declaration_modifier_in_delegate_declaration_modifiers3775);
            	    delegate_declaration_modifier451=delegate_declaration_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration_modifier451.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt146 >= 1 ) break loop146;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(146, input);
                        throw eee;
                }
                cnt146++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 105, delegate_declaration_modifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "delegate_declaration_modifiers"

    public static class delegate_declaration_modifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "delegate_declaration_modifier"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:840:1: delegate_declaration_modifier : ( KW_ASYNC | KW_CLASS | KW_EXTERN | KW_INLINE | KW_ABSTRACT | KW_VIRTUAL | KW_OVERRIDE | KW_STATIC );
    public final ValaParser.delegate_declaration_modifier_return delegate_declaration_modifier() throws RecognitionException {
        ValaParser.delegate_declaration_modifier_return retval = new ValaParser.delegate_declaration_modifier_return();
        retval.start = input.LT(1);
        int delegate_declaration_modifier_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set452=null;

        CommonTree set452_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 106) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:841:2: ( KW_ASYNC | KW_CLASS | KW_EXTERN | KW_INLINE | KW_ABSTRACT | KW_VIRTUAL | KW_OVERRIDE | KW_STATIC )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set452=(Token)input.LT(1);
            if ( (input.LA(1)>=KW_ASYNC && input.LA(1)<=KW_CLASS)||(input.LA(1)>=KW_EXTERN && input.LA(1)<=KW_OVERRIDE) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set452));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 106, delegate_declaration_modifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "delegate_declaration_modifier"

    public static class signal_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "signal_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:851:1: signal_declaration : ( access_modifier )? ( signal_declaration_modifiers )? KW_SIGNAL type IDENTIFIER parameters ( SEMICOLON | block ) ;
    public final ValaParser.signal_declaration_return signal_declaration() throws RecognitionException {
        ValaParser.signal_declaration_return retval = new ValaParser.signal_declaration_return();
        retval.start = input.LT(1);
        int signal_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_SIGNAL455=null;
        Token IDENTIFIER457=null;
        Token SEMICOLON459=null;
        ValaParser.access_modifier_return access_modifier453 = null;

        ValaParser.signal_declaration_modifiers_return signal_declaration_modifiers454 = null;

        ValaParser.type_return type456 = null;

        ValaParser.parameters_return parameters458 = null;

        ValaParser.block_return block460 = null;


        CommonTree KW_SIGNAL455_tree=null;
        CommonTree IDENTIFIER457_tree=null;
        CommonTree SEMICOLON459_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:852:2: ( ( access_modifier )? ( signal_declaration_modifiers )? KW_SIGNAL type IDENTIFIER parameters ( SEMICOLON | block ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:853:2: ( access_modifier )? ( signal_declaration_modifiers )? KW_SIGNAL type IDENTIFIER parameters ( SEMICOLON | block )
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:853:2: ( access_modifier )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( ((LA147_0>=KW_PRIVATE && LA147_0<=KW_INTERNAL)) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:853:3: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_signal_declaration3840);
                    access_modifier453=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier453.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:854:2: ( signal_declaration_modifiers )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==KW_NEW||LA148_0==KW_ASYNC||(LA148_0>=KW_EXTERN && LA148_0<=KW_INLINE)||(LA148_0>=KW_ABSTRACT && LA148_0<=KW_OVERRIDE)) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:854:3: signal_declaration_modifiers
                    {
                    pushFollow(FOLLOW_signal_declaration_modifiers_in_signal_declaration3847);
                    signal_declaration_modifiers454=signal_declaration_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, signal_declaration_modifiers454.getTree());

                    }
                    break;

            }

            KW_SIGNAL455=(Token)match(input,KW_SIGNAL,FOLLOW_KW_SIGNAL_in_signal_declaration3853); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_SIGNAL455_tree = (CommonTree)adaptor.create(KW_SIGNAL455);
            adaptor.addChild(root_0, KW_SIGNAL455_tree);
            }
            pushFollow(FOLLOW_type_in_signal_declaration3856);
            type456=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type456.getTree());
            IDENTIFIER457=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_signal_declaration3860); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER457_tree = (CommonTree)adaptor.create(IDENTIFIER457);
            adaptor.addChild(root_0, IDENTIFIER457_tree);
            }
            pushFollow(FOLLOW_parameters_in_signal_declaration3863);
            parameters458=parameters();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, parameters458.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:859:2: ( SEMICOLON | block )
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==SEMICOLON) ) {
                alt149=1;
            }
            else if ( (LA149_0==LCURL) ) {
                alt149=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 149, 0, input);

                throw nvae;
            }
            switch (alt149) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:859:4: SEMICOLON
                    {
                    SEMICOLON459=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_signal_declaration3868); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON459_tree = (CommonTree)adaptor.create(SEMICOLON459);
                    adaptor.addChild(root_0, SEMICOLON459_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:859:16: block
                    {
                    pushFollow(FOLLOW_block_in_signal_declaration3872);
                    block460=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block460.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 107, signal_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "signal_declaration"

    public static class signal_declaration_modifiers_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "signal_declaration_modifiers"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:861:1: signal_declaration_modifiers : ( signal_declaration_modifier )+ ;
    public final ValaParser.signal_declaration_modifiers_return signal_declaration_modifiers() throws RecognitionException {
        ValaParser.signal_declaration_modifiers_return retval = new ValaParser.signal_declaration_modifiers_return();
        retval.start = input.LT(1);
        int signal_declaration_modifiers_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.signal_declaration_modifier_return signal_declaration_modifier461 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:862:2: ( ( signal_declaration_modifier )+ )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:862:4: ( signal_declaration_modifier )+
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:862:4: ( signal_declaration_modifier )+
            int cnt150=0;
            loop150:
            do {
                int alt150=2;
                int LA150_0 = input.LA(1);

                if ( (LA150_0==KW_NEW||LA150_0==KW_ASYNC||(LA150_0>=KW_EXTERN && LA150_0<=KW_INLINE)||(LA150_0>=KW_ABSTRACT && LA150_0<=KW_OVERRIDE)) ) {
                    alt150=1;
                }


                switch (alt150) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:0:0: signal_declaration_modifier
            	    {
            	    pushFollow(FOLLOW_signal_declaration_modifier_in_signal_declaration_modifiers3884);
            	    signal_declaration_modifier461=signal_declaration_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, signal_declaration_modifier461.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt150 >= 1 ) break loop150;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(150, input);
                        throw eee;
                }
                cnt150++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 108, signal_declaration_modifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "signal_declaration_modifiers"

    public static class signal_declaration_modifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "signal_declaration_modifier"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:864:1: signal_declaration_modifier : ( KW_ASYNC | KW_EXTERN | KW_INLINE | KW_ABSTRACT | KW_VIRTUAL | KW_OVERRIDE | KW_NEW );
    public final ValaParser.signal_declaration_modifier_return signal_declaration_modifier() throws RecognitionException {
        ValaParser.signal_declaration_modifier_return retval = new ValaParser.signal_declaration_modifier_return();
        retval.start = input.LT(1);
        int signal_declaration_modifier_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set462=null;

        CommonTree set462_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 109) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:865:2: ( KW_ASYNC | KW_EXTERN | KW_INLINE | KW_ABSTRACT | KW_VIRTUAL | KW_OVERRIDE | KW_NEW )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set462=(Token)input.LT(1);
            if ( input.LA(1)==KW_NEW||input.LA(1)==KW_ASYNC||(input.LA(1)>=KW_EXTERN && input.LA(1)<=KW_INLINE)||(input.LA(1)>=KW_ABSTRACT && input.LA(1)<=KW_OVERRIDE) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set462));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 109, signal_declaration_modifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "signal_declaration_modifier"

    public static class method_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "method_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:874:1: method_declaration : ( access_modifier )? ( member_declaration_modifiers )? type identifier ( type_parameters )? parameters ( throws_part )? ( requires_decl )? ( ensures_decl )? ( SEMICOLON | block ) ;
    public final ValaParser.method_declaration_return method_declaration() throws RecognitionException {
        ValaParser.method_declaration_return retval = new ValaParser.method_declaration_return();
        retval.start = input.LT(1);
        int method_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token SEMICOLON472=null;
        ValaParser.access_modifier_return access_modifier463 = null;

        ValaParser.member_declaration_modifiers_return member_declaration_modifiers464 = null;

        ValaParser.type_return type465 = null;

        ValaParser.identifier_return identifier466 = null;

        ValaParser.type_parameters_return type_parameters467 = null;

        ValaParser.parameters_return parameters468 = null;

        ValaParser.throws_part_return throws_part469 = null;

        ValaParser.requires_decl_return requires_decl470 = null;

        ValaParser.ensures_decl_return ensures_decl471 = null;

        ValaParser.block_return block473 = null;


        CommonTree SEMICOLON472_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 110) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:875:2: ( ( access_modifier )? ( member_declaration_modifiers )? type identifier ( type_parameters )? parameters ( throws_part )? ( requires_decl )? ( ensures_decl )? ( SEMICOLON | block ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:876:2: ( access_modifier )? ( member_declaration_modifiers )? type identifier ( type_parameters )? parameters ( throws_part )? ( requires_decl )? ( ensures_decl )? ( SEMICOLON | block )
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:876:2: ( access_modifier )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( ((LA151_0>=KW_PRIVATE && LA151_0<=KW_INTERNAL)) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:876:3: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_method_declaration3940);
                    access_modifier463=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier463.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:877:2: ( member_declaration_modifiers )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==KW_NEW||(LA152_0>=KW_ASYNC && LA152_0<=KW_CLASS)||(LA152_0>=KW_EXTERN && LA152_0<=KW_OVERRIDE)) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:877:3: member_declaration_modifiers
                    {
                    pushFollow(FOLLOW_member_declaration_modifiers_in_method_declaration3947);
                    member_declaration_modifiers464=member_declaration_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declaration_modifiers464.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_type_in_method_declaration3953);
            type465=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type465.getTree());
            pushFollow(FOLLOW_identifier_in_method_declaration3957);
            identifier466=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier466.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:880:2: ( type_parameters )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==LT) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:880:3: type_parameters
                    {
                    pushFollow(FOLLOW_type_parameters_in_method_declaration3962);
                    type_parameters467=type_parameters();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameters467.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_parameters_in_method_declaration3975);
            parameters468=parameters();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, parameters468.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:882:2: ( throws_part )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==KW_THROWS) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:882:3: throws_part
                    {
                    pushFollow(FOLLOW_throws_part_in_method_declaration3979);
                    throws_part469=throws_part();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, throws_part469.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:883:2: ( requires_decl )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==KW_REQUIRES) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:883:3: requires_decl
                    {
                    pushFollow(FOLLOW_requires_decl_in_method_declaration3986);
                    requires_decl470=requires_decl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, requires_decl470.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:884:2: ( ensures_decl )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==KW_ENSURES) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:884:3: ensures_decl
                    {
                    pushFollow(FOLLOW_ensures_decl_in_method_declaration3993);
                    ensures_decl471=ensures_decl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, ensures_decl471.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:885:2: ( SEMICOLON | block )
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==SEMICOLON) ) {
                alt157=1;
            }
            else if ( (LA157_0==LCURL) ) {
                alt157=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }
            switch (alt157) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:885:4: SEMICOLON
                    {
                    SEMICOLON472=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_method_declaration4001); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON472_tree = (CommonTree)adaptor.create(SEMICOLON472);
                    adaptor.addChild(root_0, SEMICOLON472_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:885:16: block
                    {
                    pushFollow(FOLLOW_block_in_method_declaration4005);
                    block473=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block473.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 110, method_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "method_declaration"

    public static class constant_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constant_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:887:1: constant_declaration : ( access_modifier )? ( member_declaration_modifiers )? KW_CONST type IDENTIFIER ( inline_array_type )? ( ASSIGNMENT expression )? SEMICOLON ;
    public final ValaParser.constant_declaration_return constant_declaration() throws RecognitionException {
        ValaParser.constant_declaration_return retval = new ValaParser.constant_declaration_return();
        retval.start = input.LT(1);
        int constant_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_CONST476=null;
        Token IDENTIFIER478=null;
        Token ASSIGNMENT480=null;
        Token SEMICOLON482=null;
        ValaParser.access_modifier_return access_modifier474 = null;

        ValaParser.member_declaration_modifiers_return member_declaration_modifiers475 = null;

        ValaParser.type_return type477 = null;

        ValaParser.inline_array_type_return inline_array_type479 = null;

        ValaParser.expression_return expression481 = null;


        CommonTree KW_CONST476_tree=null;
        CommonTree IDENTIFIER478_tree=null;
        CommonTree ASSIGNMENT480_tree=null;
        CommonTree SEMICOLON482_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 111) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:888:2: ( ( access_modifier )? ( member_declaration_modifiers )? KW_CONST type IDENTIFIER ( inline_array_type )? ( ASSIGNMENT expression )? SEMICOLON )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:889:2: ( access_modifier )? ( member_declaration_modifiers )? KW_CONST type IDENTIFIER ( inline_array_type )? ( ASSIGNMENT expression )? SEMICOLON
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:889:2: ( access_modifier )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( ((LA158_0>=KW_PRIVATE && LA158_0<=KW_INTERNAL)) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:889:3: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_constant_declaration4020);
                    access_modifier474=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier474.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:890:2: ( member_declaration_modifiers )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==KW_NEW||(LA159_0>=KW_ASYNC && LA159_0<=KW_CLASS)||(LA159_0>=KW_EXTERN && LA159_0<=KW_OVERRIDE)) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:890:3: member_declaration_modifiers
                    {
                    pushFollow(FOLLOW_member_declaration_modifiers_in_constant_declaration4027);
                    member_declaration_modifiers475=member_declaration_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declaration_modifiers475.getTree());

                    }
                    break;

            }

            KW_CONST476=(Token)match(input,KW_CONST,FOLLOW_KW_CONST_in_constant_declaration4033); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_CONST476_tree = (CommonTree)adaptor.create(KW_CONST476);
            adaptor.addChild(root_0, KW_CONST476_tree);
            }
            pushFollow(FOLLOW_type_in_constant_declaration4036);
            type477=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type477.getTree());
            IDENTIFIER478=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_constant_declaration4040); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER478_tree = (CommonTree)adaptor.create(IDENTIFIER478);
            adaptor.addChild(root_0, IDENTIFIER478_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:894:2: ( inline_array_type )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==LBRACKET) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:894:3: inline_array_type
                    {
                    pushFollow(FOLLOW_inline_array_type_in_constant_declaration4045);
                    inline_array_type479=inline_array_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, inline_array_type479.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:895:2: ( ASSIGNMENT expression )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==ASSIGNMENT) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:895:3: ASSIGNMENT expression
                    {
                    ASSIGNMENT480=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_constant_declaration4051); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGNMENT480_tree = (CommonTree)adaptor.create(ASSIGNMENT480);
                    adaptor.addChild(root_0, ASSIGNMENT480_tree);
                    }
                    pushFollow(FOLLOW_expression_in_constant_declaration4053);
                    expression481=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression481.getTree());

                    }
                    break;

            }

            SEMICOLON482=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_constant_declaration4059); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON482_tree = (CommonTree)adaptor.create(SEMICOLON482);
            adaptor.addChild(root_0, SEMICOLON482_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 111, constant_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constant_declaration"

    public static class inline_array_type_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "inline_array_type"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:898:1: inline_array_type : LBRACKET INTEGER RBRACKET ;
    public final ValaParser.inline_array_type_return inline_array_type() throws RecognitionException {
        ValaParser.inline_array_type_return retval = new ValaParser.inline_array_type_return();
        retval.start = input.LT(1);
        int inline_array_type_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LBRACKET483=null;
        Token INTEGER484=null;
        Token RBRACKET485=null;

        CommonTree LBRACKET483_tree=null;
        CommonTree INTEGER484_tree=null;
        CommonTree RBRACKET485_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 112) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:899:2: ( LBRACKET INTEGER RBRACKET )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:900:2: LBRACKET INTEGER RBRACKET
            {
            root_0 = (CommonTree)adaptor.nil();

            LBRACKET483=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_inline_array_type4071); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LBRACKET483_tree = (CommonTree)adaptor.create(LBRACKET483);
            adaptor.addChild(root_0, LBRACKET483_tree);
            }
            INTEGER484=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_inline_array_type4074); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            INTEGER484_tree = (CommonTree)adaptor.create(INTEGER484);
            adaptor.addChild(root_0, INTEGER484_tree);
            }
            RBRACKET485=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_inline_array_type4078); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RBRACKET485_tree = (CommonTree)adaptor.create(RBRACKET485);
            adaptor.addChild(root_0, RBRACKET485_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 112, inline_array_type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "inline_array_type"

    public static class field_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "field_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:904:1: field_declaration : ( access_modifier )? ( member_declaration_modifiers )? type identifier ( LBRACKET RBRACKET )? ( ASSIGNMENT expression )? SEMICOLON ;
    public final ValaParser.field_declaration_return field_declaration() throws RecognitionException {
        ValaParser.field_declaration_return retval = new ValaParser.field_declaration_return();
        retval.start = input.LT(1);
        int field_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LBRACKET490=null;
        Token RBRACKET491=null;
        Token ASSIGNMENT492=null;
        Token SEMICOLON494=null;
        ValaParser.access_modifier_return access_modifier486 = null;

        ValaParser.member_declaration_modifiers_return member_declaration_modifiers487 = null;

        ValaParser.type_return type488 = null;

        ValaParser.identifier_return identifier489 = null;

        ValaParser.expression_return expression493 = null;


        CommonTree LBRACKET490_tree=null;
        CommonTree RBRACKET491_tree=null;
        CommonTree ASSIGNMENT492_tree=null;
        CommonTree SEMICOLON494_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 113) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:905:2: ( ( access_modifier )? ( member_declaration_modifiers )? type identifier ( LBRACKET RBRACKET )? ( ASSIGNMENT expression )? SEMICOLON )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:906:2: ( access_modifier )? ( member_declaration_modifiers )? type identifier ( LBRACKET RBRACKET )? ( ASSIGNMENT expression )? SEMICOLON
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:906:2: ( access_modifier )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( ((LA162_0>=KW_PRIVATE && LA162_0<=KW_INTERNAL)) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:906:3: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_field_declaration4091);
                    access_modifier486=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier486.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:907:2: ( member_declaration_modifiers )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==KW_NEW||(LA163_0>=KW_ASYNC && LA163_0<=KW_CLASS)||(LA163_0>=KW_EXTERN && LA163_0<=KW_OVERRIDE)) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:907:3: member_declaration_modifiers
                    {
                    pushFollow(FOLLOW_member_declaration_modifiers_in_field_declaration4098);
                    member_declaration_modifiers487=member_declaration_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declaration_modifiers487.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_type_in_field_declaration4104);
            type488=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type488.getTree());
            pushFollow(FOLLOW_identifier_in_field_declaration4108);
            identifier489=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier489.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:910:2: ( LBRACKET RBRACKET )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==LBRACKET) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:910:3: LBRACKET RBRACKET
                    {
                    LBRACKET490=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_field_declaration4112); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LBRACKET490_tree = (CommonTree)adaptor.create(LBRACKET490);
                    adaptor.addChild(root_0, LBRACKET490_tree);
                    }
                    RBRACKET491=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_field_declaration4115); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RBRACKET491_tree = (CommonTree)adaptor.create(RBRACKET491);
                    adaptor.addChild(root_0, RBRACKET491_tree);
                    }

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:911:2: ( ASSIGNMENT expression )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==ASSIGNMENT) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:911:3: ASSIGNMENT expression
                    {
                    ASSIGNMENT492=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_field_declaration4121); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGNMENT492_tree = (CommonTree)adaptor.create(ASSIGNMENT492);
                    adaptor.addChild(root_0, ASSIGNMENT492_tree);
                    }
                    pushFollow(FOLLOW_expression_in_field_declaration4123);
                    expression493=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression493.getTree());

                    }
                    break;

            }

            SEMICOLON494=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_field_declaration4129); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON494_tree = (CommonTree)adaptor.create(SEMICOLON494);
            adaptor.addChild(root_0, SEMICOLON494_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 113, field_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "field_declaration"

    public static class property_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "property_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:914:1: property_declaration : ( access_modifier )? ( property_declaration_modifiers )? type identifier LCURL ( property_declaration_part )* RCURL ;
    public final ValaParser.property_declaration_return property_declaration() throws RecognitionException {
        ValaParser.property_declaration_return retval = new ValaParser.property_declaration_return();
        retval.start = input.LT(1);
        int property_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LCURL499=null;
        Token RCURL501=null;
        ValaParser.access_modifier_return access_modifier495 = null;

        ValaParser.property_declaration_modifiers_return property_declaration_modifiers496 = null;

        ValaParser.type_return type497 = null;

        ValaParser.identifier_return identifier498 = null;

        ValaParser.property_declaration_part_return property_declaration_part500 = null;


        CommonTree LCURL499_tree=null;
        CommonTree RCURL501_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 114) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:915:2: ( ( access_modifier )? ( property_declaration_modifiers )? type identifier LCURL ( property_declaration_part )* RCURL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:916:2: ( access_modifier )? ( property_declaration_modifiers )? type identifier LCURL ( property_declaration_part )* RCURL
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:916:2: ( access_modifier )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( ((LA166_0>=KW_PRIVATE && LA166_0<=KW_INTERNAL)) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:916:3: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_property_declaration4142);
                    access_modifier495=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier495.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:917:2: ( property_declaration_modifiers )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==KW_NEW||LA167_0==KW_CLASS||(LA167_0>=KW_EXTERN && LA167_0<=KW_OVERRIDE)) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:917:3: property_declaration_modifiers
                    {
                    pushFollow(FOLLOW_property_declaration_modifiers_in_property_declaration4149);
                    property_declaration_modifiers496=property_declaration_modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration_modifiers496.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_type_in_property_declaration4155);
            type497=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type497.getTree());
            pushFollow(FOLLOW_identifier_in_property_declaration4157);
            identifier498=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier498.getTree());
            LCURL499=(Token)match(input,LCURL,FOLLOW_LCURL_in_property_declaration4167); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LCURL499_tree = (CommonTree)adaptor.create(LCURL499);
            adaptor.addChild(root_0, LCURL499_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:920:9: ( property_declaration_part )*
            loop168:
            do {
                int alt168=2;
                int LA168_0 = input.LA(1);

                if ( (LA168_0==LBRACKET||(LA168_0>=KW_OWNED && LA168_0<=KW_UNOWNED)||(LA168_0>=KW_CONSTRUCT && LA168_0<=KW_GET)||(LA168_0>=KW_PRIVATE && LA168_0<=KW_INTERNAL)||LA168_0==KW_DEFAULT) ) {
                    alt168=1;
                }


                switch (alt168) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:920:10: property_declaration_part
            	    {
            	    pushFollow(FOLLOW_property_declaration_part_in_property_declaration4179);
            	    property_declaration_part500=property_declaration_part();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration_part500.getTree());

            	    }
            	    break;

            	default :
            	    break loop168;
                }
            } while (true);

            RCURL501=(Token)match(input,RCURL,FOLLOW_RCURL_in_property_declaration4192); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RCURL501_tree = (CommonTree)adaptor.create(RCURL501);
            adaptor.addChild(root_0, RCURL501_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 114, property_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "property_declaration"

    public static class property_declaration_part_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "property_declaration_part"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:923:1: property_declaration_part : ( ( KW_DEFAULT ASSIGNMENT expression SEMICOLON ) | property_accessor );
    public final ValaParser.property_declaration_part_return property_declaration_part() throws RecognitionException {
        ValaParser.property_declaration_part_return retval = new ValaParser.property_declaration_part_return();
        retval.start = input.LT(1);
        int property_declaration_part_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_DEFAULT502=null;
        Token ASSIGNMENT503=null;
        Token SEMICOLON505=null;
        ValaParser.expression_return expression504 = null;

        ValaParser.property_accessor_return property_accessor506 = null;


        CommonTree KW_DEFAULT502_tree=null;
        CommonTree ASSIGNMENT503_tree=null;
        CommonTree SEMICOLON505_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 115) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:924:2: ( ( KW_DEFAULT ASSIGNMENT expression SEMICOLON ) | property_accessor )
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==KW_DEFAULT) ) {
                alt169=1;
            }
            else if ( (LA169_0==LBRACKET||(LA169_0>=KW_OWNED && LA169_0<=KW_UNOWNED)||(LA169_0>=KW_CONSTRUCT && LA169_0<=KW_GET)||(LA169_0>=KW_PRIVATE && LA169_0<=KW_INTERNAL)) ) {
                alt169=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 169, 0, input);

                throw nvae;
            }
            switch (alt169) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:925:2: ( KW_DEFAULT ASSIGNMENT expression SEMICOLON )
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:925:2: ( KW_DEFAULT ASSIGNMENT expression SEMICOLON )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:926:3: KW_DEFAULT ASSIGNMENT expression SEMICOLON
                    {
                    KW_DEFAULT502=(Token)match(input,KW_DEFAULT,FOLLOW_KW_DEFAULT_in_property_declaration_part4209); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_DEFAULT502_tree = (CommonTree)adaptor.create(KW_DEFAULT502);
                    adaptor.addChild(root_0, KW_DEFAULT502_tree);
                    }
                    ASSIGNMENT503=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_property_declaration_part4213); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGNMENT503_tree = (CommonTree)adaptor.create(ASSIGNMENT503);
                    adaptor.addChild(root_0, ASSIGNMENT503_tree);
                    }
                    pushFollow(FOLLOW_expression_in_property_declaration_part4218);
                    expression504=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression504.getTree());
                    SEMICOLON505=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_property_declaration_part4223); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON505_tree = (CommonTree)adaptor.create(SEMICOLON505);
                    adaptor.addChild(root_0, SEMICOLON505_tree);
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:931:4: property_accessor
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_property_accessor_in_property_declaration_part4233);
                    property_accessor506=property_accessor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_accessor506.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 115, property_declaration_part_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "property_declaration_part"

    public static class property_accessor_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "property_accessor"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:933:1: property_accessor : ( attributes )? ( access_modifier )? ( KW_OWNED | KW_UNOWNED )? ( ( property_get_accessor property_set_construct_accessor ) | ( property_set_construct_accessor property_get_accessor ) | ( property_set_construct_accessor ) | ( property_get_accessor ) ) ;
    public final ValaParser.property_accessor_return property_accessor() throws RecognitionException {
        ValaParser.property_accessor_return retval = new ValaParser.property_accessor_return();
        retval.start = input.LT(1);
        int property_accessor_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set509=null;
        ValaParser.attributes_return attributes507 = null;

        ValaParser.access_modifier_return access_modifier508 = null;

        ValaParser.property_get_accessor_return property_get_accessor510 = null;

        ValaParser.property_set_construct_accessor_return property_set_construct_accessor511 = null;

        ValaParser.property_set_construct_accessor_return property_set_construct_accessor512 = null;

        ValaParser.property_get_accessor_return property_get_accessor513 = null;

        ValaParser.property_set_construct_accessor_return property_set_construct_accessor514 = null;

        ValaParser.property_get_accessor_return property_get_accessor515 = null;


        CommonTree set509_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 116) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:934:2: ( ( attributes )? ( access_modifier )? ( KW_OWNED | KW_UNOWNED )? ( ( property_get_accessor property_set_construct_accessor ) | ( property_set_construct_accessor property_get_accessor ) | ( property_set_construct_accessor ) | ( property_get_accessor ) ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:935:2: ( attributes )? ( access_modifier )? ( KW_OWNED | KW_UNOWNED )? ( ( property_get_accessor property_set_construct_accessor ) | ( property_set_construct_accessor property_get_accessor ) | ( property_set_construct_accessor ) | ( property_get_accessor ) )
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:935:2: ( attributes )?
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==LBRACKET) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:935:3: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_property_accessor4246);
                    attributes507=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes507.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:936:2: ( access_modifier )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( ((LA171_0>=KW_PRIVATE && LA171_0<=KW_INTERNAL)) ) {
                int LA171_1 = input.LA(2);

                if ( (synpred342_Vala()) ) {
                    alt171=1;
                }
            }
            switch (alt171) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:936:3: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_property_accessor4253);
                    access_modifier508=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier508.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:937:2: ( KW_OWNED | KW_UNOWNED )?
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( ((LA172_0>=KW_OWNED && LA172_0<=KW_UNOWNED)) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:
                    {
                    set509=(Token)input.LT(1);
                    if ( (input.LA(1)>=KW_OWNED && input.LA(1)<=KW_UNOWNED) ) {
                        input.consume();
                        if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set509));
                        state.errorRecovery=false;state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:938:2: ( ( property_get_accessor property_set_construct_accessor ) | ( property_set_construct_accessor property_get_accessor ) | ( property_set_construct_accessor ) | ( property_get_accessor ) )
            int alt173=4;
            switch ( input.LA(1) ) {
            case KW_PRIVATE:
            case KW_PROTECTED:
            case KW_PUBLIC:
            case KW_INTERNAL:
                {
                int LA173_1 = input.LA(2);

                if ( (synpred345_Vala()) ) {
                    alt173=1;
                }
                else if ( (synpred346_Vala()) ) {
                    alt173=2;
                }
                else if ( (synpred347_Vala()) ) {
                    alt173=3;
                }
                else if ( (true) ) {
                    alt173=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 173, 1, input);

                    throw nvae;
                }
                }
                break;
            case KW_GET:
                {
                int LA173_2 = input.LA(2);

                if ( (synpred345_Vala()) ) {
                    alt173=1;
                }
                else if ( (true) ) {
                    alt173=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 173, 2, input);

                    throw nvae;
                }
                }
                break;
            case KW_SET:
                {
                int LA173_3 = input.LA(2);

                if ( (synpred346_Vala()) ) {
                    alt173=2;
                }
                else if ( (synpred347_Vala()) ) {
                    alt173=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 173, 3, input);

                    throw nvae;
                }
                }
                break;
            case KW_CONSTRUCT:
                {
                int LA173_4 = input.LA(2);

                if ( (synpred346_Vala()) ) {
                    alt173=2;
                }
                else if ( (synpred347_Vala()) ) {
                    alt173=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 173, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 173, 0, input);

                throw nvae;
            }

            switch (alt173) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:939:3: ( property_get_accessor property_set_construct_accessor )
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:939:3: ( property_get_accessor property_set_construct_accessor )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:939:4: property_get_accessor property_set_construct_accessor
                    {
                    pushFollow(FOLLOW_property_get_accessor_in_property_accessor4273);
                    property_get_accessor510=property_get_accessor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_get_accessor510.getTree());
                    pushFollow(FOLLOW_property_set_construct_accessor_in_property_accessor4275);
                    property_set_construct_accessor511=property_set_construct_accessor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_set_construct_accessor511.getTree());

                    }


                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:940:5: ( property_set_construct_accessor property_get_accessor )
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:940:5: ( property_set_construct_accessor property_get_accessor )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:940:6: property_set_construct_accessor property_get_accessor
                    {
                    pushFollow(FOLLOW_property_set_construct_accessor_in_property_accessor4283);
                    property_set_construct_accessor512=property_set_construct_accessor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_set_construct_accessor512.getTree());
                    pushFollow(FOLLOW_property_get_accessor_in_property_accessor4285);
                    property_get_accessor513=property_get_accessor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_get_accessor513.getTree());

                    }


                    }
                    break;
                case 3 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:941:5: ( property_set_construct_accessor )
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:941:5: ( property_set_construct_accessor )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:941:6: property_set_construct_accessor
                    {
                    pushFollow(FOLLOW_property_set_construct_accessor_in_property_accessor4293);
                    property_set_construct_accessor514=property_set_construct_accessor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_set_construct_accessor514.getTree());

                    }


                    }
                    break;
                case 4 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:942:5: ( property_get_accessor )
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:942:5: ( property_get_accessor )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:942:6: property_get_accessor
                    {
                    pushFollow(FOLLOW_property_get_accessor_in_property_accessor4303);
                    property_get_accessor515=property_get_accessor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_get_accessor515.getTree());

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 116, property_accessor_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "property_accessor"

    public static class property_get_accessor_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "property_get_accessor"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:945:1: property_get_accessor : ( access_modifier )? KW_GET ( SEMICOLON | block ) ;
    public final ValaParser.property_get_accessor_return property_get_accessor() throws RecognitionException {
        ValaParser.property_get_accessor_return retval = new ValaParser.property_get_accessor_return();
        retval.start = input.LT(1);
        int property_get_accessor_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_GET517=null;
        Token SEMICOLON518=null;
        ValaParser.access_modifier_return access_modifier516 = null;

        ValaParser.block_return block519 = null;


        CommonTree KW_GET517_tree=null;
        CommonTree SEMICOLON518_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 117) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:946:2: ( ( access_modifier )? KW_GET ( SEMICOLON | block ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:947:2: ( access_modifier )? KW_GET ( SEMICOLON | block )
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:947:2: ( access_modifier )?
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( ((LA174_0>=KW_PRIVATE && LA174_0<=KW_INTERNAL)) ) {
                alt174=1;
            }
            switch (alt174) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:947:3: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_property_get_accessor4323);
                    access_modifier516=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier516.getTree());

                    }
                    break;

            }

            KW_GET517=(Token)match(input,KW_GET,FOLLOW_KW_GET_in_property_get_accessor4328); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_GET517_tree = (CommonTree)adaptor.create(KW_GET517);
            adaptor.addChild(root_0, KW_GET517_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:949:2: ( SEMICOLON | block )
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==SEMICOLON) ) {
                alt175=1;
            }
            else if ( (LA175_0==LCURL) ) {
                alt175=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 175, 0, input);

                throw nvae;
            }
            switch (alt175) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:949:4: SEMICOLON
                    {
                    SEMICOLON518=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_property_get_accessor4333); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON518_tree = (CommonTree)adaptor.create(SEMICOLON518);
                    adaptor.addChild(root_0, SEMICOLON518_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:949:16: block
                    {
                    pushFollow(FOLLOW_block_in_property_get_accessor4337);
                    block519=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block519.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 117, property_get_accessor_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "property_get_accessor"

    public static class property_set_construct_accessor_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "property_set_construct_accessor"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:951:1: property_set_construct_accessor : ( ( access_modifier )? ( ( KW_SET ( KW_CONSTRUCT )? ) | ( KW_CONSTRUCT ) | ( KW_CONSTRUCT KW_SET ) ) ) ( SEMICOLON | block ) ;
    public final ValaParser.property_set_construct_accessor_return property_set_construct_accessor() throws RecognitionException {
        ValaParser.property_set_construct_accessor_return retval = new ValaParser.property_set_construct_accessor_return();
        retval.start = input.LT(1);
        int property_set_construct_accessor_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_SET521=null;
        Token KW_CONSTRUCT522=null;
        Token KW_CONSTRUCT523=null;
        Token KW_CONSTRUCT524=null;
        Token KW_SET525=null;
        Token SEMICOLON526=null;
        ValaParser.access_modifier_return access_modifier520 = null;

        ValaParser.block_return block527 = null;


        CommonTree KW_SET521_tree=null;
        CommonTree KW_CONSTRUCT522_tree=null;
        CommonTree KW_CONSTRUCT523_tree=null;
        CommonTree KW_CONSTRUCT524_tree=null;
        CommonTree KW_SET525_tree=null;
        CommonTree SEMICOLON526_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 118) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:952:2: ( ( ( access_modifier )? ( ( KW_SET ( KW_CONSTRUCT )? ) | ( KW_CONSTRUCT ) | ( KW_CONSTRUCT KW_SET ) ) ) ( SEMICOLON | block ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:953:2: ( ( access_modifier )? ( ( KW_SET ( KW_CONSTRUCT )? ) | ( KW_CONSTRUCT ) | ( KW_CONSTRUCT KW_SET ) ) ) ( SEMICOLON | block )
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:953:2: ( ( access_modifier )? ( ( KW_SET ( KW_CONSTRUCT )? ) | ( KW_CONSTRUCT ) | ( KW_CONSTRUCT KW_SET ) ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:954:3: ( access_modifier )? ( ( KW_SET ( KW_CONSTRUCT )? ) | ( KW_CONSTRUCT ) | ( KW_CONSTRUCT KW_SET ) )
            {
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:954:3: ( access_modifier )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( ((LA176_0>=KW_PRIVATE && LA176_0<=KW_INTERNAL)) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:954:4: access_modifier
                    {
                    pushFollow(FOLLOW_access_modifier_in_property_set_construct_accessor4356);
                    access_modifier520=access_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_modifier520.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:955:3: ( ( KW_SET ( KW_CONSTRUCT )? ) | ( KW_CONSTRUCT ) | ( KW_CONSTRUCT KW_SET ) )
            int alt178=3;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==KW_SET) ) {
                alt178=1;
            }
            else if ( (LA178_0==KW_CONSTRUCT) ) {
                int LA178_2 = input.LA(2);

                if ( (LA178_2==KW_SET) ) {
                    alt178=3;
                }
                else if ( (LA178_2==SEMICOLON||LA178_2==LCURL) ) {
                    alt178=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 178, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 178, 0, input);

                throw nvae;
            }
            switch (alt178) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:956:4: ( KW_SET ( KW_CONSTRUCT )? )
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:956:4: ( KW_SET ( KW_CONSTRUCT )? )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:956:6: KW_SET ( KW_CONSTRUCT )?
                    {
                    KW_SET521=(Token)match(input,KW_SET,FOLLOW_KW_SET_in_property_set_construct_accessor4369); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_SET521_tree = (CommonTree)adaptor.create(KW_SET521);
                    adaptor.addChild(root_0, KW_SET521_tree);
                    }
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:956:13: ( KW_CONSTRUCT )?
                    int alt177=2;
                    int LA177_0 = input.LA(1);

                    if ( (LA177_0==KW_CONSTRUCT) ) {
                        alt177=1;
                    }
                    switch (alt177) {
                        case 1 :
                            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:956:14: KW_CONSTRUCT
                            {
                            KW_CONSTRUCT522=(Token)match(input,KW_CONSTRUCT,FOLLOW_KW_CONSTRUCT_in_property_set_construct_accessor4372); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            KW_CONSTRUCT522_tree = (CommonTree)adaptor.create(KW_CONSTRUCT522);
                            adaptor.addChild(root_0, KW_CONSTRUCT522_tree);
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:957:6: ( KW_CONSTRUCT )
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:957:6: ( KW_CONSTRUCT )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:957:8: KW_CONSTRUCT
                    {
                    KW_CONSTRUCT523=(Token)match(input,KW_CONSTRUCT,FOLLOW_KW_CONSTRUCT_in_property_set_construct_accessor4386); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_CONSTRUCT523_tree = (CommonTree)adaptor.create(KW_CONSTRUCT523);
                    adaptor.addChild(root_0, KW_CONSTRUCT523_tree);
                    }

                    }


                    }
                    break;
                case 3 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:958:6: ( KW_CONSTRUCT KW_SET )
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:958:6: ( KW_CONSTRUCT KW_SET )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:958:8: KW_CONSTRUCT KW_SET
                    {
                    KW_CONSTRUCT524=(Token)match(input,KW_CONSTRUCT,FOLLOW_KW_CONSTRUCT_in_property_set_construct_accessor4397); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_CONSTRUCT524_tree = (CommonTree)adaptor.create(KW_CONSTRUCT524);
                    adaptor.addChild(root_0, KW_CONSTRUCT524_tree);
                    }
                    KW_SET525=(Token)match(input,KW_SET,FOLLOW_KW_SET_in_property_set_construct_accessor4399); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_SET525_tree = (CommonTree)adaptor.create(KW_SET525);
                    adaptor.addChild(root_0, KW_SET525_tree);
                    }

                    }


                    }
                    break;

            }


            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:961:2: ( SEMICOLON | block )
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==SEMICOLON) ) {
                alt179=1;
            }
            else if ( (LA179_0==LCURL) ) {
                alt179=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }
            switch (alt179) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:962:3: SEMICOLON
                    {
                    SEMICOLON526=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_property_set_construct_accessor4416); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON526_tree = (CommonTree)adaptor.create(SEMICOLON526);
                    adaptor.addChild(root_0, SEMICOLON526_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:963:5: block
                    {
                    pushFollow(FOLLOW_block_in_property_set_construct_accessor4423);
                    block527=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block527.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 118, property_set_construct_accessor_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "property_set_construct_accessor"

    public static class property_declaration_modifiers_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "property_declaration_modifiers"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:966:1: property_declaration_modifiers : ( property_declaration_modifier )+ ;
    public final ValaParser.property_declaration_modifiers_return property_declaration_modifiers() throws RecognitionException {
        ValaParser.property_declaration_modifiers_return retval = new ValaParser.property_declaration_modifiers_return();
        retval.start = input.LT(1);
        int property_declaration_modifiers_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.property_declaration_modifier_return property_declaration_modifier528 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 119) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:967:2: ( ( property_declaration_modifier )+ )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:967:4: ( property_declaration_modifier )+
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:967:4: ( property_declaration_modifier )+
            int cnt180=0;
            loop180:
            do {
                int alt180=2;
                int LA180_0 = input.LA(1);

                if ( (LA180_0==KW_NEW||LA180_0==KW_CLASS||(LA180_0>=KW_EXTERN && LA180_0<=KW_OVERRIDE)) ) {
                    alt180=1;
                }


                switch (alt180) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:0:0: property_declaration_modifier
            	    {
            	    pushFollow(FOLLOW_property_declaration_modifier_in_property_declaration_modifiers4437);
            	    property_declaration_modifier528=property_declaration_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration_modifier528.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt180 >= 1 ) break loop180;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(180, input);
                        throw eee;
                }
                cnt180++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 119, property_declaration_modifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "property_declaration_modifiers"

    public static class property_declaration_modifier_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "property_declaration_modifier"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:969:1: property_declaration_modifier : ( KW_CLASS | KW_STATIC | KW_EXTERN | KW_INLINE | KW_ABSTRACT | KW_VIRTUAL | KW_OVERRIDE | KW_NEW );
    public final ValaParser.property_declaration_modifier_return property_declaration_modifier() throws RecognitionException {
        ValaParser.property_declaration_modifier_return retval = new ValaParser.property_declaration_modifier_return();
        retval.start = input.LT(1);
        int property_declaration_modifier_StartIndex = input.index();
        CommonTree root_0 = null;

        Token set529=null;

        CommonTree set529_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 120) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:970:2: ( KW_CLASS | KW_STATIC | KW_EXTERN | KW_INLINE | KW_ABSTRACT | KW_VIRTUAL | KW_OVERRIDE | KW_NEW )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set529=(Token)input.LT(1);
            if ( input.LA(1)==KW_NEW||input.LA(1)==KW_CLASS||(input.LA(1)>=KW_EXTERN && input.LA(1)<=KW_OVERRIDE) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set529));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 120, property_declaration_modifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "property_declaration_modifier"

    public static class block_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "block"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:980:1: block : LCURL ( statement )* RCURL ;
    public final ValaParser.block_return block() throws RecognitionException {
        ValaParser.block_return retval = new ValaParser.block_return();
        retval.start = input.LT(1);
        int block_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LCURL530=null;
        Token RCURL532=null;
        ValaParser.statement_return statement531 = null;


        CommonTree LCURL530_tree=null;
        CommonTree RCURL532_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 121) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:981:2: ( LCURL ( statement )* RCURL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:982:2: LCURL ( statement )* RCURL
            {
            root_0 = (CommonTree)adaptor.nil();

            LCURL530=(Token)match(input,LCURL,FOLLOW_LCURL_in_block4498); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LCURL530_tree = (CommonTree)adaptor.create(LCURL530);
            adaptor.addChild(root_0, LCURL530_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:983:2: ( statement )*
            loop181:
            do {
                int alt181=2;
                int LA181_0 = input.LA(1);

                if ( (LA181_0==KW_USING||LA181_0==SEMICOLON||(LA181_0>=GLOBAL_NS && LA181_0<=IDENTIFIER)||LA181_0==LPAREN||LA181_0==KW_IN||LA181_0==AND||(LA181_0>=KW_IS && LA181_0<=KW_WEAK)||(LA181_0>=PLUS && LA181_0<=MINUS)||(LA181_0>=NOT && LA181_0<=KW_REQUIRES)||(LA181_0>=INTEGER && LA181_0<=LCURL)||LA181_0==TEMPLATE_START||(LA181_0>=KW_THIS && LA181_0<=KW_BASE)||LA181_0==KW_IF||LA181_0==KW_SWITCH||(LA181_0>=KW_WHILE && LA181_0<=KW_FOR)) ) {
                    alt181=1;
                }


                switch (alt181) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:983:3: statement
            	    {
            	    pushFollow(FOLLOW_statement_in_block4503);
            	    statement531=statement();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement531.getTree());

            	    }
            	    break;

            	default :
            	    break loop181;
                }
            } while (true);

            RCURL532=(Token)match(input,RCURL,FOLLOW_RCURL_in_block4509); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RCURL532_tree = (CommonTree)adaptor.create(RCURL532);
            adaptor.addChild(root_0, RCURL532_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 121, block_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "block"

    public static class statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:986:1: statement : ( block | SEMICOLON | if_statement | switch_statement | while_statement | do_statement | for_statement | foreach_statement | break_statement | continue_statement | return_statement | yield_statement | throw_statement | try_statement | lock_statement | delete_statement | local_variable_declarations | expression_statement );
    public final ValaParser.statement_return statement() throws RecognitionException {
        ValaParser.statement_return retval = new ValaParser.statement_return();
        retval.start = input.LT(1);
        int statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token SEMICOLON534=null;
        ValaParser.block_return block533 = null;

        ValaParser.if_statement_return if_statement535 = null;

        ValaParser.switch_statement_return switch_statement536 = null;

        ValaParser.while_statement_return while_statement537 = null;

        ValaParser.do_statement_return do_statement538 = null;

        ValaParser.for_statement_return for_statement539 = null;

        ValaParser.foreach_statement_return foreach_statement540 = null;

        ValaParser.break_statement_return break_statement541 = null;

        ValaParser.continue_statement_return continue_statement542 = null;

        ValaParser.return_statement_return return_statement543 = null;

        ValaParser.yield_statement_return yield_statement544 = null;

        ValaParser.throw_statement_return throw_statement545 = null;

        ValaParser.try_statement_return try_statement546 = null;

        ValaParser.lock_statement_return lock_statement547 = null;

        ValaParser.delete_statement_return delete_statement548 = null;

        ValaParser.local_variable_declarations_return local_variable_declarations549 = null;

        ValaParser.expression_statement_return expression_statement550 = null;


        CommonTree SEMICOLON534_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 122) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:987:2: ( block | SEMICOLON | if_statement | switch_statement | while_statement | do_statement | for_statement | foreach_statement | break_statement | continue_statement | return_statement | yield_statement | throw_statement | try_statement | lock_statement | delete_statement | local_variable_declarations | expression_statement )
            int alt182=18;
            alt182 = dfa182.predict(input);
            switch (alt182) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:988:2: block
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_block_in_statement4521);
                    block533=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block533.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:989:4: SEMICOLON
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    SEMICOLON534=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_statement4527); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON534_tree = (CommonTree)adaptor.create(SEMICOLON534);
                    adaptor.addChild(root_0, SEMICOLON534_tree);
                    }

                    }
                    break;
                case 3 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:990:4: if_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_if_statement_in_statement4533);
                    if_statement535=if_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, if_statement535.getTree());

                    }
                    break;
                case 4 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:991:4: switch_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_switch_statement_in_statement4539);
                    switch_statement536=switch_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_statement536.getTree());

                    }
                    break;
                case 5 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:992:4: while_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_while_statement_in_statement4545);
                    while_statement537=while_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, while_statement537.getTree());

                    }
                    break;
                case 6 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:993:4: do_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_do_statement_in_statement4550);
                    do_statement538=do_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, do_statement538.getTree());

                    }
                    break;
                case 7 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:994:4: for_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_for_statement_in_statement4555);
                    for_statement539=for_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, for_statement539.getTree());

                    }
                    break;
                case 8 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:995:4: foreach_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_foreach_statement_in_statement4561);
                    foreach_statement540=foreach_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, foreach_statement540.getTree());

                    }
                    break;
                case 9 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:996:4: break_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_break_statement_in_statement4567);
                    break_statement541=break_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, break_statement541.getTree());

                    }
                    break;
                case 10 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:997:4: continue_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_continue_statement_in_statement4573);
                    continue_statement542=continue_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, continue_statement542.getTree());

                    }
                    break;
                case 11 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:998:4: return_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_return_statement_in_statement4579);
                    return_statement543=return_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, return_statement543.getTree());

                    }
                    break;
                case 12 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:999:4: yield_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_yield_statement_in_statement4585);
                    yield_statement544=yield_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, yield_statement544.getTree());

                    }
                    break;
                case 13 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1000:4: throw_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_throw_statement_in_statement4591);
                    throw_statement545=throw_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, throw_statement545.getTree());

                    }
                    break;
                case 14 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1001:4: try_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_try_statement_in_statement4597);
                    try_statement546=try_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, try_statement546.getTree());

                    }
                    break;
                case 15 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1002:4: lock_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_lock_statement_in_statement4603);
                    lock_statement547=lock_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, lock_statement547.getTree());

                    }
                    break;
                case 16 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1003:4: delete_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_delete_statement_in_statement4609);
                    delete_statement548=delete_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delete_statement548.getTree());

                    }
                    break;
                case 17 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1004:4: local_variable_declarations
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_local_variable_declarations_in_statement4615);
                    local_variable_declarations549=local_variable_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declarations549.getTree());

                    }
                    break;
                case 18 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1005:4: expression_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_expression_statement_in_statement4621);
                    expression_statement550=expression_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_statement550.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 122, statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "statement"

    public static class if_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "if_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1007:1: if_statement : KW_IF LPAREN expression RPAREN embedded_statement ( KW_ELSE embedded_statement )? ;
    public final ValaParser.if_statement_return if_statement() throws RecognitionException {
        ValaParser.if_statement_return retval = new ValaParser.if_statement_return();
        retval.start = input.LT(1);
        int if_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_IF551=null;
        Token LPAREN552=null;
        Token RPAREN554=null;
        Token KW_ELSE556=null;
        ValaParser.expression_return expression553 = null;

        ValaParser.embedded_statement_return embedded_statement555 = null;

        ValaParser.embedded_statement_return embedded_statement557 = null;


        CommonTree KW_IF551_tree=null;
        CommonTree LPAREN552_tree=null;
        CommonTree RPAREN554_tree=null;
        CommonTree KW_ELSE556_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 123) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1008:2: ( KW_IF LPAREN expression RPAREN embedded_statement ( KW_ELSE embedded_statement )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1009:2: KW_IF LPAREN expression RPAREN embedded_statement ( KW_ELSE embedded_statement )?
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_IF551=(Token)match(input,KW_IF,FOLLOW_KW_IF_in_if_statement4633); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_IF551_tree = (CommonTree)adaptor.create(KW_IF551);
            adaptor.addChild(root_0, KW_IF551_tree);
            }
            LPAREN552=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_if_statement4636); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN552_tree = (CommonTree)adaptor.create(LPAREN552);
            adaptor.addChild(root_0, LPAREN552_tree);
            }
            pushFollow(FOLLOW_expression_in_if_statement4640);
            expression553=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression553.getTree());
            RPAREN554=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_if_statement4644); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN554_tree = (CommonTree)adaptor.create(RPAREN554);
            adaptor.addChild(root_0, RPAREN554_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_if_statement4648);
            embedded_statement555=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement555.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1014:2: ( KW_ELSE embedded_statement )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==KW_ELSE) ) {
                int LA183_1 = input.LA(2);

                if ( (synpred381_Vala()) ) {
                    alt183=1;
                }
            }
            switch (alt183) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1015:3: KW_ELSE embedded_statement
                    {
                    KW_ELSE556=(Token)match(input,KW_ELSE,FOLLOW_KW_ELSE_in_if_statement4656); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_ELSE556_tree = (CommonTree)adaptor.create(KW_ELSE556);
                    adaptor.addChild(root_0, KW_ELSE556_tree);
                    }
                    pushFollow(FOLLOW_embedded_statement_in_if_statement4660);
                    embedded_statement557=embedded_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement557.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 123, if_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "if_statement"

    public static class embedded_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "embedded_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1019:1: embedded_statement : ( block | embedded_statement_without_block );
    public final ValaParser.embedded_statement_return embedded_statement() throws RecognitionException {
        ValaParser.embedded_statement_return retval = new ValaParser.embedded_statement_return();
        retval.start = input.LT(1);
        int embedded_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.block_return block558 = null;

        ValaParser.embedded_statement_without_block_return embedded_statement_without_block559 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 124) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1020:2: ( block | embedded_statement_without_block )
            int alt184=2;
            alt184 = dfa184.predict(input);
            switch (alt184) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1021:2: block
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_block_in_embedded_statement4676);
                    block558=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block558.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1022:4: embedded_statement_without_block
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_embedded_statement_without_block_in_embedded_statement4682);
                    embedded_statement_without_block559=embedded_statement_without_block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement_without_block559.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 124, embedded_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "embedded_statement"

    public static class embedded_statement_without_block_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "embedded_statement_without_block"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1024:1: embedded_statement_without_block : ( SEMICOLON | if_statement | switch_statement | while_statement | do_statement | for_statement | foreach_statement | break_statement | continue_statement | return_statement | yield_statement | throw_statement | try_statement | lock_statement | delete_statement | expression_statement );
    public final ValaParser.embedded_statement_without_block_return embedded_statement_without_block() throws RecognitionException {
        ValaParser.embedded_statement_without_block_return retval = new ValaParser.embedded_statement_without_block_return();
        retval.start = input.LT(1);
        int embedded_statement_without_block_StartIndex = input.index();
        CommonTree root_0 = null;

        Token SEMICOLON560=null;
        ValaParser.if_statement_return if_statement561 = null;

        ValaParser.switch_statement_return switch_statement562 = null;

        ValaParser.while_statement_return while_statement563 = null;

        ValaParser.do_statement_return do_statement564 = null;

        ValaParser.for_statement_return for_statement565 = null;

        ValaParser.foreach_statement_return foreach_statement566 = null;

        ValaParser.break_statement_return break_statement567 = null;

        ValaParser.continue_statement_return continue_statement568 = null;

        ValaParser.return_statement_return return_statement569 = null;

        ValaParser.yield_statement_return yield_statement570 = null;

        ValaParser.throw_statement_return throw_statement571 = null;

        ValaParser.try_statement_return try_statement572 = null;

        ValaParser.lock_statement_return lock_statement573 = null;

        ValaParser.delete_statement_return delete_statement574 = null;

        ValaParser.expression_statement_return expression_statement575 = null;


        CommonTree SEMICOLON560_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 125) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1025:2: ( SEMICOLON | if_statement | switch_statement | while_statement | do_statement | for_statement | foreach_statement | break_statement | continue_statement | return_statement | yield_statement | throw_statement | try_statement | lock_statement | delete_statement | expression_statement )
            int alt185=16;
            alt185 = dfa185.predict(input);
            switch (alt185) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1026:2: SEMICOLON
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    SEMICOLON560=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_embedded_statement_without_block4694); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON560_tree = (CommonTree)adaptor.create(SEMICOLON560);
                    adaptor.addChild(root_0, SEMICOLON560_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1027:4: if_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_if_statement_in_embedded_statement_without_block4700);
                    if_statement561=if_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, if_statement561.getTree());

                    }
                    break;
                case 3 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1028:4: switch_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_switch_statement_in_embedded_statement_without_block4706);
                    switch_statement562=switch_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_statement562.getTree());

                    }
                    break;
                case 4 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1029:4: while_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_while_statement_in_embedded_statement_without_block4712);
                    while_statement563=while_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, while_statement563.getTree());

                    }
                    break;
                case 5 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1030:4: do_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_do_statement_in_embedded_statement_without_block4718);
                    do_statement564=do_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, do_statement564.getTree());

                    }
                    break;
                case 6 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1031:4: for_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_for_statement_in_embedded_statement_without_block4723);
                    for_statement565=for_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, for_statement565.getTree());

                    }
                    break;
                case 7 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1032:4: foreach_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_foreach_statement_in_embedded_statement_without_block4729);
                    foreach_statement566=foreach_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, foreach_statement566.getTree());

                    }
                    break;
                case 8 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1033:4: break_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_break_statement_in_embedded_statement_without_block4735);
                    break_statement567=break_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, break_statement567.getTree());

                    }
                    break;
                case 9 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1034:4: continue_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_continue_statement_in_embedded_statement_without_block4741);
                    continue_statement568=continue_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, continue_statement568.getTree());

                    }
                    break;
                case 10 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1035:4: return_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_return_statement_in_embedded_statement_without_block4747);
                    return_statement569=return_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, return_statement569.getTree());

                    }
                    break;
                case 11 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1036:4: yield_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_yield_statement_in_embedded_statement_without_block4753);
                    yield_statement570=yield_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, yield_statement570.getTree());

                    }
                    break;
                case 12 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1037:4: throw_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_throw_statement_in_embedded_statement_without_block4759);
                    throw_statement571=throw_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, throw_statement571.getTree());

                    }
                    break;
                case 13 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1038:4: try_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_try_statement_in_embedded_statement_without_block4765);
                    try_statement572=try_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, try_statement572.getTree());

                    }
                    break;
                case 14 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1039:4: lock_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_lock_statement_in_embedded_statement_without_block4771);
                    lock_statement573=lock_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, lock_statement573.getTree());

                    }
                    break;
                case 15 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1040:4: delete_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_delete_statement_in_embedded_statement_without_block4777);
                    delete_statement574=delete_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delete_statement574.getTree());

                    }
                    break;
                case 16 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1041:4: expression_statement
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_expression_statement_in_embedded_statement_without_block4783);
                    expression_statement575=expression_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_statement575.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 125, embedded_statement_without_block_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "embedded_statement_without_block"

    public static class switch_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "switch_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1043:1: switch_statement : KW_SWITCH LPAREN expression RPAREN LCURL ( switch_section )* RCURL ;
    public final ValaParser.switch_statement_return switch_statement() throws RecognitionException {
        ValaParser.switch_statement_return retval = new ValaParser.switch_statement_return();
        retval.start = input.LT(1);
        int switch_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_SWITCH576=null;
        Token LPAREN577=null;
        Token RPAREN579=null;
        Token LCURL580=null;
        Token RCURL582=null;
        ValaParser.expression_return expression578 = null;

        ValaParser.switch_section_return switch_section581 = null;


        CommonTree KW_SWITCH576_tree=null;
        CommonTree LPAREN577_tree=null;
        CommonTree RPAREN579_tree=null;
        CommonTree LCURL580_tree=null;
        CommonTree RCURL582_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 126) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1044:2: ( KW_SWITCH LPAREN expression RPAREN LCURL ( switch_section )* RCURL )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1045:2: KW_SWITCH LPAREN expression RPAREN LCURL ( switch_section )* RCURL
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_SWITCH576=(Token)match(input,KW_SWITCH,FOLLOW_KW_SWITCH_in_switch_statement4795); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_SWITCH576_tree = (CommonTree)adaptor.create(KW_SWITCH576);
            adaptor.addChild(root_0, KW_SWITCH576_tree);
            }
            LPAREN577=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_switch_statement4798); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN577_tree = (CommonTree)adaptor.create(LPAREN577);
            adaptor.addChild(root_0, LPAREN577_tree);
            }
            pushFollow(FOLLOW_expression_in_switch_statement4802);
            expression578=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression578.getTree());
            RPAREN579=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_switch_statement4806); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN579_tree = (CommonTree)adaptor.create(RPAREN579);
            adaptor.addChild(root_0, RPAREN579_tree);
            }
            LCURL580=(Token)match(input,LCURL,FOLLOW_LCURL_in_switch_statement4811); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LCURL580_tree = (CommonTree)adaptor.create(LCURL580);
            adaptor.addChild(root_0, LCURL580_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1050:2: ( switch_section )*
            loop186:
            do {
                int alt186=2;
                int LA186_0 = input.LA(1);

                if ( (LA186_0==KW_DEFAULT||LA186_0==KW_CASE) ) {
                    alt186=1;
                }


                switch (alt186) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1050:3: switch_section
            	    {
            	    pushFollow(FOLLOW_switch_section_in_switch_statement4816);
            	    switch_section581=switch_section();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_section581.getTree());

            	    }
            	    break;

            	default :
            	    break loop186;
                }
            } while (true);

            RCURL582=(Token)match(input,RCURL,FOLLOW_RCURL_in_switch_statement4822); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RCURL582_tree = (CommonTree)adaptor.create(RCURL582);
            adaptor.addChild(root_0, RCURL582_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 126, switch_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "switch_statement"

    public static class switch_section_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "switch_section"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1053:1: switch_section : ( ( KW_CASE expression ) | ( KW_DEFAULT ) ) COLON ( statement )* ( KW_BREAK )? ;
    public final ValaParser.switch_section_return switch_section() throws RecognitionException {
        ValaParser.switch_section_return retval = new ValaParser.switch_section_return();
        retval.start = input.LT(1);
        int switch_section_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_CASE583=null;
        Token KW_DEFAULT585=null;
        Token COLON586=null;
        Token KW_BREAK588=null;
        ValaParser.expression_return expression584 = null;

        ValaParser.statement_return statement587 = null;


        CommonTree KW_CASE583_tree=null;
        CommonTree KW_DEFAULT585_tree=null;
        CommonTree COLON586_tree=null;
        CommonTree KW_BREAK588_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 127) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1054:2: ( ( ( KW_CASE expression ) | ( KW_DEFAULT ) ) COLON ( statement )* ( KW_BREAK )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1055:2: ( ( KW_CASE expression ) | ( KW_DEFAULT ) ) COLON ( statement )* ( KW_BREAK )?
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1055:2: ( ( KW_CASE expression ) | ( KW_DEFAULT ) )
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==KW_CASE) ) {
                alt187=1;
            }
            else if ( (LA187_0==KW_DEFAULT) ) {
                alt187=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 187, 0, input);

                throw nvae;
            }
            switch (alt187) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1056:3: ( KW_CASE expression )
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1056:3: ( KW_CASE expression )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1056:5: KW_CASE expression
                    {
                    KW_CASE583=(Token)match(input,KW_CASE,FOLLOW_KW_CASE_in_switch_section4840); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_CASE583_tree = (CommonTree)adaptor.create(KW_CASE583);
                    adaptor.addChild(root_0, KW_CASE583_tree);
                    }
                    pushFollow(FOLLOW_expression_in_switch_section4842);
                    expression584=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression584.getTree());

                    }


                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1057:5: ( KW_DEFAULT )
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1057:5: ( KW_DEFAULT )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1057:7: KW_DEFAULT
                    {
                    KW_DEFAULT585=(Token)match(input,KW_DEFAULT,FOLLOW_KW_DEFAULT_in_switch_section4852); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_DEFAULT585_tree = (CommonTree)adaptor.create(KW_DEFAULT585);
                    adaptor.addChild(root_0, KW_DEFAULT585_tree);
                    }

                    }


                    }
                    break;

            }

            COLON586=(Token)match(input,COLON,FOLLOW_COLON_in_switch_section4861); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            COLON586_tree = (CommonTree)adaptor.create(COLON586);
            adaptor.addChild(root_0, COLON586_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1060:2: ( statement )*
            loop188:
            do {
                int alt188=2;
                int LA188_0 = input.LA(1);

                if ( (LA188_0==KW_BREAK) ) {
                    int LA188_1 = input.LA(2);

                    if ( ((LA188_1>=SEMICOLON && LA188_1<=DOT)||LA188_1==LBRACKET||LA188_1==LPAREN||(LA188_1>=ASSIGNMENT && LA188_1<=QUESTION)||(LA188_1>=COALESCE && LA188_1<=KW_AS)||LA188_1==MULTIPLY||(LA188_1>=SHIFT_LEFT && LA188_1<=MOD)||(LA188_1>=INCREMENT && LA188_1<=DECREMENT)||LA188_1==POINTER_ACCESS||LA188_1==LAMBDA) ) {
                        alt188=1;
                    }


                }
                else if ( (LA188_0==KW_USING||LA188_0==SEMICOLON||(LA188_0>=GLOBAL_NS && LA188_0<=IDENTIFIER)||LA188_0==LPAREN||LA188_0==KW_IN||LA188_0==AND||(LA188_0>=KW_IS && LA188_0<=KW_WEAK)||(LA188_0>=PLUS && LA188_0<=MINUS)||(LA188_0>=NOT && LA188_0<=KW_RETURN)||(LA188_0>=KW_VAR && LA188_0<=KW_REQUIRES)||(LA188_0>=INTEGER && LA188_0<=LCURL)||LA188_0==TEMPLATE_START||(LA188_0>=KW_THIS && LA188_0<=KW_BASE)||LA188_0==KW_IF||LA188_0==KW_SWITCH||(LA188_0>=KW_WHILE && LA188_0<=KW_FOR)) ) {
                    alt188=1;
                }


                switch (alt188) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1060:3: statement
            	    {
            	    pushFollow(FOLLOW_statement_in_switch_section4865);
            	    statement587=statement();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement587.getTree());

            	    }
            	    break;

            	default :
            	    break loop188;
                }
            } while (true);

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1061:2: ( KW_BREAK )?
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==KW_BREAK) ) {
                alt189=1;
            }
            switch (alt189) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1061:3: KW_BREAK
                    {
                    KW_BREAK588=(Token)match(input,KW_BREAK,FOLLOW_KW_BREAK_in_switch_section4871); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_BREAK588_tree = (CommonTree)adaptor.create(KW_BREAK588);
                    adaptor.addChild(root_0, KW_BREAK588_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 127, switch_section_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "switch_section"

    public static class while_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "while_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1063:1: while_statement : KW_WHILE LPAREN expression RPAREN embedded_statement ;
    public final ValaParser.while_statement_return while_statement() throws RecognitionException {
        ValaParser.while_statement_return retval = new ValaParser.while_statement_return();
        retval.start = input.LT(1);
        int while_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_WHILE589=null;
        Token LPAREN590=null;
        Token RPAREN592=null;
        ValaParser.expression_return expression591 = null;

        ValaParser.embedded_statement_return embedded_statement593 = null;


        CommonTree KW_WHILE589_tree=null;
        CommonTree LPAREN590_tree=null;
        CommonTree RPAREN592_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 128) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1064:2: ( KW_WHILE LPAREN expression RPAREN embedded_statement )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1064:4: KW_WHILE LPAREN expression RPAREN embedded_statement
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_WHILE589=(Token)match(input,KW_WHILE,FOLLOW_KW_WHILE_in_while_statement4883); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_WHILE589_tree = (CommonTree)adaptor.create(KW_WHILE589);
            adaptor.addChild(root_0, KW_WHILE589_tree);
            }
            LPAREN590=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_while_statement4886); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN590_tree = (CommonTree)adaptor.create(LPAREN590);
            adaptor.addChild(root_0, LPAREN590_tree);
            }
            pushFollow(FOLLOW_expression_in_while_statement4888);
            expression591=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression591.getTree());
            RPAREN592=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_while_statement4890); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN592_tree = (CommonTree)adaptor.create(RPAREN592);
            adaptor.addChild(root_0, RPAREN592_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_while_statement4892);
            embedded_statement593=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement593.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 128, while_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "while_statement"

    public static class do_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "do_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1066:1: do_statement : KW_DO embedded_statement KW_WHILE LPAREN expression RPAREN SEMICOLON ;
    public final ValaParser.do_statement_return do_statement() throws RecognitionException {
        ValaParser.do_statement_return retval = new ValaParser.do_statement_return();
        retval.start = input.LT(1);
        int do_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_DO594=null;
        Token KW_WHILE596=null;
        Token LPAREN597=null;
        Token RPAREN599=null;
        Token SEMICOLON600=null;
        ValaParser.embedded_statement_return embedded_statement595 = null;

        ValaParser.expression_return expression598 = null;


        CommonTree KW_DO594_tree=null;
        CommonTree KW_WHILE596_tree=null;
        CommonTree LPAREN597_tree=null;
        CommonTree RPAREN599_tree=null;
        CommonTree SEMICOLON600_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 129) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1067:2: ( KW_DO embedded_statement KW_WHILE LPAREN expression RPAREN SEMICOLON )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1067:4: KW_DO embedded_statement KW_WHILE LPAREN expression RPAREN SEMICOLON
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_DO594=(Token)match(input,KW_DO,FOLLOW_KW_DO_in_do_statement4902); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_DO594_tree = (CommonTree)adaptor.create(KW_DO594);
            adaptor.addChild(root_0, KW_DO594_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_do_statement4904);
            embedded_statement595=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement595.getTree());
            KW_WHILE596=(Token)match(input,KW_WHILE,FOLLOW_KW_WHILE_in_do_statement4906); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_WHILE596_tree = (CommonTree)adaptor.create(KW_WHILE596);
            adaptor.addChild(root_0, KW_WHILE596_tree);
            }
            LPAREN597=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_do_statement4908); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN597_tree = (CommonTree)adaptor.create(LPAREN597);
            adaptor.addChild(root_0, LPAREN597_tree);
            }
            pushFollow(FOLLOW_expression_in_do_statement4910);
            expression598=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression598.getTree());
            RPAREN599=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_do_statement4912); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN599_tree = (CommonTree)adaptor.create(RPAREN599);
            adaptor.addChild(root_0, RPAREN599_tree);
            }
            SEMICOLON600=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_do_statement4915); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON600_tree = (CommonTree)adaptor.create(SEMICOLON600);
            adaptor.addChild(root_0, SEMICOLON600_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 129, do_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "do_statement"

    public static class for_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "for_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1069:1: for_statement : KW_FOR LPAREN ( SEMICOLON | ( for_initializer ) ) ( expression )? SEMICOLON ( for_iterator )? RPAREN embedded_statement ;
    public final ValaParser.for_statement_return for_statement() throws RecognitionException {
        ValaParser.for_statement_return retval = new ValaParser.for_statement_return();
        retval.start = input.LT(1);
        int for_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_FOR601=null;
        Token LPAREN602=null;
        Token SEMICOLON603=null;
        Token SEMICOLON606=null;
        Token RPAREN608=null;
        ValaParser.for_initializer_return for_initializer604 = null;

        ValaParser.expression_return expression605 = null;

        ValaParser.for_iterator_return for_iterator607 = null;

        ValaParser.embedded_statement_return embedded_statement609 = null;


        CommonTree KW_FOR601_tree=null;
        CommonTree LPAREN602_tree=null;
        CommonTree SEMICOLON603_tree=null;
        CommonTree SEMICOLON606_tree=null;
        CommonTree RPAREN608_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 130) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1070:2: ( KW_FOR LPAREN ( SEMICOLON | ( for_initializer ) ) ( expression )? SEMICOLON ( for_iterator )? RPAREN embedded_statement )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1071:2: KW_FOR LPAREN ( SEMICOLON | ( for_initializer ) ) ( expression )? SEMICOLON ( for_iterator )? RPAREN embedded_statement
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_FOR601=(Token)match(input,KW_FOR,FOLLOW_KW_FOR_in_for_statement4928); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_FOR601_tree = (CommonTree)adaptor.create(KW_FOR601);
            adaptor.addChild(root_0, KW_FOR601_tree);
            }
            LPAREN602=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_for_statement4931); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN602_tree = (CommonTree)adaptor.create(LPAREN602);
            adaptor.addChild(root_0, LPAREN602_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1073:2: ( SEMICOLON | ( for_initializer ) )
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( (LA190_0==SEMICOLON) ) {
                alt190=1;
            }
            else if ( (LA190_0==KW_USING||(LA190_0>=GLOBAL_NS && LA190_0<=IDENTIFIER)||LA190_0==LPAREN||LA190_0==KW_IN||LA190_0==AND||(LA190_0>=KW_IS && LA190_0<=KW_WEAK)||(LA190_0>=PLUS && LA190_0<=MINUS)||(LA190_0>=NOT && LA190_0<=KW_REQUIRES)||(LA190_0>=INTEGER && LA190_0<=LCURL)||LA190_0==TEMPLATE_START||(LA190_0>=KW_THIS && LA190_0<=KW_BASE)) ) {
                alt190=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 190, 0, input);

                throw nvae;
            }
            switch (alt190) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1074:3: SEMICOLON
                    {
                    SEMICOLON603=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_for_statement4940); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON603_tree = (CommonTree)adaptor.create(SEMICOLON603);
                    adaptor.addChild(root_0, SEMICOLON603_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1075:5: ( for_initializer )
                    {
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1075:5: ( for_initializer )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1075:6: for_initializer
                    {
                    pushFollow(FOLLOW_for_initializer_in_for_statement4947);
                    for_initializer604=for_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, for_initializer604.getTree());

                    }


                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1077:2: ( expression )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==KW_USING||(LA191_0>=GLOBAL_NS && LA191_0<=IDENTIFIER)||LA191_0==LPAREN||LA191_0==KW_IN||LA191_0==AND||(LA191_0>=KW_IS && LA191_0<=KW_WEAK)||(LA191_0>=PLUS && LA191_0<=MINUS)||(LA191_0>=NOT && LA191_0<=KW_REQUIRES)||(LA191_0>=INTEGER && LA191_0<=LCURL)||LA191_0==TEMPLATE_START||(LA191_0>=KW_THIS && LA191_0<=KW_BASE)) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1077:3: expression
                    {
                    pushFollow(FOLLOW_expression_in_for_statement4955);
                    expression605=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression605.getTree());

                    }
                    break;

            }

            SEMICOLON606=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_for_statement4961); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON606_tree = (CommonTree)adaptor.create(SEMICOLON606);
            adaptor.addChild(root_0, SEMICOLON606_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1079:2: ( for_iterator )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==KW_USING||(LA192_0>=GLOBAL_NS && LA192_0<=IDENTIFIER)||LA192_0==LPAREN||LA192_0==KW_IN||LA192_0==AND||(LA192_0>=KW_IS && LA192_0<=KW_WEAK)||(LA192_0>=PLUS && LA192_0<=MINUS)||(LA192_0>=NOT && LA192_0<=KW_REQUIRES)||(LA192_0>=INTEGER && LA192_0<=LCURL)||LA192_0==TEMPLATE_START||(LA192_0>=KW_THIS && LA192_0<=KW_BASE)) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1079:3: for_iterator
                    {
                    pushFollow(FOLLOW_for_iterator_in_for_statement4967);
                    for_iterator607=for_iterator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, for_iterator607.getTree());

                    }
                    break;

            }

            RPAREN608=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_for_statement4973); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN608_tree = (CommonTree)adaptor.create(RPAREN608);
            adaptor.addChild(root_0, RPAREN608_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_for_statement4978);
            embedded_statement609=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement609.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 130, for_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "for_statement"

    public static class for_initializer_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "for_initializer"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1083:1: for_initializer : ( local_variable_declarations | ( statement_expression ( COMMA statement_expression )* SEMICOLON ) );
    public final ValaParser.for_initializer_return for_initializer() throws RecognitionException {
        ValaParser.for_initializer_return retval = new ValaParser.for_initializer_return();
        retval.start = input.LT(1);
        int for_initializer_StartIndex = input.index();
        CommonTree root_0 = null;

        Token COMMA612=null;
        Token SEMICOLON614=null;
        ValaParser.local_variable_declarations_return local_variable_declarations610 = null;

        ValaParser.statement_expression_return statement_expression611 = null;

        ValaParser.statement_expression_return statement_expression613 = null;


        CommonTree COMMA612_tree=null;
        CommonTree SEMICOLON614_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 131) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1084:2: ( local_variable_declarations | ( statement_expression ( COMMA statement_expression )* SEMICOLON ) )
            int alt194=2;
            alt194 = dfa194.predict(input);
            switch (alt194) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1084:4: local_variable_declarations
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_local_variable_declarations_in_for_initializer4988);
                    local_variable_declarations610=local_variable_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declarations610.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1086:2: ( statement_expression ( COMMA statement_expression )* SEMICOLON )
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1086:2: ( statement_expression ( COMMA statement_expression )* SEMICOLON )
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1087:3: statement_expression ( COMMA statement_expression )* SEMICOLON
                    {
                    pushFollow(FOLLOW_statement_expression_in_for_initializer5000);
                    statement_expression611=statement_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression611.getTree());
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1088:3: ( COMMA statement_expression )*
                    loop193:
                    do {
                        int alt193=2;
                        int LA193_0 = input.LA(1);

                        if ( (LA193_0==COMMA) ) {
                            alt193=1;
                        }


                        switch (alt193) {
                    	case 1 :
                    	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1088:4: COMMA statement_expression
                    	    {
                    	    COMMA612=(Token)match(input,COMMA,FOLLOW_COMMA_in_for_initializer5006); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    COMMA612_tree = (CommonTree)adaptor.create(COMMA612);
                    	    adaptor.addChild(root_0, COMMA612_tree);
                    	    }
                    	    pushFollow(FOLLOW_statement_expression_in_for_initializer5008);
                    	    statement_expression613=statement_expression();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression613.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop193;
                        }
                    } while (true);

                    SEMICOLON614=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_for_initializer5015); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    SEMICOLON614_tree = (CommonTree)adaptor.create(SEMICOLON614);
                    adaptor.addChild(root_0, SEMICOLON614_tree);
                    }

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 131, for_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "for_initializer"

    public static class for_iterator_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "for_iterator"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1092:1: for_iterator : statement_expression ( COMMA statement_expression )* ;
    public final ValaParser.for_iterator_return for_iterator() throws RecognitionException {
        ValaParser.for_iterator_return retval = new ValaParser.for_iterator_return();
        retval.start = input.LT(1);
        int for_iterator_StartIndex = input.index();
        CommonTree root_0 = null;

        Token COMMA616=null;
        ValaParser.statement_expression_return statement_expression615 = null;

        ValaParser.statement_expression_return statement_expression617 = null;


        CommonTree COMMA616_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 132) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1093:2: ( statement_expression ( COMMA statement_expression )* )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1094:2: statement_expression ( COMMA statement_expression )*
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_statement_expression_in_for_iterator5030);
            statement_expression615=statement_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression615.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1095:2: ( COMMA statement_expression )*
            loop195:
            do {
                int alt195=2;
                int LA195_0 = input.LA(1);

                if ( (LA195_0==COMMA) ) {
                    alt195=1;
                }


                switch (alt195) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1095:3: COMMA statement_expression
            	    {
            	    COMMA616=(Token)match(input,COMMA,FOLLOW_COMMA_in_for_iterator5035); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA616_tree = (CommonTree)adaptor.create(COMMA616);
            	    adaptor.addChild(root_0, COMMA616_tree);
            	    }
            	    pushFollow(FOLLOW_statement_expression_in_for_iterator5037);
            	    statement_expression617=statement_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression617.getTree());

            	    }
            	    break;

            	default :
            	    break loop195;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 132, for_iterator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "for_iterator"

    public static class statement_expression_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "statement_expression"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1097:1: statement_expression : expression ;
    public final ValaParser.statement_expression_return statement_expression() throws RecognitionException {
        ValaParser.statement_expression_return retval = new ValaParser.statement_expression_return();
        retval.start = input.LT(1);
        int statement_expression_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.expression_return expression618 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 133) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1098:2: ( expression )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1098:4: expression
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_expression_in_statement_expression5049);
            expression618=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression618.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 133, statement_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "statement_expression"

    public static class foreach_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "foreach_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1100:1: foreach_statement : KW_FOREACH LPAREN ( type | KW_VAR ) IDENTIFIER KW_IN expression RPAREN embedded_statement ;
    public final ValaParser.foreach_statement_return foreach_statement() throws RecognitionException {
        ValaParser.foreach_statement_return retval = new ValaParser.foreach_statement_return();
        retval.start = input.LT(1);
        int foreach_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_FOREACH619=null;
        Token LPAREN620=null;
        Token KW_VAR622=null;
        Token IDENTIFIER623=null;
        Token KW_IN624=null;
        Token RPAREN626=null;
        ValaParser.type_return type621 = null;

        ValaParser.expression_return expression625 = null;

        ValaParser.embedded_statement_return embedded_statement627 = null;


        CommonTree KW_FOREACH619_tree=null;
        CommonTree LPAREN620_tree=null;
        CommonTree KW_VAR622_tree=null;
        CommonTree IDENTIFIER623_tree=null;
        CommonTree KW_IN624_tree=null;
        CommonTree RPAREN626_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 134) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1101:2: ( KW_FOREACH LPAREN ( type | KW_VAR ) IDENTIFIER KW_IN expression RPAREN embedded_statement )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1102:2: KW_FOREACH LPAREN ( type | KW_VAR ) IDENTIFIER KW_IN expression RPAREN embedded_statement
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_FOREACH619=(Token)match(input,KW_FOREACH,FOLLOW_KW_FOREACH_in_foreach_statement5061); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_FOREACH619_tree = (CommonTree)adaptor.create(KW_FOREACH619);
            adaptor.addChild(root_0, KW_FOREACH619_tree);
            }
            LPAREN620=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_foreach_statement5064); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN620_tree = (CommonTree)adaptor.create(LPAREN620);
            adaptor.addChild(root_0, LPAREN620_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1104:2: ( type | KW_VAR )
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( ((LA196_0>=GLOBAL_NS && LA196_0<=IDENTIFIER)||LA196_0==KW_VOID||(LA196_0>=KW_DYNAMIC && LA196_0<=KW_WEAK)) ) {
                alt196=1;
            }
            else if ( (LA196_0==KW_VAR) ) {
                alt196=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 196, 0, input);

                throw nvae;
            }
            switch (alt196) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1105:3: type
                    {
                    pushFollow(FOLLOW_type_in_foreach_statement5071);
                    type621=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type621.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1106:5: KW_VAR
                    {
                    KW_VAR622=(Token)match(input,KW_VAR,FOLLOW_KW_VAR_in_foreach_statement5077); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_VAR622_tree = (CommonTree)adaptor.create(KW_VAR622);
                    adaptor.addChild(root_0, KW_VAR622_tree);
                    }

                    }
                    break;

            }

            IDENTIFIER623=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_foreach_statement5083); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER623_tree = (CommonTree)adaptor.create(IDENTIFIER623);
            adaptor.addChild(root_0, IDENTIFIER623_tree);
            }
            KW_IN624=(Token)match(input,KW_IN,FOLLOW_KW_IN_in_foreach_statement5087); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_IN624_tree = (CommonTree)adaptor.create(KW_IN624);
            adaptor.addChild(root_0, KW_IN624_tree);
            }
            pushFollow(FOLLOW_expression_in_foreach_statement5090);
            expression625=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression625.getTree());
            RPAREN626=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_foreach_statement5094); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN626_tree = (CommonTree)adaptor.create(RPAREN626);
            adaptor.addChild(root_0, RPAREN626_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_foreach_statement5098);
            embedded_statement627=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement627.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 134, foreach_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "foreach_statement"

    public static class break_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "break_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1114:1: break_statement : KW_BREAK SEMICOLON ;
    public final ValaParser.break_statement_return break_statement() throws RecognitionException {
        ValaParser.break_statement_return retval = new ValaParser.break_statement_return();
        retval.start = input.LT(1);
        int break_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_BREAK628=null;
        Token SEMICOLON629=null;

        CommonTree KW_BREAK628_tree=null;
        CommonTree SEMICOLON629_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 135) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1115:2: ( KW_BREAK SEMICOLON )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1115:4: KW_BREAK SEMICOLON
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_BREAK628=(Token)match(input,KW_BREAK,FOLLOW_KW_BREAK_in_break_statement5108); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_BREAK628_tree = (CommonTree)adaptor.create(KW_BREAK628);
            adaptor.addChild(root_0, KW_BREAK628_tree);
            }
            SEMICOLON629=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_break_statement5111); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON629_tree = (CommonTree)adaptor.create(SEMICOLON629);
            adaptor.addChild(root_0, SEMICOLON629_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 135, break_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "break_statement"

    public static class continue_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "continue_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1117:1: continue_statement : KW_CONTINUE SEMICOLON ;
    public final ValaParser.continue_statement_return continue_statement() throws RecognitionException {
        ValaParser.continue_statement_return retval = new ValaParser.continue_statement_return();
        retval.start = input.LT(1);
        int continue_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_CONTINUE630=null;
        Token SEMICOLON631=null;

        CommonTree KW_CONTINUE630_tree=null;
        CommonTree SEMICOLON631_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 136) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1118:2: ( KW_CONTINUE SEMICOLON )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1118:4: KW_CONTINUE SEMICOLON
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_CONTINUE630=(Token)match(input,KW_CONTINUE,FOLLOW_KW_CONTINUE_in_continue_statement5121); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_CONTINUE630_tree = (CommonTree)adaptor.create(KW_CONTINUE630);
            adaptor.addChild(root_0, KW_CONTINUE630_tree);
            }
            SEMICOLON631=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_continue_statement5124); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON631_tree = (CommonTree)adaptor.create(SEMICOLON631);
            adaptor.addChild(root_0, SEMICOLON631_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 136, continue_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "continue_statement"

    public static class return_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "return_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1120:1: return_statement : KW_RETURN ( expression )? SEMICOLON ;
    public final ValaParser.return_statement_return return_statement() throws RecognitionException {
        ValaParser.return_statement_return retval = new ValaParser.return_statement_return();
        retval.start = input.LT(1);
        int return_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_RETURN632=null;
        Token SEMICOLON634=null;
        ValaParser.expression_return expression633 = null;


        CommonTree KW_RETURN632_tree=null;
        CommonTree SEMICOLON634_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 137) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1121:2: ( KW_RETURN ( expression )? SEMICOLON )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1121:4: KW_RETURN ( expression )? SEMICOLON
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_RETURN632=(Token)match(input,KW_RETURN,FOLLOW_KW_RETURN_in_return_statement5134); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_RETURN632_tree = (CommonTree)adaptor.create(KW_RETURN632);
            adaptor.addChild(root_0, KW_RETURN632_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1121:15: ( expression )?
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==KW_USING||(LA197_0>=GLOBAL_NS && LA197_0<=IDENTIFIER)||LA197_0==LPAREN||LA197_0==KW_IN||LA197_0==AND||(LA197_0>=KW_IS && LA197_0<=KW_WEAK)||(LA197_0>=PLUS && LA197_0<=MINUS)||(LA197_0>=NOT && LA197_0<=KW_REQUIRES)||(LA197_0>=INTEGER && LA197_0<=LCURL)||LA197_0==TEMPLATE_START||(LA197_0>=KW_THIS && LA197_0<=KW_BASE)) ) {
                alt197=1;
            }
            switch (alt197) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1121:16: expression
                    {
                    pushFollow(FOLLOW_expression_in_return_statement5138);
                    expression633=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression633.getTree());

                    }
                    break;

            }

            SEMICOLON634=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_return_statement5144); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON634_tree = (CommonTree)adaptor.create(SEMICOLON634);
            adaptor.addChild(root_0, SEMICOLON634_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 137, return_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "return_statement"

    public static class yield_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "yield_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1124:1: yield_statement : KW_YIELD ( expression_statement | KW_RETURN expression )? SEMICOLON ;
    public final ValaParser.yield_statement_return yield_statement() throws RecognitionException {
        ValaParser.yield_statement_return retval = new ValaParser.yield_statement_return();
        retval.start = input.LT(1);
        int yield_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_YIELD635=null;
        Token KW_RETURN637=null;
        Token SEMICOLON639=null;
        ValaParser.expression_statement_return expression_statement636 = null;

        ValaParser.expression_return expression638 = null;


        CommonTree KW_YIELD635_tree=null;
        CommonTree KW_RETURN637_tree=null;
        CommonTree SEMICOLON639_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 138) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1125:2: ( KW_YIELD ( expression_statement | KW_RETURN expression )? SEMICOLON )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1125:4: KW_YIELD ( expression_statement | KW_RETURN expression )? SEMICOLON
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_YIELD635=(Token)match(input,KW_YIELD,FOLLOW_KW_YIELD_in_yield_statement5154); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_YIELD635_tree = (CommonTree)adaptor.create(KW_YIELD635);
            adaptor.addChild(root_0, KW_YIELD635_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1125:14: ( expression_statement | KW_RETURN expression )?
            int alt198=3;
            alt198 = dfa198.predict(input);
            switch (alt198) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1125:15: expression_statement
                    {
                    pushFollow(FOLLOW_expression_statement_in_yield_statement5158);
                    expression_statement636=expression_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_statement636.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1125:38: KW_RETURN expression
                    {
                    KW_RETURN637=(Token)match(input,KW_RETURN,FOLLOW_KW_RETURN_in_yield_statement5162); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_RETURN637_tree = (CommonTree)adaptor.create(KW_RETURN637);
                    adaptor.addChild(root_0, KW_RETURN637_tree);
                    }
                    pushFollow(FOLLOW_expression_in_yield_statement5164);
                    expression638=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression638.getTree());

                    }
                    break;

            }

            SEMICOLON639=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_yield_statement5170); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON639_tree = (CommonTree)adaptor.create(SEMICOLON639);
            adaptor.addChild(root_0, SEMICOLON639_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 138, yield_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "yield_statement"

    public static class throw_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "throw_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1128:1: throw_statement : KW_THROW expression SEMICOLON ;
    public final ValaParser.throw_statement_return throw_statement() throws RecognitionException {
        ValaParser.throw_statement_return retval = new ValaParser.throw_statement_return();
        retval.start = input.LT(1);
        int throw_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_THROW640=null;
        Token SEMICOLON642=null;
        ValaParser.expression_return expression641 = null;


        CommonTree KW_THROW640_tree=null;
        CommonTree SEMICOLON642_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 139) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1129:2: ( KW_THROW expression SEMICOLON )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1129:4: KW_THROW expression SEMICOLON
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_THROW640=(Token)match(input,KW_THROW,FOLLOW_KW_THROW_in_throw_statement5180); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_THROW640_tree = (CommonTree)adaptor.create(KW_THROW640);
            adaptor.addChild(root_0, KW_THROW640_tree);
            }
            pushFollow(FOLLOW_expression_in_throw_statement5182);
            expression641=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression641.getTree());
            SEMICOLON642=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_throw_statement5184); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON642_tree = (CommonTree)adaptor.create(SEMICOLON642);
            adaptor.addChild(root_0, SEMICOLON642_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 139, throw_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "throw_statement"

    public static class try_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "try_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1131:1: try_statement : KW_TRY block ( catch_clause )* ( finally_clause )? ;
    public final ValaParser.try_statement_return try_statement() throws RecognitionException {
        ValaParser.try_statement_return retval = new ValaParser.try_statement_return();
        retval.start = input.LT(1);
        int try_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_TRY643=null;
        ValaParser.block_return block644 = null;

        ValaParser.catch_clause_return catch_clause645 = null;

        ValaParser.finally_clause_return finally_clause646 = null;


        CommonTree KW_TRY643_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 140) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1132:2: ( KW_TRY block ( catch_clause )* ( finally_clause )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1133:2: KW_TRY block ( catch_clause )* ( finally_clause )?
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_TRY643=(Token)match(input,KW_TRY,FOLLOW_KW_TRY_in_try_statement5196); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_TRY643_tree = (CommonTree)adaptor.create(KW_TRY643);
            adaptor.addChild(root_0, KW_TRY643_tree);
            }
            pushFollow(FOLLOW_block_in_try_statement5200);
            block644=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block644.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1135:2: ( catch_clause )*
            loop199:
            do {
                int alt199=2;
                alt199 = dfa199.predict(input);
                switch (alt199) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1135:3: catch_clause
            	    {
            	    pushFollow(FOLLOW_catch_clause_in_try_statement5205);
            	    catch_clause645=catch_clause();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, catch_clause645.getTree());

            	    }
            	    break;

            	default :
            	    break loop199;
                }
            } while (true);

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1136:2: ( finally_clause )?
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( (LA200_0==KW_FINALLY) ) {
                int LA200_1 = input.LA(2);

                if ( (LA200_1==LCURL) ) {
                    alt200=1;
                }
            }
            switch (alt200) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1136:3: finally_clause
                    {
                    pushFollow(FOLLOW_finally_clause_in_try_statement5211);
                    finally_clause646=finally_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, finally_clause646.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 140, try_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "try_statement"

    public static class catch_clause_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "catch_clause"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1138:1: catch_clause : KW_CATCH ( LPAREN type IDENTIFIER RPAREN )? block ;
    public final ValaParser.catch_clause_return catch_clause() throws RecognitionException {
        ValaParser.catch_clause_return retval = new ValaParser.catch_clause_return();
        retval.start = input.LT(1);
        int catch_clause_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_CATCH647=null;
        Token LPAREN648=null;
        Token IDENTIFIER650=null;
        Token RPAREN651=null;
        ValaParser.type_return type649 = null;

        ValaParser.block_return block652 = null;


        CommonTree KW_CATCH647_tree=null;
        CommonTree LPAREN648_tree=null;
        CommonTree IDENTIFIER650_tree=null;
        CommonTree RPAREN651_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 141) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1139:2: ( KW_CATCH ( LPAREN type IDENTIFIER RPAREN )? block )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1139:4: KW_CATCH ( LPAREN type IDENTIFIER RPAREN )? block
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_CATCH647=(Token)match(input,KW_CATCH,FOLLOW_KW_CATCH_in_catch_clause5223); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_CATCH647_tree = (CommonTree)adaptor.create(KW_CATCH647);
            adaptor.addChild(root_0, KW_CATCH647_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1139:14: ( LPAREN type IDENTIFIER RPAREN )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==LPAREN) ) {
                alt201=1;
            }
            switch (alt201) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1139:15: LPAREN type IDENTIFIER RPAREN
                    {
                    LPAREN648=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_catch_clause5227); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN648_tree = (CommonTree)adaptor.create(LPAREN648);
                    adaptor.addChild(root_0, LPAREN648_tree);
                    }
                    pushFollow(FOLLOW_type_in_catch_clause5229);
                    type649=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type649.getTree());
                    IDENTIFIER650=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_catch_clause5231); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER650_tree = (CommonTree)adaptor.create(IDENTIFIER650);
                    adaptor.addChild(root_0, IDENTIFIER650_tree);
                    }
                    RPAREN651=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_catch_clause5233); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN651_tree = (CommonTree)adaptor.create(RPAREN651);
                    adaptor.addChild(root_0, RPAREN651_tree);
                    }

                    }
                    break;

            }

            pushFollow(FOLLOW_block_in_catch_clause5237);
            block652=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block652.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 141, catch_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "catch_clause"

    public static class finally_clause_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "finally_clause"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1141:1: finally_clause : KW_FINALLY block ;
    public final ValaParser.finally_clause_return finally_clause() throws RecognitionException {
        ValaParser.finally_clause_return retval = new ValaParser.finally_clause_return();
        retval.start = input.LT(1);
        int finally_clause_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_FINALLY653=null;
        ValaParser.block_return block654 = null;


        CommonTree KW_FINALLY653_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 142) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1142:2: ( KW_FINALLY block )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1143:2: KW_FINALLY block
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_FINALLY653=(Token)match(input,KW_FINALLY,FOLLOW_KW_FINALLY_in_finally_clause5249); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_FINALLY653_tree = (CommonTree)adaptor.create(KW_FINALLY653);
            adaptor.addChild(root_0, KW_FINALLY653_tree);
            }
            pushFollow(FOLLOW_block_in_finally_clause5253);
            block654=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block654.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 142, finally_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "finally_clause"

    public static class lock_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "lock_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1146:1: lock_statement : KW_LOCK LPAREN expression RPAREN embedded_statement ;
    public final ValaParser.lock_statement_return lock_statement() throws RecognitionException {
        ValaParser.lock_statement_return retval = new ValaParser.lock_statement_return();
        retval.start = input.LT(1);
        int lock_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_LOCK655=null;
        Token LPAREN656=null;
        Token RPAREN658=null;
        ValaParser.expression_return expression657 = null;

        ValaParser.embedded_statement_return embedded_statement659 = null;


        CommonTree KW_LOCK655_tree=null;
        CommonTree LPAREN656_tree=null;
        CommonTree RPAREN658_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 143) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1147:2: ( KW_LOCK LPAREN expression RPAREN embedded_statement )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1147:4: KW_LOCK LPAREN expression RPAREN embedded_statement
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_LOCK655=(Token)match(input,KW_LOCK,FOLLOW_KW_LOCK_in_lock_statement5263); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_LOCK655_tree = (CommonTree)adaptor.create(KW_LOCK655);
            adaptor.addChild(root_0, KW_LOCK655_tree);
            }
            LPAREN656=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_lock_statement5266); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN656_tree = (CommonTree)adaptor.create(LPAREN656);
            adaptor.addChild(root_0, LPAREN656_tree);
            }
            pushFollow(FOLLOW_expression_in_lock_statement5268);
            expression657=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression657.getTree());
            RPAREN658=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_lock_statement5270); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN658_tree = (CommonTree)adaptor.create(RPAREN658);
            adaptor.addChild(root_0, RPAREN658_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_lock_statement5272);
            embedded_statement659=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement659.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 143, lock_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "lock_statement"

    public static class delete_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "delete_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1149:1: delete_statement : KW_DELETE expression SEMICOLON ;
    public final ValaParser.delete_statement_return delete_statement() throws RecognitionException {
        ValaParser.delete_statement_return retval = new ValaParser.delete_statement_return();
        retval.start = input.LT(1);
        int delete_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_DELETE660=null;
        Token SEMICOLON662=null;
        ValaParser.expression_return expression661 = null;


        CommonTree KW_DELETE660_tree=null;
        CommonTree SEMICOLON662_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 144) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1150:2: ( KW_DELETE expression SEMICOLON )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1150:4: KW_DELETE expression SEMICOLON
            {
            root_0 = (CommonTree)adaptor.nil();

            KW_DELETE660=(Token)match(input,KW_DELETE,FOLLOW_KW_DELETE_in_delete_statement5282); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            KW_DELETE660_tree = (CommonTree)adaptor.create(KW_DELETE660);
            adaptor.addChild(root_0, KW_DELETE660_tree);
            }
            pushFollow(FOLLOW_expression_in_delete_statement5284);
            expression661=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression661.getTree());
            SEMICOLON662=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_delete_statement5286); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON662_tree = (CommonTree)adaptor.create(SEMICOLON662);
            adaptor.addChild(root_0, SEMICOLON662_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 144, delete_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "delete_statement"

    public static class local_variable_declarations_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "local_variable_declarations"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1152:1: local_variable_declarations : ( KW_VAR | type ) local_variable_declaration ( COMMA local_variable_declaration )* ( SEMICOLON ) ;
    public final ValaParser.local_variable_declarations_return local_variable_declarations() throws RecognitionException {
        ValaParser.local_variable_declarations_return retval = new ValaParser.local_variable_declarations_return();
        retval.start = input.LT(1);
        int local_variable_declarations_StartIndex = input.index();
        CommonTree root_0 = null;

        Token KW_VAR663=null;
        Token COMMA666=null;
        Token SEMICOLON668=null;
        ValaParser.type_return type664 = null;

        ValaParser.local_variable_declaration_return local_variable_declaration665 = null;

        ValaParser.local_variable_declaration_return local_variable_declaration667 = null;


        CommonTree KW_VAR663_tree=null;
        CommonTree COMMA666_tree=null;
        CommonTree SEMICOLON668_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 145) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1153:2: ( ( KW_VAR | type ) local_variable_declaration ( COMMA local_variable_declaration )* ( SEMICOLON ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1154:2: ( KW_VAR | type ) local_variable_declaration ( COMMA local_variable_declaration )* ( SEMICOLON )
            {
            root_0 = (CommonTree)adaptor.nil();

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1154:2: ( KW_VAR | type )
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==KW_VAR) ) {
                alt202=1;
            }
            else if ( ((LA202_0>=GLOBAL_NS && LA202_0<=IDENTIFIER)||LA202_0==KW_VOID||(LA202_0>=KW_DYNAMIC && LA202_0<=KW_WEAK)) ) {
                alt202=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 202, 0, input);

                throw nvae;
            }
            switch (alt202) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1154:4: KW_VAR
                    {
                    KW_VAR663=(Token)match(input,KW_VAR,FOLLOW_KW_VAR_in_local_variable_declarations5300); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    KW_VAR663_tree = (CommonTree)adaptor.create(KW_VAR663);
                    adaptor.addChild(root_0, KW_VAR663_tree);
                    }

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1154:13: type
                    {
                    pushFollow(FOLLOW_type_in_local_variable_declarations5304);
                    type664=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type664.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_local_variable_declaration_in_local_variable_declarations5310);
            local_variable_declaration665=local_variable_declaration();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration665.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1156:2: ( COMMA local_variable_declaration )*
            loop203:
            do {
                int alt203=2;
                int LA203_0 = input.LA(1);

                if ( (LA203_0==COMMA) ) {
                    alt203=1;
                }


                switch (alt203) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1156:3: COMMA local_variable_declaration
            	    {
            	    COMMA666=(Token)match(input,COMMA,FOLLOW_COMMA_in_local_variable_declarations5315); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA666_tree = (CommonTree)adaptor.create(COMMA666);
            	    adaptor.addChild(root_0, COMMA666_tree);
            	    }
            	    pushFollow(FOLLOW_local_variable_declaration_in_local_variable_declarations5317);
            	    local_variable_declaration667=local_variable_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration667.getTree());

            	    }
            	    break;

            	default :
            	    break loop203;
                }
            } while (true);

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1157:2: ( SEMICOLON )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1157:3: SEMICOLON
            {
            SEMICOLON668=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_local_variable_declarations5323); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON668_tree = (CommonTree)adaptor.create(SEMICOLON668);
            adaptor.addChild(root_0, SEMICOLON668_tree);
            }

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 145, local_variable_declarations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "local_variable_declarations"

    public static class local_variable_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "local_variable_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1159:1: local_variable_declaration : ( local_tuple_declaration | local_variable );
    public final ValaParser.local_variable_declaration_return local_variable_declaration() throws RecognitionException {
        ValaParser.local_variable_declaration_return retval = new ValaParser.local_variable_declaration_return();
        retval.start = input.LT(1);
        int local_variable_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        ValaParser.local_tuple_declaration_return local_tuple_declaration669 = null;

        ValaParser.local_variable_return local_variable670 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 146) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1160:2: ( local_tuple_declaration | local_variable )
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==LPAREN) ) {
                alt204=1;
            }
            else if ( (LA204_0==KW_USING||LA204_0==IDENTIFIER||LA204_0==KW_IN||(LA204_0>=KW_IS && LA204_0<=KW_VOID)||(LA204_0>=KW_DYNAMIC && LA204_0<=KW_WEAK)||(LA204_0>=KW_CONSTRUCT && LA204_0<=KW_REQUIRES)) ) {
                alt204=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 204, 0, input);

                throw nvae;
            }
            switch (alt204) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1161:2: local_tuple_declaration
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_local_tuple_declaration_in_local_variable_declaration5336);
                    local_tuple_declaration669=local_tuple_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_tuple_declaration669.getTree());

                    }
                    break;
                case 2 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1162:4: local_variable
                    {
                    root_0 = (CommonTree)adaptor.nil();

                    pushFollow(FOLLOW_local_variable_in_local_variable_declaration5342);
                    local_variable670=local_variable();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable670.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 146, local_variable_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "local_variable_declaration"

    public static class local_tuple_declaration_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "local_tuple_declaration"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1164:1: local_tuple_declaration : LPAREN IDENTIFIER ( COMMA IDENTIFIER )* RPAREN ASSIGNMENT expression ;
    public final ValaParser.local_tuple_declaration_return local_tuple_declaration() throws RecognitionException {
        ValaParser.local_tuple_declaration_return retval = new ValaParser.local_tuple_declaration_return();
        retval.start = input.LT(1);
        int local_tuple_declaration_StartIndex = input.index();
        CommonTree root_0 = null;

        Token LPAREN671=null;
        Token IDENTIFIER672=null;
        Token COMMA673=null;
        Token IDENTIFIER674=null;
        Token RPAREN675=null;
        Token ASSIGNMENT676=null;
        ValaParser.expression_return expression677 = null;


        CommonTree LPAREN671_tree=null;
        CommonTree IDENTIFIER672_tree=null;
        CommonTree COMMA673_tree=null;
        CommonTree IDENTIFIER674_tree=null;
        CommonTree RPAREN675_tree=null;
        CommonTree ASSIGNMENT676_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 147) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1165:2: ( LPAREN IDENTIFIER ( COMMA IDENTIFIER )* RPAREN ASSIGNMENT expression )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1166:2: LPAREN IDENTIFIER ( COMMA IDENTIFIER )* RPAREN ASSIGNMENT expression
            {
            root_0 = (CommonTree)adaptor.nil();

            LPAREN671=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_local_tuple_declaration5354); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            LPAREN671_tree = (CommonTree)adaptor.create(LPAREN671);
            adaptor.addChild(root_0, LPAREN671_tree);
            }
            IDENTIFIER672=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_local_tuple_declaration5357); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            IDENTIFIER672_tree = (CommonTree)adaptor.create(IDENTIFIER672);
            adaptor.addChild(root_0, IDENTIFIER672_tree);
            }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1168:2: ( COMMA IDENTIFIER )*
            loop205:
            do {
                int alt205=2;
                int LA205_0 = input.LA(1);

                if ( (LA205_0==COMMA) ) {
                    alt205=1;
                }


                switch (alt205) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1168:3: COMMA IDENTIFIER
            	    {
            	    COMMA673=(Token)match(input,COMMA,FOLLOW_COMMA_in_local_tuple_declaration5362); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    COMMA673_tree = (CommonTree)adaptor.create(COMMA673);
            	    adaptor.addChild(root_0, COMMA673_tree);
            	    }
            	    IDENTIFIER674=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_local_tuple_declaration5364); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    IDENTIFIER674_tree = (CommonTree)adaptor.create(IDENTIFIER674);
            	    adaptor.addChild(root_0, IDENTIFIER674_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop205;
                }
            } while (true);

            RPAREN675=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_local_tuple_declaration5370); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            RPAREN675_tree = (CommonTree)adaptor.create(RPAREN675);
            adaptor.addChild(root_0, RPAREN675_tree);
            }
            ASSIGNMENT676=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_local_tuple_declaration5375); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ASSIGNMENT676_tree = (CommonTree)adaptor.create(ASSIGNMENT676);
            adaptor.addChild(root_0, ASSIGNMENT676_tree);
            }
            pushFollow(FOLLOW_expression_in_local_tuple_declaration5379);
            expression677=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression677.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 147, local_tuple_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "local_tuple_declaration"

    public static class local_variable_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "local_variable"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1173:1: local_variable : identifier ( inline_array_type )? ( ASSIGNMENT expression )? ;
    public final ValaParser.local_variable_return local_variable() throws RecognitionException {
        ValaParser.local_variable_return retval = new ValaParser.local_variable_return();
        retval.start = input.LT(1);
        int local_variable_StartIndex = input.index();
        CommonTree root_0 = null;

        Token ASSIGNMENT680=null;
        ValaParser.identifier_return identifier678 = null;

        ValaParser.inline_array_type_return inline_array_type679 = null;

        ValaParser.expression_return expression681 = null;


        CommonTree ASSIGNMENT680_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 148) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1174:2: ( identifier ( inline_array_type )? ( ASSIGNMENT expression )? )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1175:2: identifier ( inline_array_type )? ( ASSIGNMENT expression )?
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_local_variable5391);
            identifier678=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier678.getTree());
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1176:2: ( inline_array_type )?
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==LBRACKET) ) {
                alt206=1;
            }
            switch (alt206) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1176:3: inline_array_type
                    {
                    pushFollow(FOLLOW_inline_array_type_in_local_variable5396);
                    inline_array_type679=inline_array_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, inline_array_type679.getTree());

                    }
                    break;

            }

            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1177:2: ( ASSIGNMENT expression )?
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==ASSIGNMENT) ) {
                alt207=1;
            }
            switch (alt207) {
                case 1 :
                    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1177:3: ASSIGNMENT expression
                    {
                    ASSIGNMENT680=(Token)match(input,ASSIGNMENT,FOLLOW_ASSIGNMENT_in_local_variable5403); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSIGNMENT680_tree = (CommonTree)adaptor.create(ASSIGNMENT680);
                    adaptor.addChild(root_0, ASSIGNMENT680_tree);
                    }
                    pushFollow(FOLLOW_expression_in_local_variable5405);
                    expression681=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression681.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 148, local_variable_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "local_variable"

    public static class expression_statement_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "expression_statement"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1179:1: expression_statement : statement_expression SEMICOLON ;
    public final ValaParser.expression_statement_return expression_statement() throws RecognitionException {
        ValaParser.expression_statement_return retval = new ValaParser.expression_statement_return();
        retval.start = input.LT(1);
        int expression_statement_StartIndex = input.index();
        CommonTree root_0 = null;

        Token SEMICOLON683=null;
        ValaParser.statement_expression_return statement_expression682 = null;


        CommonTree SEMICOLON683_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 149) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1180:2: ( statement_expression SEMICOLON )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1181:2: statement_expression SEMICOLON
            {
            root_0 = (CommonTree)adaptor.nil();

            pushFollow(FOLLOW_statement_expression_in_expression_statement5419);
            statement_expression682=statement_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression682.getTree());
            SEMICOLON683=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_expression_statement5421); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            SEMICOLON683_tree = (CommonTree)adaptor.create(SEMICOLON683);
            adaptor.addChild(root_0, SEMICOLON683_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 149, expression_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "expression_statement"

    public static class unknown_chain_return extends ParserRuleReturnScope {
        CommonTree tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unknown_chain"
    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1183:1: unknown_chain : ( identifier )+ SEMICOLON -> ^( UNKNOWN_CHAIN ( identifier )+ ) ;
    public final ValaParser.unknown_chain_return unknown_chain() throws RecognitionException {
        ValaParser.unknown_chain_return retval = new ValaParser.unknown_chain_return();
        retval.start = input.LT(1);
        int unknown_chain_StartIndex = input.index();
        CommonTree root_0 = null;

        Token SEMICOLON685=null;
        ValaParser.identifier_return identifier684 = null;


        CommonTree SEMICOLON685_tree=null;
        RewriteRuleTokenStream stream_SEMICOLON=new RewriteRuleTokenStream(adaptor,"token SEMICOLON");
        RewriteRuleSubtreeStream stream_identifier=new RewriteRuleSubtreeStream(adaptor,"rule identifier");
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 150) ) { return retval; }
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1184:2: ( ( identifier )+ SEMICOLON -> ^( UNKNOWN_CHAIN ( identifier )+ ) )
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1185:2: ( identifier )+ SEMICOLON
            {
            // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1185:2: ( identifier )+
            int cnt208=0;
            loop208:
            do {
                int alt208=2;
                int LA208_0 = input.LA(1);

                if ( (LA208_0==KW_USING||LA208_0==IDENTIFIER||LA208_0==KW_IN||(LA208_0>=KW_IS && LA208_0<=KW_VOID)||(LA208_0>=KW_DYNAMIC && LA208_0<=KW_WEAK)||(LA208_0>=KW_CONSTRUCT && LA208_0<=KW_REQUIRES)) ) {
                    alt208=1;
                }


                switch (alt208) {
            	case 1 :
            	    // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1185:3: identifier
            	    {
            	    pushFollow(FOLLOW_identifier_in_unknown_chain5433);
            	    identifier684=identifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) stream_identifier.add(identifier684.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt208 >= 1 ) break loop208;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(208, input);
                        throw eee;
                }
                cnt208++;
            } while (true);

            SEMICOLON685=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_unknown_chain5438); if (state.failed) return retval; 
            if ( state.backtracking==0 ) stream_SEMICOLON.add(SEMICOLON685);



            // AST REWRITE
            // elements: identifier
            // token labels: 
            // rule labels: retval
            // token list labels: 
            // rule list labels: 
            // wildcard labels: 
            if ( state.backtracking==0 ) {
            retval.tree = root_0;
            RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.tree:null);

            root_0 = (CommonTree)adaptor.nil();
            // 1187:3: -> ^( UNKNOWN_CHAIN ( identifier )+ )
            {
                // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1187:6: ^( UNKNOWN_CHAIN ( identifier )+ )
                {
                CommonTree root_1 = (CommonTree)adaptor.nil();
                root_1 = (CommonTree)adaptor.becomeRoot((CommonTree)adaptor.create(UNKNOWN_CHAIN, "UNKNOWN_CHAIN"), root_1);

                if ( !(stream_identifier.hasNext()) ) {
                    throw new RewriteEarlyExitException();
                }
                while ( stream_identifier.hasNext() ) {
                    adaptor.addChild(root_1, stream_identifier.nextTree());

                }
                stream_identifier.reset();

                adaptor.addChild(root_0, root_1);
                }

            }

            retval.tree = root_0;}
            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 150, unknown_chain_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "unknown_chain"

    // $ANTLR start synpred8_Vala
    public final void synpred8_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:75:4: ( class_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:75:4: class_declaration
        {
        pushFollow(FOLLOW_class_declaration_in_synpred8_Vala209);
        class_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred8_Vala

    // $ANTLR start synpred9_Vala
    public final void synpred9_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:76:4: ( interface_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:76:4: interface_declaration
        {
        pushFollow(FOLLOW_interface_declaration_in_synpred9_Vala215);
        interface_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred9_Vala

    // $ANTLR start synpred10_Vala
    public final void synpred10_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:77:4: ( struct_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:77:4: struct_declaration
        {
        pushFollow(FOLLOW_struct_declaration_in_synpred10_Vala221);
        struct_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred10_Vala

    // $ANTLR start synpred11_Vala
    public final void synpred11_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:78:4: ( enum_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:78:4: enum_declaration
        {
        pushFollow(FOLLOW_enum_declaration_in_synpred11_Vala227);
        enum_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred11_Vala

    // $ANTLR start synpred12_Vala
    public final void synpred12_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:79:4: ( errordomain_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:79:4: errordomain_declaration
        {
        pushFollow(FOLLOW_errordomain_declaration_in_synpred12_Vala233);
        errordomain_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred12_Vala

    // $ANTLR start synpred13_Vala
    public final void synpred13_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:80:4: ( method_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:80:4: method_declaration
        {
        pushFollow(FOLLOW_method_declaration_in_synpred13_Vala239);
        method_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred13_Vala

    // $ANTLR start synpred14_Vala
    public final void synpred14_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:81:4: ( delegate_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:81:4: delegate_declaration
        {
        pushFollow(FOLLOW_delegate_declaration_in_synpred14_Vala245);
        delegate_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred14_Vala

    // $ANTLR start synpred15_Vala
    public final void synpred15_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:82:4: ( constant_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:82:4: constant_declaration
        {
        pushFollow(FOLLOW_constant_declaration_in_synpred15_Vala251);
        constant_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred15_Vala

    // $ANTLR start synpred21_Vala
    public final void synpred21_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:109:28: ( assignment_operator expression )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:109:28: assignment_operator expression
        {
        pushFollow(FOLLOW_assignment_operator_in_synpred21_Vala358);
        assignment_operator();

        state._fsp--;
        if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred21_Vala360);
        expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred21_Vala

    // $ANTLR start synpred36_Vala
    public final void synpred36_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:137:3: ( KW_IN inclusive_or_expression )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:137:3: KW_IN inclusive_or_expression
        {
        match(input,KW_IN,FOLLOW_KW_IN_in_synpred36_Vala519); if (state.failed) return ;
        pushFollow(FOLLOW_inclusive_or_expression_in_synpred36_Vala521);
        inclusive_or_expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred36_Vala

    // $ANTLR start synpred46_Vala
    public final void synpred46_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:165:4: ( ( KW_IS type ) )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:165:4: ( KW_IS type )
        {
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:165:4: ( KW_IS type )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:165:6: KW_IS type
        {
        match(input,KW_IS,FOLLOW_KW_IS_in_synpred46_Vala671); if (state.failed) return ;
        pushFollow(FOLLOW_type_in_synpred46_Vala673);
        type();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred46_Vala

    // $ANTLR start synpred47_Vala
    public final void synpred47_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:167:4: ( ( KW_AS type ) )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:167:4: ( KW_AS type )
        {
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:167:4: ( KW_AS type )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:167:6: KW_AS type
        {
        match(input,KW_AS,FOLLOW_KW_AS_in_synpred47_Vala688); if (state.failed) return ;
        pushFollow(FOLLOW_type_in_synpred47_Vala690);
        type();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred47_Vala

    // $ANTLR start synpred54_Vala
    public final void synpred54_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:181:4: ( type_arguments )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:181:4: type_arguments
        {
        pushFollow(FOLLOW_type_arguments_in_synpred54_Vala768);
        type_arguments();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred54_Vala

    // $ANTLR start synpred56_Vala
    public final void synpred56_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:183:4: ( QUESTION )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:183:4: QUESTION
        {
        match(input,QUESTION,FOLLOW_QUESTION_in_synpred56_Vala784); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred56_Vala

    // $ANTLR start synpred57_Vala
    public final void synpred57_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:184:4: ( array_type )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:184:4: array_type
        {
        pushFollow(FOLLOW_array_type_in_synpred57_Vala792);
        array_type();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred57_Vala

    // $ANTLR start synpred59_Vala
    public final void synpred59_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:192:3: ( QUESTION )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:192:3: QUESTION
        {
        match(input,QUESTION,FOLLOW_QUESTION_in_synpred59_Vala826); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred59_Vala

    // $ANTLR start synpred67_Vala
    public final void synpred67_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:225:3: ( ( unary_operator unary_expression ) )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:225:3: ( unary_operator unary_expression )
        {
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:225:3: ( unary_operator unary_expression )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:225:5: unary_operator unary_expression
        {
        pushFollow(FOLLOW_unary_operator_in_synpred67_Vala976);
        unary_operator();

        state._fsp--;
        if (state.failed) return ;
        pushFollow(FOLLOW_unary_expression_in_synpred67_Vala978);
        unary_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred67_Vala

    // $ANTLR start synpred80_Vala
    public final void synpred80_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:252:3: ( literal )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:252:3: literal
        {
        pushFollow(FOLLOW_literal_in_synpred80_Vala1115);
        literal();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred80_Vala

    // $ANTLR start synpred86_Vala
    public final void synpred86_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:258:5: ( object_or_array_creation_expression )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:258:5: object_or_array_creation_expression
        {
        pushFollow(FOLLOW_object_or_array_creation_expression_in_synpred86_Vala1151);
        object_or_array_creation_expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred86_Vala

    // $ANTLR start synpred87_Vala
    public final void synpred87_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:259:5: ( yield_expression )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:259:5: yield_expression
        {
        pushFollow(FOLLOW_yield_expression_in_synpred87_Vala1157);
        yield_expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred87_Vala

    // $ANTLR start synpred88_Vala
    public final void synpred88_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:260:5: ( sizeof_expression )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:260:5: sizeof_expression
        {
        pushFollow(FOLLOW_sizeof_expression_in_synpred88_Vala1163);
        sizeof_expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred88_Vala

    // $ANTLR start synpred89_Vala
    public final void synpred89_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:261:5: ( typeof_expression )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:261:5: typeof_expression
        {
        pushFollow(FOLLOW_typeof_expression_in_synpred89_Vala1169);
        typeof_expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred89_Vala

    // $ANTLR start synpred93_Vala
    public final void synpred93_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:268:5: ( element_access )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:268:5: element_access
        {
        pushFollow(FOLLOW_element_access_in_synpred93_Vala1203);
        element_access();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred93_Vala

    // $ANTLR start synpred96_Vala
    public final void synpred96_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:277:3: ( type_arguments )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:277:3: type_arguments
        {
        pushFollow(FOLLOW_type_arguments_in_synpred96_Vala1237);
        type_arguments();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred96_Vala

    // $ANTLR start synpred150_Vala
    public final void synpred150_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:357:3: ( type_arguments )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:357:3: type_arguments
        {
        pushFollow(FOLLOW_type_arguments_in_synpred150_Vala1593);
        type_arguments();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred150_Vala

    // $ANTLR start synpred164_Vala
    public final void synpred164_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:3: ( ( KW_REF ) )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:3: ( KW_REF )
        {
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:3: ( KW_REF )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:4: KW_REF
        {
        match(input,KW_REF,FOLLOW_KW_REF_in_synpred164_Vala1840); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred164_Vala

    // $ANTLR start synpred165_Vala
    public final void synpred165_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:14: ( ( KW_OUT ) )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:14: ( KW_OUT )
        {
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:14: ( KW_OUT )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:424:15: KW_OUT
        {
        match(input,KW_OUT,FOLLOW_KW_OUT_in_synpred165_Vala1846); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred165_Vala

    // $ANTLR start synpred168_Vala
    public final void synpred168_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:453:4: ( object_creation_expression )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:453:4: object_creation_expression
        {
        pushFollow(FOLLOW_object_creation_expression_in_synpred168_Vala1954);
        object_creation_expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred168_Vala

    // $ANTLR start synpred172_Vala
    public final void synpred172_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:478:3: ( LBRACKET RBRACKET )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:478:3: LBRACKET RBRACKET
        {
        match(input,LBRACKET,FOLLOW_LBRACKET_in_synpred172_Vala2062); if (state.failed) return ;
        match(input,RBRACKET,FOLLOW_RBRACKET_in_synpred172_Vala2068); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred172_Vala

    // $ANTLR start synpred174_Vala
    public final void synpred174_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:482:3: ( LBRACKET ( array_size )? RBRACKET )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:482:3: LBRACKET ( array_size )? RBRACKET
        {
        match(input,LBRACKET,FOLLOW_LBRACKET_in_synpred174_Vala2080); if (state.failed) return ;
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:483:3: ( array_size )?
        int alt214=2;
        int LA214_0 = input.LA(1);

        if ( (LA214_0==KW_USING||(LA214_0>=GLOBAL_NS && LA214_0<=IDENTIFIER)||LA214_0==LPAREN||LA214_0==KW_IN||LA214_0==AND||(LA214_0>=KW_IS && LA214_0<=KW_WEAK)||(LA214_0>=PLUS && LA214_0<=MINUS)||(LA214_0>=NOT && LA214_0<=KW_REQUIRES)||(LA214_0>=INTEGER && LA214_0<=LCURL)||LA214_0==TEMPLATE_START||(LA214_0>=KW_THIS && LA214_0<=KW_BASE)) ) {
            alt214=1;
        }
        switch (alt214) {
            case 1 :
                // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:483:4: array_size
                {
                pushFollow(FOLLOW_array_size_in_synpred174_Vala2087);
                array_size();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }

        match(input,RBRACKET,FOLLOW_RBRACKET_in_synpred174_Vala2094); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred174_Vala

    // $ANTLR start synpred178_Vala
    public final void synpred178_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:499:3: ( type_arguments )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:499:3: type_arguments
        {
        pushFollow(FOLLOW_type_arguments_in_synpred178_Vala2162);
        type_arguments();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred178_Vala

    // $ANTLR start synpred179_Vala
    public final void synpred179_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:500:3: ( member_access )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:500:3: member_access
        {
        pushFollow(FOLLOW_member_access_in_synpred179_Vala2169);
        member_access();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred179_Vala

    // $ANTLR start synpred185_Vala
    public final void synpred185_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:530:43: ( type_arguments )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:530:43: type_arguments
        {
        pushFollow(FOLLOW_type_arguments_in_synpred185_Vala2313);
        type_arguments();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred185_Vala

    // $ANTLR start synpred189_Vala
    public final void synpred189_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:546:4: ( expression )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:546:4: expression
        {
        pushFollow(FOLLOW_expression_in_synpred189_Vala2389);
        expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred189_Vala

    // $ANTLR start synpred216_Vala
    public final void synpred216_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:613:4: ( class_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:613:4: class_declaration
        {
        pushFollow(FOLLOW_class_declaration_in_synpred216_Vala2685);
        class_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred216_Vala

    // $ANTLR start synpred217_Vala
    public final void synpred217_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:614:4: ( struct_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:614:4: struct_declaration
        {
        pushFollow(FOLLOW_struct_declaration_in_synpred217_Vala2691);
        struct_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred217_Vala

    // $ANTLR start synpred218_Vala
    public final void synpred218_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:615:4: ( enum_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:615:4: enum_declaration
        {
        pushFollow(FOLLOW_enum_declaration_in_synpred218_Vala2697);
        enum_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred218_Vala

    // $ANTLR start synpred219_Vala
    public final void synpred219_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:616:4: ( delegate_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:616:4: delegate_declaration
        {
        pushFollow(FOLLOW_delegate_declaration_in_synpred219_Vala2703);
        delegate_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred219_Vala

    // $ANTLR start synpred220_Vala
    public final void synpred220_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:617:4: ( method_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:617:4: method_declaration
        {
        pushFollow(FOLLOW_method_declaration_in_synpred220_Vala2709);
        method_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred220_Vala

    // $ANTLR start synpred221_Vala
    public final void synpred221_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:618:4: ( signal_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:618:4: signal_declaration
        {
        pushFollow(FOLLOW_signal_declaration_in_synpred221_Vala2715);
        signal_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred221_Vala

    // $ANTLR start synpred222_Vala
    public final void synpred222_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:619:4: ( field_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:619:4: field_declaration
        {
        pushFollow(FOLLOW_field_declaration_in_synpred222_Vala2721);
        field_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred222_Vala

    // $ANTLR start synpred223_Vala
    public final void synpred223_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:620:4: ( constant_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:620:4: constant_declaration
        {
        pushFollow(FOLLOW_constant_declaration_in_synpred223_Vala2727);
        constant_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred223_Vala

    // $ANTLR start synpred224_Vala
    public final void synpred224_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:621:4: ( property_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:621:4: property_declaration
        {
        pushFollow(FOLLOW_property_declaration_in_synpred224_Vala2733);
        property_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred224_Vala

    // $ANTLR start synpred225_Vala
    public final void synpred225_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:622:4: ( constructor_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:622:4: constructor_declaration
        {
        pushFollow(FOLLOW_constructor_declaration_in_synpred225_Vala2739);
        constructor_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred225_Vala

    // $ANTLR start synpred226_Vala
    public final void synpred226_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:623:4: ( creation_method_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:623:4: creation_method_declaration
        {
        pushFollow(FOLLOW_creation_method_declaration_in_synpred226_Vala2745);
        creation_method_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred226_Vala

    // $ANTLR start synpred227_Vala
    public final void synpred227_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:624:4: ( destructor_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:624:4: destructor_declaration
        {
        pushFollow(FOLLOW_destructor_declaration_in_synpred227_Vala2750);
        destructor_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred227_Vala

    // $ANTLR start synpred240_Vala
    public final void synpred240_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:655:2: ( ( ( attributes )? ( method_declaration | constant_declaration | unknown_chain ) ) )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:655:2: ( ( attributes )? ( method_declaration | constant_declaration | unknown_chain ) )
        {
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:655:2: ( ( attributes )? ( method_declaration | constant_declaration | unknown_chain ) )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:656:3: ( attributes )? ( method_declaration | constant_declaration | unknown_chain )
        {
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:656:3: ( attributes )?
        int alt216=2;
        int LA216_0 = input.LA(1);

        if ( (LA216_0==LBRACKET) ) {
            alt216=1;
        }
        switch (alt216) {
            case 1 :
                // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:656:4: attributes
                {
                pushFollow(FOLLOW_attributes_in_synpred240_Vala2875);
                attributes();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }

        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:657:3: ( method_declaration | constant_declaration | unknown_chain )
        int alt217=3;
        alt217 = dfa217.predict(input);
        switch (alt217) {
            case 1 :
                // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:658:4: method_declaration
                {
                pushFollow(FOLLOW_method_declaration_in_synpred240_Vala2886);
                method_declaration();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:659:6: constant_declaration
                {
                pushFollow(FOLLOW_constant_declaration_in_synpred240_Vala2894);
                constant_declaration();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 3 :
                // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:660:6: unknown_chain
                {
                pushFollow(FOLLOW_unknown_chain_in_synpred240_Vala2902);
                unknown_chain();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred240_Vala

    // $ANTLR start synpred241_Vala
    public final void synpred241_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:669:3: ( COMMA enum_value )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:669:3: COMMA enum_value
        {
        match(input,COMMA,FOLLOW_COMMA_in_synpred241_Vala2934); if (state.failed) return ;
        pushFollow(FOLLOW_enum_value_in_synpred241_Vala2936);
        enum_value();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred241_Vala

    // $ANTLR start synpred261_Vala
    public final void synpred261_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:721:2: ( class_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:721:2: class_declaration
        {
        pushFollow(FOLLOW_class_declaration_in_synpred261_Vala3187);
        class_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred261_Vala

    // $ANTLR start synpred262_Vala
    public final void synpred262_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:722:4: ( struct_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:722:4: struct_declaration
        {
        pushFollow(FOLLOW_struct_declaration_in_synpred262_Vala3192);
        struct_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred262_Vala

    // $ANTLR start synpred263_Vala
    public final void synpred263_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:723:4: ( enum_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:723:4: enum_declaration
        {
        pushFollow(FOLLOW_enum_declaration_in_synpred263_Vala3198);
        enum_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred263_Vala

    // $ANTLR start synpred264_Vala
    public final void synpred264_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:724:4: ( delegate_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:724:4: delegate_declaration
        {
        pushFollow(FOLLOW_delegate_declaration_in_synpred264_Vala3204);
        delegate_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred264_Vala

    // $ANTLR start synpred265_Vala
    public final void synpred265_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:725:4: ( method_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:725:4: method_declaration
        {
        pushFollow(FOLLOW_method_declaration_in_synpred265_Vala3210);
        method_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred265_Vala

    // $ANTLR start synpred266_Vala
    public final void synpred266_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:726:4: ( signal_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:726:4: signal_declaration
        {
        pushFollow(FOLLOW_signal_declaration_in_synpred266_Vala3216);
        signal_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred266_Vala

    // $ANTLR start synpred267_Vala
    public final void synpred267_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:727:4: ( field_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:727:4: field_declaration
        {
        pushFollow(FOLLOW_field_declaration_in_synpred267_Vala3222);
        field_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred267_Vala

    // $ANTLR start synpred268_Vala
    public final void synpred268_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:728:4: ( constant_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:728:4: constant_declaration
        {
        pushFollow(FOLLOW_constant_declaration_in_synpred268_Vala3228);
        constant_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred268_Vala

    // $ANTLR start synpred276_Vala
    public final void synpred276_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:755:3: ( method_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:755:3: method_declaration
        {
        pushFollow(FOLLOW_method_declaration_in_synpred276_Vala3378);
        method_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred276_Vala

    // $ANTLR start synpred277_Vala
    public final void synpred277_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:756:5: ( field_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:756:5: field_declaration
        {
        pushFollow(FOLLOW_field_declaration_in_synpred277_Vala3385);
        field_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred277_Vala

    // $ANTLR start synpred278_Vala
    public final void synpred278_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:757:5: ( constant_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:757:5: constant_declaration
        {
        pushFollow(FOLLOW_constant_declaration_in_synpred278_Vala3392);
        constant_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred278_Vala

    // $ANTLR start synpred279_Vala
    public final void synpred279_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:758:5: ( property_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:758:5: property_declaration
        {
        pushFollow(FOLLOW_property_declaration_in_synpred279_Vala3399);
        property_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred279_Vala

    // $ANTLR start synpred280_Vala
    public final void synpred280_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:759:5: ( creation_method_declaration )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:759:5: creation_method_declaration
        {
        pushFollow(FOLLOW_creation_method_declaration_in_synpred280_Vala3405);
        creation_method_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred280_Vala

    // $ANTLR start synpred294_Vala
    public final void synpred294_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:5: ( ( KW_OWNED ) )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:5: ( KW_OWNED )
        {
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:5: ( KW_OWNED )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:6: KW_OWNED
        {
        match(input,KW_OWNED,FOLLOW_KW_OWNED_in_synpred294_Vala3623); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred294_Vala

    // $ANTLR start synpred295_Vala
    public final void synpred295_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:18: ( ( KW_UNOWNED ) )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:18: ( KW_UNOWNED )
        {
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:18: ( KW_UNOWNED )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:809:19: KW_UNOWNED
        {
        match(input,KW_UNOWNED,FOLLOW_KW_UNOWNED_in_synpred295_Vala3629); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred295_Vala

    // $ANTLR start synpred342_Vala
    public final void synpred342_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:936:3: ( access_modifier )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:936:3: access_modifier
        {
        pushFollow(FOLLOW_access_modifier_in_synpred342_Vala4253);
        access_modifier();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred342_Vala

    // $ANTLR start synpred345_Vala
    public final void synpred345_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:939:3: ( ( property_get_accessor property_set_construct_accessor ) )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:939:3: ( property_get_accessor property_set_construct_accessor )
        {
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:939:3: ( property_get_accessor property_set_construct_accessor )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:939:4: property_get_accessor property_set_construct_accessor
        {
        pushFollow(FOLLOW_property_get_accessor_in_synpred345_Vala4273);
        property_get_accessor();

        state._fsp--;
        if (state.failed) return ;
        pushFollow(FOLLOW_property_set_construct_accessor_in_synpred345_Vala4275);
        property_set_construct_accessor();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred345_Vala

    // $ANTLR start synpred346_Vala
    public final void synpred346_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:940:5: ( ( property_set_construct_accessor property_get_accessor ) )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:940:5: ( property_set_construct_accessor property_get_accessor )
        {
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:940:5: ( property_set_construct_accessor property_get_accessor )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:940:6: property_set_construct_accessor property_get_accessor
        {
        pushFollow(FOLLOW_property_set_construct_accessor_in_synpred346_Vala4283);
        property_set_construct_accessor();

        state._fsp--;
        if (state.failed) return ;
        pushFollow(FOLLOW_property_get_accessor_in_synpred346_Vala4285);
        property_get_accessor();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred346_Vala

    // $ANTLR start synpred347_Vala
    public final void synpred347_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:941:5: ( ( property_set_construct_accessor ) )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:941:5: ( property_set_construct_accessor )
        {
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:941:5: ( property_set_construct_accessor )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:941:6: property_set_construct_accessor
        {
        pushFollow(FOLLOW_property_set_construct_accessor_in_synpred347_Vala4293);
        property_set_construct_accessor();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred347_Vala

    // $ANTLR start synpred364_Vala
    public final void synpred364_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:988:2: ( block )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:988:2: block
        {
        pushFollow(FOLLOW_block_in_synpred364_Vala4521);
        block();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred364_Vala

    // $ANTLR start synpred371_Vala
    public final void synpred371_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:995:4: ( foreach_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:995:4: foreach_statement
        {
        pushFollow(FOLLOW_foreach_statement_in_synpred371_Vala4561);
        foreach_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred371_Vala

    // $ANTLR start synpred372_Vala
    public final void synpred372_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:996:4: ( break_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:996:4: break_statement
        {
        pushFollow(FOLLOW_break_statement_in_synpred372_Vala4567);
        break_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred372_Vala

    // $ANTLR start synpred373_Vala
    public final void synpred373_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:997:4: ( continue_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:997:4: continue_statement
        {
        pushFollow(FOLLOW_continue_statement_in_synpred373_Vala4573);
        continue_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred373_Vala

    // $ANTLR start synpred374_Vala
    public final void synpred374_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:998:4: ( return_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:998:4: return_statement
        {
        pushFollow(FOLLOW_return_statement_in_synpred374_Vala4579);
        return_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred374_Vala

    // $ANTLR start synpred375_Vala
    public final void synpred375_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:999:4: ( yield_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:999:4: yield_statement
        {
        pushFollow(FOLLOW_yield_statement_in_synpred375_Vala4585);
        yield_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred375_Vala

    // $ANTLR start synpred376_Vala
    public final void synpred376_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1000:4: ( throw_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1000:4: throw_statement
        {
        pushFollow(FOLLOW_throw_statement_in_synpred376_Vala4591);
        throw_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred376_Vala

    // $ANTLR start synpred377_Vala
    public final void synpred377_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1001:4: ( try_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1001:4: try_statement
        {
        pushFollow(FOLLOW_try_statement_in_synpred377_Vala4597);
        try_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred377_Vala

    // $ANTLR start synpred378_Vala
    public final void synpred378_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1002:4: ( lock_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1002:4: lock_statement
        {
        pushFollow(FOLLOW_lock_statement_in_synpred378_Vala4603);
        lock_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred378_Vala

    // $ANTLR start synpred379_Vala
    public final void synpred379_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1003:4: ( delete_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1003:4: delete_statement
        {
        pushFollow(FOLLOW_delete_statement_in_synpred379_Vala4609);
        delete_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred379_Vala

    // $ANTLR start synpred380_Vala
    public final void synpred380_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1004:4: ( local_variable_declarations )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1004:4: local_variable_declarations
        {
        pushFollow(FOLLOW_local_variable_declarations_in_synpred380_Vala4615);
        local_variable_declarations();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred380_Vala

    // $ANTLR start synpred381_Vala
    public final void synpred381_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1015:3: ( KW_ELSE embedded_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1015:3: KW_ELSE embedded_statement
        {
        match(input,KW_ELSE,FOLLOW_KW_ELSE_in_synpred381_Vala4656); if (state.failed) return ;
        pushFollow(FOLLOW_embedded_statement_in_synpred381_Vala4660);
        embedded_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred381_Vala

    // $ANTLR start synpred382_Vala
    public final void synpred382_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1021:2: ( block )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1021:2: block
        {
        pushFollow(FOLLOW_block_in_synpred382_Vala4676);
        block();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred382_Vala

    // $ANTLR start synpred389_Vala
    public final void synpred389_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1032:4: ( foreach_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1032:4: foreach_statement
        {
        pushFollow(FOLLOW_foreach_statement_in_synpred389_Vala4729);
        foreach_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred389_Vala

    // $ANTLR start synpred390_Vala
    public final void synpred390_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1033:4: ( break_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1033:4: break_statement
        {
        pushFollow(FOLLOW_break_statement_in_synpred390_Vala4735);
        break_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred390_Vala

    // $ANTLR start synpred391_Vala
    public final void synpred391_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1034:4: ( continue_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1034:4: continue_statement
        {
        pushFollow(FOLLOW_continue_statement_in_synpred391_Vala4741);
        continue_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred391_Vala

    // $ANTLR start synpred392_Vala
    public final void synpred392_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1035:4: ( return_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1035:4: return_statement
        {
        pushFollow(FOLLOW_return_statement_in_synpred392_Vala4747);
        return_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred392_Vala

    // $ANTLR start synpred393_Vala
    public final void synpred393_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1036:4: ( yield_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1036:4: yield_statement
        {
        pushFollow(FOLLOW_yield_statement_in_synpred393_Vala4753);
        yield_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred393_Vala

    // $ANTLR start synpred394_Vala
    public final void synpred394_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1037:4: ( throw_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1037:4: throw_statement
        {
        pushFollow(FOLLOW_throw_statement_in_synpred394_Vala4759);
        throw_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred394_Vala

    // $ANTLR start synpred395_Vala
    public final void synpred395_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1038:4: ( try_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1038:4: try_statement
        {
        pushFollow(FOLLOW_try_statement_in_synpred395_Vala4765);
        try_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred395_Vala

    // $ANTLR start synpred396_Vala
    public final void synpred396_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1039:4: ( lock_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1039:4: lock_statement
        {
        pushFollow(FOLLOW_lock_statement_in_synpred396_Vala4771);
        lock_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred396_Vala

    // $ANTLR start synpred397_Vala
    public final void synpred397_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1040:4: ( delete_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1040:4: delete_statement
        {
        pushFollow(FOLLOW_delete_statement_in_synpred397_Vala4777);
        delete_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred397_Vala

    // $ANTLR start synpred405_Vala
    public final void synpred405_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1084:4: ( local_variable_declarations )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1084:4: local_variable_declarations
        {
        pushFollow(FOLLOW_local_variable_declarations_in_synpred405_Vala4988);
        local_variable_declarations();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred405_Vala

    // $ANTLR start synpred410_Vala
    public final void synpred410_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1125:15: ( expression_statement )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1125:15: expression_statement
        {
        pushFollow(FOLLOW_expression_statement_in_synpred410_Vala5158);
        expression_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred410_Vala

    // $ANTLR start synpred411_Vala
    public final void synpred411_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1125:38: ( KW_RETURN expression )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1125:38: KW_RETURN expression
        {
        match(input,KW_RETURN,FOLLOW_KW_RETURN_in_synpred411_Vala5162); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred411_Vala5164);
        expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred411_Vala

    // $ANTLR start synpred412_Vala
    public final void synpred412_Vala_fragment() throws RecognitionException {   
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1135:3: ( catch_clause )
        // /home/maqdev/dev/carbonfx/netbeans-valaproject/antlr/Vala.g:1135:3: catch_clause
        {
        pushFollow(FOLLOW_catch_clause_in_synpred412_Vala5205);
        catch_clause();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred412_Vala

    // Delegated rules

    public final boolean synpred405_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred405_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred295_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred295_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred219_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred219_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred267_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred267_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred240_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred240_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred174_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred174_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred392_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred392_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred397_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred397_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred277_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred277_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred179_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred179_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred396_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred396_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred165_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred165_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred372_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred372_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred364_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred364_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred225_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred225_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred265_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred265_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred241_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred241_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred371_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred371_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred220_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred223_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred381_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred381_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred263_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred263_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred227_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred227_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred375_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred375_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred342_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred342_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred389_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred389_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred268_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred268_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred261_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred261_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred411_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred411_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred379_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred379_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred178_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred178_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred226_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred226_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred278_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred347_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred347_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred294_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred294_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred224_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred224_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred391_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred391_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred373_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred373_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred266_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred266_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred376_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred376_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred378_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred378_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred276_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred382_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred382_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred345_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred345_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred346_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred346_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred393_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred393_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred377_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred377_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred390_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred390_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred380_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred380_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred264_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred264_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred395_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred395_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred262_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred262_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred410_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred410_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred394_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred394_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred412_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred412_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred222_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred222_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred374_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred374_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_Vala() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_Vala_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA7 dfa7 = new DFA7(this);
    protected DFA13 dfa13 = new DFA13(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA29 dfa29 = new DFA29(this);
    protected DFA30 dfa30 = new DFA30(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA42 dfa42 = new DFA42(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA44 dfa44 = new DFA44(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA88 dfa88 = new DFA88(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA116 dfa116 = new DFA116(this);
    protected DFA124 dfa124 = new DFA124(this);
    protected DFA182 dfa182 = new DFA182(this);
    protected DFA184 dfa184 = new DFA184(this);
    protected DFA185 dfa185 = new DFA185(this);
    protected DFA194 dfa194 = new DFA194(this);
    protected DFA198 dfa198 = new DFA198(this);
    protected DFA199 dfa199 = new DFA199(this);
    protected DFA217 dfa217 = new DFA217(this);
    static final String DFA7_eotS =
        "\25\uffff";
    static final String DFA7_eofS =
        "\25\uffff";
    static final String DFA7_minS =
        "\1\11\1\uffff\3\0\4\uffff\7\0\5\uffff";
    static final String DFA7_maxS =
        "\1\170\1\uffff\3\0\4\uffff\7\0\5\uffff";
    static final String DFA7_acceptS =
        "\1\uffff\1\1\3\uffff\1\3\1\4\1\5\1\6\7\uffff\1\10\1\11\1\2\1\7\1"+
        "\12";
    static final String DFA7_specialS =
        "\2\uffff\1\0\1\1\1\2\4\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\5\uffff}>";
    static final String[] DFA7_transitionS = {
            "\1\15\1\16\40\uffff\1\12\1\uffff\1\13\3\14\17\uffff\1\17\3\uffff"+
            "\1\11\1\4\1\6\1\3\1\11\2\3\2\11\4\2\1\7\1\10\1\5\1\1\42\uffff"+
            "\1\20\1\21",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA7_eot = DFA.unpackEncodedString(DFA7_eotS);
    static final short[] DFA7_eof = DFA.unpackEncodedString(DFA7_eofS);
    static final char[] DFA7_min = DFA.unpackEncodedStringToUnsignedChars(DFA7_minS);
    static final char[] DFA7_max = DFA.unpackEncodedStringToUnsignedChars(DFA7_maxS);
    static final short[] DFA7_accept = DFA.unpackEncodedString(DFA7_acceptS);
    static final short[] DFA7_special = DFA.unpackEncodedString(DFA7_specialS);
    static final short[][] DFA7_transition;

    static {
        int numStates = DFA7_transitionS.length;
        DFA7_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA7_transition[i] = DFA.unpackEncodedString(DFA7_transitionS[i]);
        }
    }

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = DFA7_eot;
            this.eof = DFA7_eof;
            this.min = DFA7_min;
            this.max = DFA7_max;
            this.accept = DFA7_accept;
            this.special = DFA7_special;
            this.transition = DFA7_transition;
        }
        public String getDescription() {
            return "74:2: ( namespace_declaration | class_declaration | interface_declaration | struct_declaration | enum_declaration | errordomain_declaration | method_declaration | delegate_declaration | constant_declaration | field_declaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_2 = input.LA(1);

                         
                        int index7_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_Vala()) ) {s = 18;}

                        else if ( (synpred9_Vala()) ) {s = 5;}

                        else if ( (synpred10_Vala()) ) {s = 6;}

                        else if ( (synpred11_Vala()) ) {s = 7;}

                        else if ( (synpred12_Vala()) ) {s = 8;}

                        else if ( (synpred13_Vala()) ) {s = 19;}

                        else if ( (synpred14_Vala()) ) {s = 16;}

                        else if ( (synpred15_Vala()) ) {s = 17;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index7_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA7_3 = input.LA(1);

                         
                        int index7_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_Vala()) ) {s = 18;}

                        else if ( (synpred9_Vala()) ) {s = 5;}

                        else if ( (synpred10_Vala()) ) {s = 6;}

                        else if ( (synpred11_Vala()) ) {s = 7;}

                        else if ( (synpred12_Vala()) ) {s = 8;}

                        else if ( (synpred13_Vala()) ) {s = 19;}

                        else if ( (synpred14_Vala()) ) {s = 16;}

                        else if ( (synpred15_Vala()) ) {s = 17;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index7_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA7_4 = input.LA(1);

                         
                        int index7_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_Vala()) ) {s = 18;}

                        else if ( (synpred13_Vala()) ) {s = 19;}

                        else if ( (synpred14_Vala()) ) {s = 16;}

                        else if ( (synpred15_Vala()) ) {s = 17;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index7_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA7_9 = input.LA(1);

                         
                        int index7_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_Vala()) ) {s = 19;}

                        else if ( (synpred14_Vala()) ) {s = 16;}

                        else if ( (synpred15_Vala()) ) {s = 17;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index7_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA7_10 = input.LA(1);

                         
                        int index7_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_Vala()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index7_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA7_11 = input.LA(1);

                         
                        int index7_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_Vala()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index7_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA7_12 = input.LA(1);

                         
                        int index7_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_Vala()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index7_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA7_13 = input.LA(1);

                         
                        int index7_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_Vala()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index7_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA7_14 = input.LA(1);

                         
                        int index7_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_Vala()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index7_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA7_15 = input.LA(1);

                         
                        int index7_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_Vala()) ) {s = 19;}

                        else if ( (synpred15_Vala()) ) {s = 17;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index7_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA13_eotS =
        "\45\uffff";
    static final String DFA13_eofS =
        "\1\uffff\1\3\2\uffff\6\3\16\uffff\1\3\1\uffff\4\3\7\uffff";
    static final String DFA13_minS =
        "\3\5\1\uffff\6\5\1\uffff\10\6\2\5\3\6\6\5\2\6\2\5\3\6";
    static final String DFA13_maxS =
        "\1\162\1\170\1\162\1\uffff\6\170\1\uffff\15\163\1\170\1\162\4\170"+
        "\7\163";
    static final String DFA13_acceptS =
        "\3\uffff\1\2\6\uffff\1\1\32\uffff";
    static final String DFA13_specialS =
        "\45\uffff}>";
    static final String[] DFA13_transitionS = {
            "\1\11\3\uffff\1\3\1\11\2\uffff\1\2\21\uffff\1\11\2\uffff\1\3"+
            "\6\uffff\3\11\1\3\4\11\1\uffff\2\3\2\uffff\4\3\3\11\2\1\1\4"+
            "\1\5\1\6\1\7\1\10\41\11\1\uffff\10\3\1\uffff\1\3\1\uffff\2\3",
            "\61\3\2\uffff\56\3\10\uffff\1\3\4\uffff\1\12\4\uffff\1\3",
            "\1\27\3\uffff\1\3\1\20\2\uffff\1\3\1\12\20\uffff\1\27\2\uffff"+
            "\1\3\6\uffff\2\27\1\16\1\3\1\17\1\14\1\13\1\15\1\uffff\2\3\2"+
            "\uffff\4\3\3\27\2\21\1\22\1\23\1\24\1\25\1\26\41\27\1\uffff"+
            "\10\3\1\uffff\1\3\1\uffff\2\3",
            "",
            "\61\3\2\uffff\56\3\10\uffff\1\3\4\uffff\1\12\4\uffff\1\3",
            "\61\3\2\uffff\56\3\10\uffff\1\3\4\uffff\1\12\4\uffff\1\3",
            "\61\3\2\uffff\56\3\10\uffff\1\3\3\uffff\1\3\1\12\4\uffff\1"+
            "\3",
            "\61\3\2\uffff\56\3\10\uffff\1\3\4\uffff\1\12\4\uffff\1\3",
            "\61\3\2\uffff\56\3\10\uffff\1\3\4\uffff\1\12\4\uffff\1\3",
            "\61\3\2\uffff\56\3\10\uffff\1\3\4\uffff\1\12\4\uffff\1\3",
            "",
            "\1\31\1\uffff\4\3\1\uffff\1\3\1\30\14\3\1\uffff\17\3\1\uffff"+
            "\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff\1\3",
            "\1\31\1\uffff\4\3\1\uffff\1\3\1\32\14\3\1\uffff\17\3\1\uffff"+
            "\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff\1\3",
            "\1\31\1\uffff\4\3\1\uffff\1\3\1\33\14\3\1\uffff\17\3\1\uffff"+
            "\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff\1\3",
            "\1\31\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\34\14\3\1\uffff"+
            "\17\3\1\uffff\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff"+
            "\1\3",
            "\1\31\1\uffff\4\3\1\uffff\1\3\1\35\14\3\1\uffff\17\3\1\uffff"+
            "\1\3\1\uffff\10\3\2\uffff\2\3\53\uffff\1\3\15\uffff\1\3",
            "\1\31\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\34\14\3\1\uffff"+
            "\17\3\1\uffff\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff"+
            "\1\3",
            "\1\31\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\35\14\3\1\uffff"+
            "\17\3\1\uffff\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff"+
            "\1\3",
            "\1\31\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\35\14\3\1\uffff"+
            "\17\3\1\uffff\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff"+
            "\1\3",
            "\1\3\1\31\1\uffff\4\3\1\uffff\1\3\1\35\14\3\1\uffff\32\3\2"+
            "\uffff\56\3\15\uffff\1\3",
            "\1\3\1\31\1\uffff\4\3\1\uffff\1\3\1\35\14\3\1\uffff\32\3\2"+
            "\uffff\56\3\14\uffff\2\3",
            "\1\31\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\35\14\3\1\uffff"+
            "\17\3\1\uffff\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff"+
            "\1\3",
            "\1\31\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\35\14\3\1\uffff"+
            "\17\3\1\uffff\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff"+
            "\1\3",
            "\1\31\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\35\14\3\1\uffff"+
            "\17\3\1\uffff\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff"+
            "\1\3",
            "\153\3\1\uffff\2\3\1\12\4\uffff\1\3",
            "\1\44\3\uffff\1\3\1\44\2\uffff\1\3\21\uffff\1\44\2\uffff\1"+
            "\3\6\uffff\3\44\1\3\4\44\1\uffff\2\3\2\uffff\4\3\3\44\2\36\1"+
            "\37\1\40\1\41\1\42\1\43\41\44\1\uffff\10\3\1\uffff\1\3\1\uffff"+
            "\2\3",
            "\153\3\1\uffff\2\3\1\12\4\uffff\1\3",
            "\153\3\1\uffff\2\3\1\12\4\uffff\1\3",
            "\153\3\1\uffff\2\3\1\12\4\uffff\1\3",
            "\61\3\2\uffff\56\3\10\uffff\1\3\4\uffff\1\12\4\uffff\1\3",
            "\1\31\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\35\14\3\1\uffff"+
            "\17\3\1\uffff\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff"+
            "\1\3",
            "\1\31\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\35\14\3\1\uffff"+
            "\17\3\1\uffff\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff"+
            "\1\3",
            "\1\3\1\31\1\uffff\4\3\1\uffff\1\3\1\35\14\3\1\uffff\32\3\2"+
            "\uffff\56\3\15\uffff\1\3",
            "\1\3\1\31\1\uffff\4\3\1\uffff\1\3\1\35\14\3\1\uffff\32\3\2"+
            "\uffff\56\3\14\uffff\2\3",
            "\1\31\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\35\14\3\1\uffff"+
            "\17\3\1\uffff\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff"+
            "\1\3",
            "\1\31\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\35\14\3\1\uffff"+
            "\17\3\1\uffff\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff"+
            "\1\3",
            "\1\31\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\35\14\3\1\uffff"+
            "\17\3\1\uffff\1\3\4\uffff\5\3\2\uffff\2\3\53\uffff\1\3\15\uffff"+
            "\1\3"
    };

    static final short[] DFA13_eot = DFA.unpackEncodedString(DFA13_eotS);
    static final short[] DFA13_eof = DFA.unpackEncodedString(DFA13_eofS);
    static final char[] DFA13_min = DFA.unpackEncodedStringToUnsignedChars(DFA13_minS);
    static final char[] DFA13_max = DFA.unpackEncodedStringToUnsignedChars(DFA13_maxS);
    static final short[] DFA13_accept = DFA.unpackEncodedString(DFA13_acceptS);
    static final short[] DFA13_special = DFA.unpackEncodedString(DFA13_specialS);
    static final short[][] DFA13_transition;

    static {
        int numStates = DFA13_transitionS.length;
        DFA13_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA13_transition[i] = DFA.unpackEncodedString(DFA13_transitionS[i]);
        }
    }

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = DFA13_eot;
            this.eof = DFA13_eof;
            this.min = DFA13_min;
            this.max = DFA13_max;
            this.accept = DFA13_accept;
            this.special = DFA13_special;
            this.transition = DFA13_transition;
        }
        public String getDescription() {
            return "105:1: expression : ( lambda_expression | ( conditional_expression ( assignment_operator expression )? ) );";
        }
    }
    static final String DFA18_eotS =
        "\31\uffff";
    static final String DFA18_eofS =
        "\1\2\30\uffff";
    static final String DFA18_minS =
        "\1\5\1\0\27\uffff";
    static final String DFA18_maxS =
        "\1\170\1\0\27\uffff";
    static final String DFA18_acceptS =
        "\2\uffff\1\2\25\uffff\1\1";
    static final String DFA18_specialS =
        "\1\uffff\1\0\27\uffff}>";
    static final String[] DFA18_transitionS = {
            "\3\2\1\uffff\4\2\1\uffff\21\2\1\1\11\uffff\3\2\1\uffff\4\2\11"+
            "\uffff\53\2\11\uffff\1\2\11\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA18_eot = DFA.unpackEncodedString(DFA18_eotS);
    static final short[] DFA18_eof = DFA.unpackEncodedString(DFA18_eofS);
    static final char[] DFA18_min = DFA.unpackEncodedStringToUnsignedChars(DFA18_minS);
    static final char[] DFA18_max = DFA.unpackEncodedStringToUnsignedChars(DFA18_maxS);
    static final short[] DFA18_accept = DFA.unpackEncodedString(DFA18_acceptS);
    static final short[] DFA18_special = DFA.unpackEncodedString(DFA18_specialS);
    static final short[][] DFA18_transition;

    static {
        int numStates = DFA18_transitionS.length;
        DFA18_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA18_transition[i] = DFA.unpackEncodedString(DFA18_transitionS[i]);
        }
    }

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = DFA18_eot;
            this.eof = DFA18_eof;
            this.min = DFA18_min;
            this.max = DFA18_max;
            this.accept = DFA18_accept;
            this.special = DFA18_special;
            this.transition = DFA18_transition;
        }
        public String getDescription() {
            return "137:2: ( KW_IN inclusive_or_expression )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA18_1 = input.LA(1);

                         
                        int index18_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_Vala()) ) {s = 24;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index18_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 18, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA23_eotS =
        "\41\uffff";
    static final String DFA23_eofS =
        "\1\1\40\uffff";
    static final String DFA23_minS =
        "\1\5\32\uffff\1\0\1\uffff\1\0\3\uffff";
    static final String DFA23_maxS =
        "\1\170\32\uffff\1\0\1\uffff\1\0\3\uffff";
    static final String DFA23_acceptS =
        "\1\uffff\1\4\32\uffff\1\1\2\uffff\1\2\1\3";
    static final String DFA23_specialS =
        "\33\uffff\1\0\1\uffff\1\1\3\uffff}>";
    static final String[] DFA23_transitionS = {
            "\3\1\1\uffff\4\1\1\uffff\27\1\4\34\1\33\1\35\1\1\1\uffff\4\1"+
            "\11\uffff\53\1\11\uffff\1\1\11\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] DFA23_eot = DFA.unpackEncodedString(DFA23_eotS);
    static final short[] DFA23_eof = DFA.unpackEncodedString(DFA23_eofS);
    static final char[] DFA23_min = DFA.unpackEncodedStringToUnsignedChars(DFA23_minS);
    static final char[] DFA23_max = DFA.unpackEncodedStringToUnsignedChars(DFA23_maxS);
    static final short[] DFA23_accept = DFA.unpackEncodedString(DFA23_acceptS);
    static final short[] DFA23_special = DFA.unpackEncodedString(DFA23_specialS);
    static final short[][] DFA23_transition;

    static {
        int numStates = DFA23_transitionS.length;
        DFA23_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA23_transition[i] = DFA.unpackEncodedString(DFA23_transitionS[i]);
        }
    }

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = DFA23_eot;
            this.eof = DFA23_eof;
            this.min = DFA23_min;
            this.max = DFA23_max;
            this.accept = DFA23_accept;
            this.special = DFA23_special;
            this.transition = DFA23_transition;
        }
        public String getDescription() {
            return "()* loopback of 162:2: ( ( ( LT | GT | LTEQ | GTEQ ) shift_expression ) | ( KW_IS type ) | ( KW_AS type ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA23_27 = input.LA(1);

                         
                        int index23_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_Vala()) ) {s = 31;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_27);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA23_29 = input.LA(1);

                         
                        int index23_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_Vala()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 23, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA27_eotS =
        "\47\uffff";
    static final String DFA27_eofS =
        "\1\2\46\uffff";
    static final String DFA27_minS =
        "\1\5\1\0\45\uffff";
    static final String DFA27_maxS =
        "\1\170\1\0\45\uffff";
    static final String DFA27_acceptS =
        "\2\uffff\1\2\43\uffff\1\1";
    static final String DFA27_specialS =
        "\1\uffff\1\0\45\uffff}>";
    static final String[] DFA27_transitionS = {
            "\3\2\1\uffff\34\2\1\1\13\2\11\uffff\53\2\10\uffff\2\2\7\uffff"+
            "\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA27_eot = DFA.unpackEncodedString(DFA27_eotS);
    static final short[] DFA27_eof = DFA.unpackEncodedString(DFA27_eofS);
    static final char[] DFA27_min = DFA.unpackEncodedStringToUnsignedChars(DFA27_minS);
    static final char[] DFA27_max = DFA.unpackEncodedStringToUnsignedChars(DFA27_maxS);
    static final short[] DFA27_accept = DFA.unpackEncodedString(DFA27_acceptS);
    static final short[] DFA27_special = DFA.unpackEncodedString(DFA27_specialS);
    static final short[][] DFA27_transition;

    static {
        int numStates = DFA27_transitionS.length;
        DFA27_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA27_transition[i] = DFA.unpackEncodedString(DFA27_transitionS[i]);
        }
    }

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = DFA27_eot;
            this.eof = DFA27_eof;
            this.min = DFA27_min;
            this.max = DFA27_max;
            this.accept = DFA27_accept;
            this.special = DFA27_special;
            this.transition = DFA27_transition;
        }
        public String getDescription() {
            return "181:3: ( type_arguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA27_1 = input.LA(1);

                         
                        int index27_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_Vala()) ) {s = 38;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index27_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 27, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA29_eotS =
        "\45\uffff";
    static final String DFA29_eofS =
        "\1\2\44\uffff";
    static final String DFA29_minS =
        "\1\5\1\0\43\uffff";
    static final String DFA29_maxS =
        "\1\170\1\0\43\uffff";
    static final String DFA29_acceptS =
        "\2\uffff\1\2\41\uffff\1\1";
    static final String DFA29_specialS =
        "\1\uffff\1\0\43\uffff}>";
    static final String[] DFA29_transitionS = {
            "\3\2\1\uffff\21\2\1\1\21\2\1\uffff\4\2\11\uffff\53\2\10\uffff"+
            "\2\2\7\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA29_eot = DFA.unpackEncodedString(DFA29_eotS);
    static final short[] DFA29_eof = DFA.unpackEncodedString(DFA29_eofS);
    static final char[] DFA29_min = DFA.unpackEncodedStringToUnsignedChars(DFA29_minS);
    static final char[] DFA29_max = DFA.unpackEncodedStringToUnsignedChars(DFA29_maxS);
    static final short[] DFA29_accept = DFA.unpackEncodedString(DFA29_acceptS);
    static final short[] DFA29_special = DFA.unpackEncodedString(DFA29_specialS);
    static final short[][] DFA29_transition;

    static {
        int numStates = DFA29_transitionS.length;
        DFA29_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA29_transition[i] = DFA.unpackEncodedString(DFA29_transitionS[i]);
        }
    }

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = DFA29_eot;
            this.eof = DFA29_eof;
            this.min = DFA29_min;
            this.max = DFA29_max;
            this.accept = DFA29_accept;
            this.special = DFA29_special;
            this.transition = DFA29_transition;
        }
        public String getDescription() {
            return "183:3: ( QUESTION )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA29_1 = input.LA(1);

                         
                        int index29_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_Vala()) ) {s = 36;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index29_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 29, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA30_eotS =
        "\45\uffff";
    static final String DFA30_eofS =
        "\1\1\44\uffff";
    static final String DFA30_minS =
        "\1\5\21\uffff\1\0\22\uffff";
    static final String DFA30_maxS =
        "\1\170\21\uffff\1\0\22\uffff";
    static final String DFA30_acceptS =
        "\1\uffff\1\2\42\uffff\1\1";
    static final String DFA30_specialS =
        "\22\uffff\1\0\22\uffff}>";
    static final String[] DFA30_transitionS = {
            "\3\1\1\uffff\2\1\1\22\40\1\1\uffff\4\1\11\uffff\53\1\10\uffff"+
            "\2\1\7\uffff\1\1\1\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA30_eot = DFA.unpackEncodedString(DFA30_eotS);
    static final short[] DFA30_eof = DFA.unpackEncodedString(DFA30_eofS);
    static final char[] DFA30_min = DFA.unpackEncodedStringToUnsignedChars(DFA30_minS);
    static final char[] DFA30_max = DFA.unpackEncodedStringToUnsignedChars(DFA30_maxS);
    static final short[] DFA30_accept = DFA.unpackEncodedString(DFA30_acceptS);
    static final short[] DFA30_special = DFA.unpackEncodedString(DFA30_specialS);
    static final short[][] DFA30_transition;

    static {
        int numStates = DFA30_transitionS.length;
        DFA30_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA30_transition[i] = DFA.unpackEncodedString(DFA30_transitionS[i]);
        }
    }

    class DFA30 extends DFA {

        public DFA30(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 30;
            this.eot = DFA30_eot;
            this.eof = DFA30_eof;
            this.min = DFA30_min;
            this.max = DFA30_max;
            this.accept = DFA30_accept;
            this.special = DFA30_special;
            this.transition = DFA30_transition;
        }
        public String getDescription() {
            return "()* loopback of 184:3: ( array_type )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA30_18 = input.LA(1);

                         
                        int index30_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_Vala()) ) {s = 36;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index30_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 30, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA33_eotS =
        "\45\uffff";
    static final String DFA33_eofS =
        "\1\2\44\uffff";
    static final String DFA33_minS =
        "\1\5\1\0\43\uffff";
    static final String DFA33_maxS =
        "\1\170\1\0\43\uffff";
    static final String DFA33_acceptS =
        "\2\uffff\1\2\41\uffff\1\1";
    static final String DFA33_specialS =
        "\1\uffff\1\0\43\uffff}>";
    static final String[] DFA33_transitionS = {
            "\3\2\1\uffff\21\2\1\1\21\2\1\uffff\4\2\11\uffff\53\2\10\uffff"+
            "\2\2\7\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA33_eot = DFA.unpackEncodedString(DFA33_eotS);
    static final short[] DFA33_eof = DFA.unpackEncodedString(DFA33_eofS);
    static final char[] DFA33_min = DFA.unpackEncodedStringToUnsignedChars(DFA33_minS);
    static final char[] DFA33_max = DFA.unpackEncodedStringToUnsignedChars(DFA33_maxS);
    static final short[] DFA33_accept = DFA.unpackEncodedString(DFA33_acceptS);
    static final short[] DFA33_special = DFA.unpackEncodedString(DFA33_specialS);
    static final short[][] DFA33_transition;

    static {
        int numStates = DFA33_transitionS.length;
        DFA33_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA33_transition[i] = DFA.unpackEncodedString(DFA33_transitionS[i]);
        }
    }

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = DFA33_eot;
            this.eof = DFA33_eof;
            this.min = DFA33_min;
            this.max = DFA33_max;
            this.accept = DFA33_accept;
            this.special = DFA33_special;
            this.transition = DFA33_transition;
        }
        public String getDescription() {
            return "192:2: ( QUESTION )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_1 = input.LA(1);

                         
                        int index33_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred59_Vala()) ) {s = 36;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index33_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA39_eotS =
        "\35\uffff";
    static final String DFA39_eofS =
        "\35\uffff";
    static final String DFA39_minS =
        "\1\5\10\uffff\1\0\23\uffff";
    static final String DFA39_maxS =
        "\1\162\10\uffff\1\0\23\uffff";
    static final String DFA39_acceptS =
        "\1\uffff\1\1\10\uffff\1\2\22\uffff";
    static final String DFA39_specialS =
        "\11\uffff\1\0\23\uffff}>";
    static final String[] DFA39_transitionS = {
            "\1\12\3\uffff\2\12\2\uffff\1\11\21\uffff\1\12\2\uffff\1\1\6"+
            "\uffff\3\12\1\1\4\12\1\uffff\2\1\2\uffff\4\1\53\12\1\uffff\10"+
            "\12\1\uffff\1\12\1\uffff\2\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA39_eot = DFA.unpackEncodedString(DFA39_eotS);
    static final short[] DFA39_eof = DFA.unpackEncodedString(DFA39_eofS);
    static final char[] DFA39_min = DFA.unpackEncodedStringToUnsignedChars(DFA39_minS);
    static final char[] DFA39_max = DFA.unpackEncodedStringToUnsignedChars(DFA39_maxS);
    static final short[] DFA39_accept = DFA.unpackEncodedString(DFA39_acceptS);
    static final short[] DFA39_special = DFA.unpackEncodedString(DFA39_specialS);
    static final short[][] DFA39_transition;

    static {
        int numStates = DFA39_transitionS.length;
        DFA39_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA39_transition[i] = DFA.unpackEncodedString(DFA39_transitionS[i]);
        }
    }

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = DFA39_eot;
            this.eof = DFA39_eof;
            this.min = DFA39_min;
            this.max = DFA39_max;
            this.accept = DFA39_accept;
            this.special = DFA39_special;
            this.transition = DFA39_transition;
        }
        public String getDescription() {
            return "223:1: unary_expression : ( ( unary_operator unary_expression ) | primary_expression );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA39_9 = input.LA(1);

                         
                        int index39_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_Vala()) ) {s = 1;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index39_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 39, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA40_eotS =
        "\14\uffff";
    static final String DFA40_eofS =
        "\14\uffff";
    static final String DFA40_minS =
        "\1\15\10\uffff\1\11\2\uffff";
    static final String DFA40_maxS =
        "\1\71\10\uffff\1\66\2\uffff";
    static final String DFA40_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12";
    static final String DFA40_specialS =
        "\14\uffff}>";
    static final String[] DFA40_transitionS = {
            "\1\11\24\uffff\1\10\11\uffff\1\7\5\uffff\1\1\1\2\2\uffff\1\3"+
            "\1\4\1\5\1\6",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\2\12\40\uffff\1\12\1\uffff\4\12\5\uffff\1\13",
            "",
            ""
    };

    static final short[] DFA40_eot = DFA.unpackEncodedString(DFA40_eotS);
    static final short[] DFA40_eof = DFA.unpackEncodedString(DFA40_eofS);
    static final char[] DFA40_min = DFA.unpackEncodedStringToUnsignedChars(DFA40_minS);
    static final char[] DFA40_max = DFA.unpackEncodedStringToUnsignedChars(DFA40_maxS);
    static final short[] DFA40_accept = DFA.unpackEncodedString(DFA40_acceptS);
    static final short[] DFA40_special = DFA.unpackEncodedString(DFA40_specialS);
    static final short[][] DFA40_transition;

    static {
        int numStates = DFA40_transitionS.length;
        DFA40_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA40_transition[i] = DFA.unpackEncodedString(DFA40_transitionS[i]);
        }
    }

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = DFA40_eot;
            this.eof = DFA40_eof;
            this.min = DFA40_min;
            this.max = DFA40_max;
            this.accept = DFA40_accept;
            this.special = DFA40_special;
            this.transition = DFA40_transition;
        }
        public String getDescription() {
            return "229:1: unary_operator : ( PLUS | MINUS | NOT | BITWISE_NOT | INCREMENT | DECREMENT | MULTIPLY | AND | cast_operator | LPAREN NOT RPAREN );";
        }
    }
    static final String DFA42_eotS =
        "\31\uffff";
    static final String DFA42_eofS =
        "\31\uffff";
    static final String DFA42_minS =
        "\1\5\2\0\14\uffff\4\0\6\uffff";
    static final String DFA42_maxS =
        "\1\162\2\0\14\uffff\4\0\6\uffff";
    static final String DFA42_acceptS =
        "\3\uffff\1\1\6\uffff\1\2\1\3\1\4\1\5\1\6\4\uffff\1\13\1\uffff\1"+
        "\7\1\10\1\11\1\12";
    static final String DFA42_specialS =
        "\1\uffff\1\0\1\1\14\uffff\1\2\1\3\1\4\1\5\6\uffff}>";
    static final String[] DFA42_transitionS = {
            "\1\23\3\uffff\2\23\2\uffff\1\13\21\uffff\1\23\11\uffff\3\23"+
            "\1\uffff\4\23\11\uffff\3\23\2\1\1\2\1\17\1\20\1\21\1\22\41\23"+
            "\1\uffff\7\3\1\12\1\uffff\1\14\1\uffff\1\15\1\16",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA42_eot = DFA.unpackEncodedString(DFA42_eotS);
    static final short[] DFA42_eof = DFA.unpackEncodedString(DFA42_eofS);
    static final char[] DFA42_min = DFA.unpackEncodedStringToUnsignedChars(DFA42_minS);
    static final char[] DFA42_max = DFA.unpackEncodedStringToUnsignedChars(DFA42_maxS);
    static final short[] DFA42_accept = DFA.unpackEncodedString(DFA42_acceptS);
    static final short[] DFA42_special = DFA.unpackEncodedString(DFA42_specialS);
    static final short[][] DFA42_transition;

    static {
        int numStates = DFA42_transitionS.length;
        DFA42_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA42_transition[i] = DFA.unpackEncodedString(DFA42_transitionS[i]);
        }
    }

    class DFA42 extends DFA {

        public DFA42(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 42;
            this.eot = DFA42_eot;
            this.eof = DFA42_eof;
            this.min = DFA42_min;
            this.max = DFA42_max;
            this.accept = DFA42_accept;
            this.special = DFA42_special;
            this.transition = DFA42_transition;
        }
        public String getDescription() {
            return "251:2: ( literal | initializer | tuple | template | this_access | base_access | object_or_array_creation_expression | yield_expression | sizeof_expression | typeof_expression | simple_name )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA42_1 = input.LA(1);

                         
                        int index42_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_Vala()) ) {s = 3;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index42_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA42_2 = input.LA(1);

                         
                        int index42_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_Vala()) ) {s = 3;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index42_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA42_15 = input.LA(1);

                         
                        int index42_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_Vala()) ) {s = 21;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index42_15);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA42_16 = input.LA(1);

                         
                        int index42_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_Vala()) ) {s = 22;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index42_16);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA42_17 = input.LA(1);

                         
                        int index42_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_Vala()) ) {s = 23;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index42_17);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA42_18 = input.LA(1);

                         
                        int index42_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_Vala()) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index42_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 42, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA43_eotS =
        "\53\uffff";
    static final String DFA43_eofS =
        "\1\1\52\uffff";
    static final String DFA43_minS =
        "\1\5\32\uffff\1\0\17\uffff";
    static final String DFA43_maxS =
        "\1\170\32\uffff\1\0\17\uffff";
    static final String DFA43_acceptS =
        "\1\uffff\1\7\43\uffff\1\1\1\2\1\3\1\5\1\6\1\4";
    static final String DFA43_specialS =
        "\33\uffff\1\0\17\uffff}>";
    static final String[] DFA43_transitionS = {
            "\3\1\1\45\2\1\1\33\1\1\1\47\50\1\2\uffff\1\50\1\51\53\1\1\46"+
            "\10\uffff\1\1\11\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA43_eot = DFA.unpackEncodedString(DFA43_eotS);
    static final short[] DFA43_eof = DFA.unpackEncodedString(DFA43_eofS);
    static final char[] DFA43_min = DFA.unpackEncodedStringToUnsignedChars(DFA43_minS);
    static final char[] DFA43_max = DFA.unpackEncodedStringToUnsignedChars(DFA43_maxS);
    static final short[] DFA43_accept = DFA.unpackEncodedString(DFA43_acceptS);
    static final short[] DFA43_special = DFA.unpackEncodedString(DFA43_specialS);
    static final short[][] DFA43_transition;

    static {
        int numStates = DFA43_transitionS.length;
        DFA43_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA43_transition[i] = DFA.unpackEncodedString(DFA43_transitionS[i]);
        }
    }

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = DFA43_eot;
            this.eof = DFA43_eof;
            this.min = DFA43_min;
            this.max = DFA43_max;
            this.accept = DFA43_accept;
            this.special = DFA43_special;
            this.transition = DFA43_transition;
        }
        public String getDescription() {
            return "()* loopback of 264:2: ( member_access | pointer_member_access | method_call | element_access | post_increment_expression | post_decrement_expression )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA43_27 = input.LA(1);

                         
                        int index43_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_Vala()) ) {s = 42;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_27);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 43, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA44_eotS =
        "\55\uffff";
    static final String DFA44_eofS =
        "\1\2\54\uffff";
    static final String DFA44_minS =
        "\1\5\1\0\53\uffff";
    static final String DFA44_maxS =
        "\1\170\1\0\53\uffff";
    static final String DFA44_acceptS =
        "\2\uffff\1\2\51\uffff\1\1";
    static final String DFA44_specialS =
        "\1\uffff\1\0\53\uffff}>";
    static final String[] DFA44_transitionS = {
            "\40\2\1\1\20\2\2\uffff\56\2\7\uffff\2\2\11\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA44_eot = DFA.unpackEncodedString(DFA44_eotS);
    static final short[] DFA44_eof = DFA.unpackEncodedString(DFA44_eofS);
    static final char[] DFA44_min = DFA.unpackEncodedStringToUnsignedChars(DFA44_minS);
    static final char[] DFA44_max = DFA.unpackEncodedStringToUnsignedChars(DFA44_maxS);
    static final short[] DFA44_accept = DFA.unpackEncodedString(DFA44_acceptS);
    static final short[] DFA44_special = DFA.unpackEncodedString(DFA44_specialS);
    static final short[][] DFA44_transition;

    static {
        int numStates = DFA44_transitionS.length;
        DFA44_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA44_transition[i] = DFA.unpackEncodedString(DFA44_transitionS[i]);
        }
    }

    class DFA44 extends DFA {

        public DFA44(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 44;
            this.eot = DFA44_eot;
            this.eof = DFA44_eof;
            this.min = DFA44_min;
            this.max = DFA44_max;
            this.accept = DFA44_accept;
            this.special = DFA44_special;
            this.transition = DFA44_transition;
        }
        public String getDescription() {
            return "277:2: ( type_arguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA44_1 = input.LA(1);

                         
                        int index44_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_Vala()) ) {s = 44;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index44_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 44, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA46_eotS =
        "\54\uffff";
    static final String DFA46_eofS =
        "\1\2\53\uffff";
    static final String DFA46_minS =
        "\1\5\1\0\52\uffff";
    static final String DFA46_maxS =
        "\1\170\1\0\52\uffff";
    static final String DFA46_acceptS =
        "\2\uffff\1\2\50\uffff\1\1";
    static final String DFA46_specialS =
        "\1\uffff\1\0\52\uffff}>";
    static final String[] DFA46_transitionS = {
            "\40\2\1\1\20\2\2\uffff\56\2\10\uffff\1\2\11\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA46_eot = DFA.unpackEncodedString(DFA46_eotS);
    static final short[] DFA46_eof = DFA.unpackEncodedString(DFA46_eofS);
    static final char[] DFA46_min = DFA.unpackEncodedStringToUnsignedChars(DFA46_minS);
    static final char[] DFA46_max = DFA.unpackEncodedStringToUnsignedChars(DFA46_maxS);
    static final short[] DFA46_accept = DFA.unpackEncodedString(DFA46_acceptS);
    static final short[] DFA46_special = DFA.unpackEncodedString(DFA46_specialS);
    static final short[][] DFA46_transition;

    static {
        int numStates = DFA46_transitionS.length;
        DFA46_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA46_transition[i] = DFA.unpackEncodedString(DFA46_transitionS[i]);
        }
    }

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = DFA46_eot;
            this.eof = DFA46_eof;
            this.min = DFA46_min;
            this.max = DFA46_max;
            this.accept = DFA46_accept;
            this.special = DFA46_special;
            this.transition = DFA46_transition;
        }
        public String getDescription() {
            return "357:2: ( type_arguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA46_1 = input.LA(1);

                         
                        int index46_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_Vala()) ) {s = 43;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index46_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 46, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA51_eotS =
        "\14\uffff";
    static final String DFA51_eofS =
        "\1\uffff\3\4\1\uffff\6\4\1\uffff";
    static final String DFA51_minS =
        "\3\5\1\6\1\uffff\1\6\2\5\3\6\1\uffff";
    static final String DFA51_maxS =
        "\1\162\3\163\1\uffff\6\163\1\uffff";
    static final String DFA51_acceptS =
        "\4\uffff\1\2\6\uffff\1\1";
    static final String DFA51_specialS =
        "\14\uffff}>";
    static final String[] DFA51_transitionS = {
            "\1\12\3\uffff\1\4\1\12\2\uffff\1\4\21\uffff\1\12\2\uffff\1\4"+
            "\6\uffff\3\12\1\4\4\12\1\uffff\2\4\2\uffff\4\4\3\12\2\3\1\5"+
            "\1\6\1\7\1\10\1\11\21\12\1\2\1\1\16\12\1\uffff\10\4\1\uffff"+
            "\1\4\1\uffff\2\4",
            "\2\4\1\uffff\4\4\1\uffff\16\4\1\13\124\4\1\uffff\3\4",
            "\2\4\1\uffff\4\4\1\uffff\16\4\1\13\124\4\1\uffff\3\4",
            "\1\4\1\uffff\1\4\2\uffff\1\4\1\uffff\16\4\1\13\17\4\1\uffff"+
            "\1\4\4\uffff\5\4\2\uffff\2\4\53\uffff\1\4\10\uffff\1\4\4\uffff"+
            "\1\4",
            "",
            "\1\4\1\uffff\1\4\2\uffff\1\4\1\uffff\16\4\1\13\17\4\1\uffff"+
            "\1\4\4\uffff\5\4\2\uffff\2\4\53\uffff\1\4\10\uffff\1\4\4\uffff"+
            "\1\4",
            "\2\4\1\uffff\4\4\1\uffff\16\4\1\13\32\4\2\uffff\56\4\10\uffff"+
            "\1\4\4\uffff\1\4",
            "\2\4\1\uffff\4\4\1\uffff\16\4\1\13\32\4\2\uffff\56\4\10\uffff"+
            "\1\4\3\uffff\2\4",
            "\1\4\1\uffff\1\4\2\uffff\1\4\1\uffff\16\4\1\13\17\4\1\uffff"+
            "\1\4\4\uffff\5\4\2\uffff\2\4\53\uffff\1\4\10\uffff\1\4\4\uffff"+
            "\1\4",
            "\1\4\1\uffff\1\4\2\uffff\1\4\1\uffff\16\4\1\13\17\4\1\uffff"+
            "\1\4\4\uffff\5\4\2\uffff\2\4\53\uffff\1\4\10\uffff\1\4\4\uffff"+
            "\1\4",
            "\1\4\1\uffff\1\4\2\uffff\1\4\1\uffff\16\4\1\13\17\4\1\uffff"+
            "\1\4\4\uffff\5\4\2\uffff\2\4\53\uffff\1\4\10\uffff\1\4\4\uffff"+
            "\1\4",
            ""
    };

    static final short[] DFA51_eot = DFA.unpackEncodedString(DFA51_eotS);
    static final short[] DFA51_eof = DFA.unpackEncodedString(DFA51_eofS);
    static final char[] DFA51_min = DFA.unpackEncodedStringToUnsignedChars(DFA51_minS);
    static final char[] DFA51_max = DFA.unpackEncodedStringToUnsignedChars(DFA51_maxS);
    static final short[] DFA51_accept = DFA.unpackEncodedString(DFA51_acceptS);
    static final short[] DFA51_special = DFA.unpackEncodedString(DFA51_specialS);
    static final short[][] DFA51_transition;

    static {
        int numStates = DFA51_transitionS.length;
        DFA51_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA51_transition[i] = DFA.unpackEncodedString(DFA51_transitionS[i]);
        }
    }

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = DFA51_eot;
            this.eof = DFA51_eof;
            this.min = DFA51_min;
            this.max = DFA51_max;
            this.accept = DFA51_accept;
            this.special = DFA51_special;
            this.transition = DFA51_transition;
        }
        public String getDescription() {
            return "420:2: ( identifier COLON )?";
        }
    }
    static final String DFA52_eotS =
        "\41\uffff";
    static final String DFA52_eofS =
        "\41\uffff";
    static final String DFA52_minS =
        "\1\5\2\0\36\uffff";
    static final String DFA52_maxS =
        "\1\162\2\0\36\uffff";
    static final String DFA52_acceptS =
        "\3\uffff\1\3\33\uffff\1\1\1\2";
    static final String DFA52_specialS =
        "\1\uffff\1\0\1\1\36\uffff}>";
    static final String[] DFA52_transitionS = {
            "\1\3\3\uffff\2\3\2\uffff\1\3\21\uffff\1\3\2\uffff\1\3\6\uffff"+
            "\10\3\1\uffff\2\3\2\uffff\37\3\1\2\1\1\16\3\1\uffff\10\3\1\uffff"+
            "\1\3\1\uffff\2\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA52_eot = DFA.unpackEncodedString(DFA52_eotS);
    static final short[] DFA52_eof = DFA.unpackEncodedString(DFA52_eofS);
    static final char[] DFA52_min = DFA.unpackEncodedStringToUnsignedChars(DFA52_minS);
    static final char[] DFA52_max = DFA.unpackEncodedStringToUnsignedChars(DFA52_maxS);
    static final short[] DFA52_accept = DFA.unpackEncodedString(DFA52_acceptS);
    static final short[] DFA52_special = DFA.unpackEncodedString(DFA52_specialS);
    static final short[][] DFA52_transition;

    static {
        int numStates = DFA52_transitionS.length;
        DFA52_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA52_transition[i] = DFA.unpackEncodedString(DFA52_transitionS[i]);
        }
    }

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = DFA52_eot;
            this.eof = DFA52_eof;
            this.min = DFA52_min;
            this.max = DFA52_max;
            this.accept = DFA52_accept;
            this.special = DFA52_special;
            this.transition = DFA52_transition;
        }
        public String getDescription() {
            return "424:2: ( ( KW_REF ) | ( KW_OUT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA52_1 = input.LA(1);

                         
                        int index52_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_Vala()) ) {s = 31;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index52_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA52_2 = input.LA(1);

                         
                        int index52_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred165_Vala()) ) {s = 32;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index52_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 52, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA55_eotS =
        "\54\uffff";
    static final String DFA55_eofS =
        "\1\2\53\uffff";
    static final String DFA55_minS =
        "\1\5\1\0\52\uffff";
    static final String DFA55_maxS =
        "\1\170\1\0\52\uffff";
    static final String DFA55_acceptS =
        "\2\uffff\1\2\50\uffff\1\1";
    static final String DFA55_specialS =
        "\1\uffff\1\0\52\uffff}>";
    static final String[] DFA55_transitionS = {
            "\10\2\1\1\50\2\2\uffff\56\2\7\uffff\2\2\11\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA55_eot = DFA.unpackEncodedString(DFA55_eotS);
    static final short[] DFA55_eof = DFA.unpackEncodedString(DFA55_eofS);
    static final char[] DFA55_min = DFA.unpackEncodedStringToUnsignedChars(DFA55_minS);
    static final char[] DFA55_max = DFA.unpackEncodedStringToUnsignedChars(DFA55_maxS);
    static final short[] DFA55_accept = DFA.unpackEncodedString(DFA55_acceptS);
    static final short[] DFA55_special = DFA.unpackEncodedString(DFA55_specialS);
    static final short[][] DFA55_transition;

    static {
        int numStates = DFA55_transitionS.length;
        DFA55_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA55_transition[i] = DFA.unpackEncodedString(DFA55_transitionS[i]);
        }
    }

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = DFA55_eot;
            this.eof = DFA55_eof;
            this.min = DFA55_min;
            this.max = DFA55_max;
            this.accept = DFA55_accept;
            this.special = DFA55_special;
            this.transition = DFA55_transition;
        }
        public String getDescription() {
            return "453:2: ( object_creation_expression | array_creation_expression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_1 = input.LA(1);

                         
                        int index55_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_Vala()) ) {s = 43;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index55_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA61_eotS =
        "\54\uffff";
    static final String DFA61_eofS =
        "\1\2\53\uffff";
    static final String DFA61_minS =
        "\1\5\1\0\52\uffff";
    static final String DFA61_maxS =
        "\1\170\1\0\52\uffff";
    static final String DFA61_acceptS =
        "\2\uffff\1\2\50\uffff\1\1";
    static final String DFA61_specialS =
        "\1\uffff\1\0\52\uffff}>";
    static final String[] DFA61_transitionS = {
            "\6\2\1\1\52\2\2\uffff\56\2\7\uffff\2\2\11\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA61_eot = DFA.unpackEncodedString(DFA61_eotS);
    static final short[] DFA61_eof = DFA.unpackEncodedString(DFA61_eofS);
    static final char[] DFA61_min = DFA.unpackEncodedStringToUnsignedChars(DFA61_minS);
    static final char[] DFA61_max = DFA.unpackEncodedStringToUnsignedChars(DFA61_maxS);
    static final short[] DFA61_accept = DFA.unpackEncodedString(DFA61_acceptS);
    static final short[] DFA61_special = DFA.unpackEncodedString(DFA61_specialS);
    static final short[][] DFA61_transition;

    static {
        int numStates = DFA61_transitionS.length;
        DFA61_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA61_transition[i] = DFA.unpackEncodedString(DFA61_transitionS[i]);
        }
    }

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = DFA61_eot;
            this.eof = DFA61_eof;
            this.min = DFA61_min;
            this.max = DFA61_max;
            this.accept = DFA61_accept;
            this.special = DFA61_special;
            this.transition = DFA61_transition;
        }
        public String getDescription() {
            return "481:2: ( LBRACKET ( array_size )? RBRACKET )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_1 = input.LA(1);

                         
                        int index61_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_Vala()) ) {s = 43;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index61_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA65_eotS =
        "\55\uffff";
    static final String DFA65_eofS =
        "\1\2\54\uffff";
    static final String DFA65_minS =
        "\1\5\1\0\53\uffff";
    static final String DFA65_maxS =
        "\1\170\1\0\53\uffff";
    static final String DFA65_acceptS =
        "\2\uffff\1\2\51\uffff\1\1";
    static final String DFA65_specialS =
        "\1\uffff\1\0\53\uffff}>";
    static final String[] DFA65_transitionS = {
            "\40\2\1\1\20\2\2\uffff\56\2\7\uffff\2\2\11\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA65_eot = DFA.unpackEncodedString(DFA65_eotS);
    static final short[] DFA65_eof = DFA.unpackEncodedString(DFA65_eofS);
    static final char[] DFA65_min = DFA.unpackEncodedStringToUnsignedChars(DFA65_minS);
    static final char[] DFA65_max = DFA.unpackEncodedStringToUnsignedChars(DFA65_maxS);
    static final short[] DFA65_accept = DFA.unpackEncodedString(DFA65_acceptS);
    static final short[] DFA65_special = DFA.unpackEncodedString(DFA65_specialS);
    static final short[][] DFA65_transition;

    static {
        int numStates = DFA65_transitionS.length;
        DFA65_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA65_transition[i] = DFA.unpackEncodedString(DFA65_transitionS[i]);
        }
    }

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = DFA65_eot;
            this.eof = DFA65_eof;
            this.min = DFA65_min;
            this.max = DFA65_max;
            this.accept = DFA65_accept;
            this.special = DFA65_special;
            this.transition = DFA65_transition;
        }
        public String getDescription() {
            return "499:2: ( type_arguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_1 = input.LA(1);

                         
                        int index65_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_Vala()) ) {s = 44;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index65_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA72_eotS =
        "\54\uffff";
    static final String DFA72_eofS =
        "\1\2\53\uffff";
    static final String DFA72_minS =
        "\1\5\1\0\52\uffff";
    static final String DFA72_maxS =
        "\1\170\1\0\52\uffff";
    static final String DFA72_acceptS =
        "\2\uffff\1\2\50\uffff\1\1";
    static final String DFA72_specialS =
        "\1\uffff\1\0\52\uffff}>";
    static final String[] DFA72_transitionS = {
            "\40\2\1\1\20\2\2\uffff\56\2\10\uffff\1\2\11\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA72_eot = DFA.unpackEncodedString(DFA72_eotS);
    static final short[] DFA72_eof = DFA.unpackEncodedString(DFA72_eofS);
    static final char[] DFA72_min = DFA.unpackEncodedStringToUnsignedChars(DFA72_minS);
    static final char[] DFA72_max = DFA.unpackEncodedStringToUnsignedChars(DFA72_maxS);
    static final short[] DFA72_accept = DFA.unpackEncodedString(DFA72_acceptS);
    static final short[] DFA72_special = DFA.unpackEncodedString(DFA72_specialS);
    static final short[][] DFA72_transition;

    static {
        int numStates = DFA72_transitionS.length;
        DFA72_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA72_transition[i] = DFA.unpackEncodedString(DFA72_transitionS[i]);
        }
    }

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = DFA72_eot;
            this.eof = DFA72_eof;
            this.min = DFA72_min;
            this.max = DFA72_max;
            this.accept = DFA72_accept;
            this.special = DFA72_special;
            this.transition = DFA72_transition;
        }
        public String getDescription() {
            return "530:42: ( type_arguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_1 = input.LA(1);

                         
                        int index72_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred185_Vala()) ) {s = 43;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index72_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA76_eotS =
        "\36\uffff";
    static final String DFA76_eofS =
        "\36\uffff";
    static final String DFA76_minS =
        "\1\5\23\uffff\1\0\11\uffff";
    static final String DFA76_maxS =
        "\1\162\23\uffff\1\0\11\uffff";
    static final String DFA76_acceptS =
        "\1\uffff\1\1\33\uffff\1\2";
    static final String DFA76_specialS =
        "\24\uffff\1\0\11\uffff}>";
    static final String[] DFA76_transitionS = {
            "\1\1\3\uffff\2\1\2\uffff\1\1\21\uffff\1\1\2\uffff\1\1\6\uffff"+
            "\10\1\1\uffff\2\1\2\uffff\57\1\1\uffff\7\1\1\24\1\uffff\1\1"+
            "\1\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA76_eot = DFA.unpackEncodedString(DFA76_eotS);
    static final short[] DFA76_eof = DFA.unpackEncodedString(DFA76_eofS);
    static final char[] DFA76_min = DFA.unpackEncodedStringToUnsignedChars(DFA76_minS);
    static final char[] DFA76_max = DFA.unpackEncodedStringToUnsignedChars(DFA76_maxS);
    static final short[] DFA76_accept = DFA.unpackEncodedString(DFA76_acceptS);
    static final short[] DFA76_special = DFA.unpackEncodedString(DFA76_specialS);
    static final short[][] DFA76_transition;

    static {
        int numStates = DFA76_transitionS.length;
        DFA76_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA76_transition[i] = DFA.unpackEncodedString(DFA76_transitionS[i]);
        }
    }

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = DFA76_eot;
            this.eof = DFA76_eof;
            this.min = DFA76_min;
            this.max = DFA76_max;
            this.accept = DFA76_accept;
            this.special = DFA76_special;
            this.transition = DFA76_transition;
        }
        public String getDescription() {
            return "545:1: lambda_expression_body : ( expression | block );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_20 = input.LA(1);

                         
                        int index76_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_Vala()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index76_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA88_eotS =
        "\36\uffff";
    static final String DFA88_eofS =
        "\36\uffff";
    static final String DFA88_minS =
        "\1\5\6\0\1\uffff\10\0\1\uffff\2\0\13\uffff";
    static final String DFA88_maxS =
        "\1\170\6\0\1\uffff\10\0\1\uffff\2\0\13\uffff";
    static final String DFA88_acceptS =
        "\7\uffff\1\4\10\uffff\1\10\2\uffff\1\14\1\15\1\1\1\2\1\3\1\5\1\6"+
        "\1\7\1\11\1\13\1\12";
    static final String DFA88_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\uffff\1\6\1\7\1\10\1\11\1\12"+
        "\1\13\1\14\1\15\1\uffff\1\16\1\17\13\uffff}>";
    static final String[] DFA88_transitionS = {
            "\1\24\3\uffff\1\14\1\15\24\uffff\1\24\11\uffff\2\24\1\11\1\uffff"+
            "\1\12\3\13\6\uffff\1\23\2\uffff\1\22\5\24\1\10\3\24\1\21\1\3"+
            "\1\4\1\2\1\6\1\16\1\2\2\6\4\1\1\5\21\24\1\17\1\24\22\uffff\1"+
            "\7\1\20",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA88_eot = DFA.unpackEncodedString(DFA88_eotS);
    static final short[] DFA88_eof = DFA.unpackEncodedString(DFA88_eofS);
    static final char[] DFA88_min = DFA.unpackEncodedStringToUnsignedChars(DFA88_minS);
    static final char[] DFA88_max = DFA.unpackEncodedStringToUnsignedChars(DFA88_maxS);
    static final short[] DFA88_accept = DFA.unpackEncodedString(DFA88_acceptS);
    static final short[] DFA88_special = DFA.unpackEncodedString(DFA88_specialS);
    static final short[][] DFA88_transition;

    static {
        int numStates = DFA88_transitionS.length;
        DFA88_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA88_transition[i] = DFA.unpackEncodedString(DFA88_transitionS[i]);
        }
    }

    class DFA88 extends DFA {

        public DFA88(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 88;
            this.eot = DFA88_eot;
            this.eof = DFA88_eof;
            this.min = DFA88_min;
            this.max = DFA88_max;
            this.accept = DFA88_accept;
            this.special = DFA88_special;
            this.transition = DFA88_transition;
        }
        public String getDescription() {
            return "613:2: ( class_declaration | struct_declaration | enum_declaration | delegate_declaration | method_declaration | signal_declaration | field_declaration | constant_declaration | property_declaration | constructor_declaration | creation_method_declaration | destructor_declaration | unknown_chain )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA88_1 = input.LA(1);

                         
                        int index88_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_Vala()) ) {s = 21;}

                        else if ( (synpred217_Vala()) ) {s = 22;}

                        else if ( (synpred218_Vala()) ) {s = 23;}

                        else if ( (synpred219_Vala()) ) {s = 7;}

                        else if ( (synpred220_Vala()) ) {s = 24;}

                        else if ( (synpred221_Vala()) ) {s = 25;}

                        else if ( (synpred222_Vala()) ) {s = 26;}

                        else if ( (synpred223_Vala()) ) {s = 16;}

                        else if ( (synpred224_Vala()) ) {s = 27;}

                        else if ( (synpred226_Vala()) ) {s = 28;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA88_2 = input.LA(1);

                         
                        int index88_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_Vala()) ) {s = 21;}

                        else if ( (synpred217_Vala()) ) {s = 22;}

                        else if ( (synpred218_Vala()) ) {s = 23;}

                        else if ( (synpred219_Vala()) ) {s = 7;}

                        else if ( (synpred220_Vala()) ) {s = 24;}

                        else if ( (synpred221_Vala()) ) {s = 25;}

                        else if ( (synpred222_Vala()) ) {s = 26;}

                        else if ( (synpred223_Vala()) ) {s = 16;}

                        else if ( (synpred224_Vala()) ) {s = 27;}

                        else if ( (synpred225_Vala()) ) {s = 29;}

                        else if ( (synpred226_Vala()) ) {s = 28;}

                        else if ( (synpred227_Vala()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA88_3 = input.LA(1);

                         
                        int index88_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_Vala()) ) {s = 21;}

                        else if ( (synpred219_Vala()) ) {s = 7;}

                        else if ( (synpred220_Vala()) ) {s = 24;}

                        else if ( (synpred222_Vala()) ) {s = 26;}

                        else if ( (synpred223_Vala()) ) {s = 16;}

                        else if ( (synpred224_Vala()) ) {s = 27;}

                        else if ( (synpred225_Vala()) ) {s = 29;}

                        else if ( (synpred226_Vala()) ) {s = 28;}

                        else if ( (synpred227_Vala()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA88_4 = input.LA(1);

                         
                        int index88_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred217_Vala()) ) {s = 22;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA88_5 = input.LA(1);

                         
                        int index88_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred218_Vala()) ) {s = 23;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA88_6 = input.LA(1);

                         
                        int index88_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred219_Vala()) ) {s = 7;}

                        else if ( (synpred220_Vala()) ) {s = 24;}

                        else if ( (synpred221_Vala()) ) {s = 25;}

                        else if ( (synpred222_Vala()) ) {s = 26;}

                        else if ( (synpred223_Vala()) ) {s = 16;}

                        else if ( (synpred224_Vala()) ) {s = 27;}

                        else if ( (synpred225_Vala()) ) {s = 29;}

                        else if ( (synpred226_Vala()) ) {s = 28;}

                        else if ( (synpred227_Vala()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA88_8 = input.LA(1);

                         
                        int index88_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_Vala()) ) {s = 24;}

                        else if ( (synpred221_Vala()) ) {s = 25;}

                        else if ( (synpred222_Vala()) ) {s = 26;}

                        else if ( (synpred223_Vala()) ) {s = 16;}

                        else if ( (synpred224_Vala()) ) {s = 27;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA88_9 = input.LA(1);

                         
                        int index88_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_Vala()) ) {s = 24;}

                        else if ( (synpred222_Vala()) ) {s = 26;}

                        else if ( (synpred224_Vala()) ) {s = 27;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA88_10 = input.LA(1);

                         
                        int index88_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_Vala()) ) {s = 24;}

                        else if ( (synpred222_Vala()) ) {s = 26;}

                        else if ( (synpred224_Vala()) ) {s = 27;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA88_11 = input.LA(1);

                         
                        int index88_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_Vala()) ) {s = 24;}

                        else if ( (synpred222_Vala()) ) {s = 26;}

                        else if ( (synpred224_Vala()) ) {s = 27;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA88_12 = input.LA(1);

                         
                        int index88_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_Vala()) ) {s = 24;}

                        else if ( (synpred222_Vala()) ) {s = 26;}

                        else if ( (synpred224_Vala()) ) {s = 27;}

                        else if ( (synpred226_Vala()) ) {s = 28;}

                         
                        input.seek(index88_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA88_13 = input.LA(1);

                         
                        int index88_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_Vala()) ) {s = 24;}

                        else if ( (synpred222_Vala()) ) {s = 26;}

                        else if ( (synpred224_Vala()) ) {s = 27;}

                        else if ( (synpred226_Vala()) ) {s = 28;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA88_14 = input.LA(1);

                         
                        int index88_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred216_Vala()) ) {s = 21;}

                        else if ( (synpred217_Vala()) ) {s = 22;}

                        else if ( (synpred218_Vala()) ) {s = 23;}

                        else if ( (synpred219_Vala()) ) {s = 7;}

                        else if ( (synpred220_Vala()) ) {s = 24;}

                        else if ( (synpred222_Vala()) ) {s = 26;}

                        else if ( (synpred223_Vala()) ) {s = 16;}

                        else if ( (synpred224_Vala()) ) {s = 27;}

                        else if ( (synpred225_Vala()) ) {s = 29;}

                        else if ( (synpred226_Vala()) ) {s = 28;}

                        else if ( (synpred227_Vala()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA88_15 = input.LA(1);

                         
                        int index88_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred221_Vala()) ) {s = 25;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA88_17 = input.LA(1);

                         
                        int index88_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred219_Vala()) ) {s = 7;}

                        else if ( (synpred220_Vala()) ) {s = 24;}

                        else if ( (synpred221_Vala()) ) {s = 25;}

                        else if ( (synpred222_Vala()) ) {s = 26;}

                        else if ( (synpred223_Vala()) ) {s = 16;}

                        else if ( (synpred225_Vala()) ) {s = 29;}

                        else if ( (synpred226_Vala()) ) {s = 28;}

                        else if ( (synpred227_Vala()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_17);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA88_18 = input.LA(1);

                         
                        int index88_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred225_Vala()) ) {s = 29;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index88_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 88, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA95_eotS =
        "\14\uffff";
    static final String DFA95_eofS =
        "\14\uffff";
    static final String DFA95_minS =
        "\1\5\6\0\1\uffff\1\0\1\uffff\1\0\1\uffff";
    static final String DFA95_maxS =
        "\1\170\6\0\1\uffff\1\0\1\uffff\1\0\1\uffff";
    static final String DFA95_acceptS =
        "\7\uffff\1\1\3\uffff\1\2";
    static final String DFA95_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\uffff\1\6\1\uffff\1\7\1\uffff}>";
    static final String[] DFA95_transitionS = {
            "\1\12\3\uffff\1\7\1\10\1\1\23\uffff\1\12\11\uffff\2\12\1\4\1"+
            "\uffff\1\5\3\6\11\uffff\6\12\1\3\3\12\2\3\1\12\6\3\4\2\24\12"+
            "\23\uffff\1\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            ""
    };

    static final short[] DFA95_eot = DFA.unpackEncodedString(DFA95_eotS);
    static final short[] DFA95_eof = DFA.unpackEncodedString(DFA95_eofS);
    static final char[] DFA95_min = DFA.unpackEncodedStringToUnsignedChars(DFA95_minS);
    static final char[] DFA95_max = DFA.unpackEncodedStringToUnsignedChars(DFA95_maxS);
    static final short[] DFA95_accept = DFA.unpackEncodedString(DFA95_acceptS);
    static final short[] DFA95_special = DFA.unpackEncodedString(DFA95_specialS);
    static final short[][] DFA95_transition;

    static {
        int numStates = DFA95_transitionS.length;
        DFA95_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA95_transition[i] = DFA.unpackEncodedString(DFA95_transitionS[i]);
        }
    }

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = DFA95_eot;
            this.eof = DFA95_eof;
            this.min = DFA95_min;
            this.max = DFA95_max;
            this.accept = DFA95_accept;
            this.special = DFA95_special;
            this.transition = DFA95_transition;
        }
        public String getDescription() {
            return "653:1: enum_member : ( ( ( attributes )? ( method_declaration | constant_declaration | unknown_chain ) ) | ( enum_values ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_1 = input.LA(1);

                         
                        int index95_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_Vala()) ) {s = 7;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index95_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA95_2 = input.LA(1);

                         
                        int index95_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_Vala()) ) {s = 7;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index95_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA95_3 = input.LA(1);

                         
                        int index95_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_Vala()) ) {s = 7;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index95_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA95_4 = input.LA(1);

                         
                        int index95_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_Vala()) ) {s = 7;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index95_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA95_5 = input.LA(1);

                         
                        int index95_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_Vala()) ) {s = 7;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index95_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA95_6 = input.LA(1);

                         
                        int index95_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_Vala()) ) {s = 7;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index95_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA95_8 = input.LA(1);

                         
                        int index95_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_Vala()) ) {s = 7;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index95_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA95_10 = input.LA(1);

                         
                        int index95_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_Vala()) ) {s = 7;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index95_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA94_eotS =
        "\13\uffff";
    static final String DFA94_eofS =
        "\13\uffff";
    static final String DFA94_minS =
        "\6\5\1\uffff\1\5\2\uffff\1\5";
    static final String DFA94_maxS =
        "\3\170\3\144\1\uffff\1\144\2\uffff\1\144";
    static final String DFA94_acceptS =
        "\6\uffff\1\1\1\uffff\1\2\1\3\1\uffff";
    static final String DFA94_specialS =
        "\13\uffff}>";
    static final String[] DFA94_transitionS = {
            "\1\11\3\uffff\1\6\1\7\24\uffff\1\11\11\uffff\2\11\1\3\1\uffff"+
            "\1\4\3\5\11\uffff\6\11\1\2\3\11\2\2\1\11\6\2\4\1\24\11\23\uffff"+
            "\1\10",
            "\1\11\1\uffff\1\11\1\uffff\1\6\1\7\24\uffff\1\11\11\uffff\2"+
            "\11\1\3\1\uffff\1\4\3\5\11\uffff\6\11\1\2\3\11\2\2\1\11\6\2"+
            "\30\11\23\uffff\1\10",
            "\1\11\1\uffff\1\11\1\uffff\1\6\1\7\24\uffff\1\11\11\uffff\2"+
            "\11\1\3\1\uffff\1\4\3\5\11\uffff\6\11\1\2\3\11\2\2\1\11\6\2"+
            "\30\11\23\uffff\1\10",
            "\1\12\1\uffff\1\11\2\uffff\1\12\24\uffff\1\12\11\uffff\3\12"+
            "\1\6\4\12\11\uffff\53\12",
            "\1\11\1\uffff\1\11\1\uffff\1\6\1\7\24\uffff\1\11\11\uffff\3"+
            "\11\1\uffff\1\11\3\5\11\uffff\53\11",
            "\1\11\1\uffff\1\11\1\uffff\1\6\1\7\24\uffff\1\11\11\uffff\3"+
            "\11\1\uffff\4\11\11\uffff\53\11",
            "",
            "\1\12\1\uffff\1\11\1\6\1\uffff\1\12\1\6\16\uffff\1\6\4\uffff"+
            "\1\12\5\uffff\1\6\3\uffff\3\12\1\6\4\12\11\uffff\53\12",
            "",
            "",
            "\1\11\1\uffff\1\11\2\uffff\1\11\2\uffff\1\6\21\uffff\1\11\5"+
            "\uffff\1\6\3\uffff\3\11\1\uffff\4\11\11\uffff\53\11"
    };

    static final short[] DFA94_eot = DFA.unpackEncodedString(DFA94_eotS);
    static final short[] DFA94_eof = DFA.unpackEncodedString(DFA94_eofS);
    static final char[] DFA94_min = DFA.unpackEncodedStringToUnsignedChars(DFA94_minS);
    static final char[] DFA94_max = DFA.unpackEncodedStringToUnsignedChars(DFA94_maxS);
    static final short[] DFA94_accept = DFA.unpackEncodedString(DFA94_acceptS);
    static final short[] DFA94_special = DFA.unpackEncodedString(DFA94_specialS);
    static final short[][] DFA94_transition;

    static {
        int numStates = DFA94_transitionS.length;
        DFA94_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA94_transition[i] = DFA.unpackEncodedString(DFA94_transitionS[i]);
        }
    }

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = DFA94_eot;
            this.eof = DFA94_eof;
            this.min = DFA94_min;
            this.max = DFA94_max;
            this.accept = DFA94_accept;
            this.special = DFA94_special;
            this.transition = DFA94_transition;
        }
        public String getDescription() {
            return "657:3: ( method_declaration | constant_declaration | unknown_chain )";
        }
    }
    static final String DFA96_eotS =
        "\20\uffff";
    static final String DFA96_eofS =
        "\1\2\17\uffff";
    static final String DFA96_minS =
        "\1\5\1\0\16\uffff";
    static final String DFA96_maxS =
        "\1\170\1\0\16\uffff";
    static final String DFA96_acceptS =
        "\2\uffff\1\2\14\uffff\1\1";
    static final String DFA96_specialS =
        "\1\uffff\1\0\16\uffff}>";
    static final String[] DFA96_transitionS = {
            "\1\2\1\1\1\2\1\uffff\3\2\23\uffff\1\2\11\uffff\3\2\1\uffff\4"+
            "\2\11\uffff\53\2\11\uffff\1\2\11\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA96_eot = DFA.unpackEncodedString(DFA96_eotS);
    static final short[] DFA96_eof = DFA.unpackEncodedString(DFA96_eofS);
    static final char[] DFA96_min = DFA.unpackEncodedStringToUnsignedChars(DFA96_minS);
    static final char[] DFA96_max = DFA.unpackEncodedStringToUnsignedChars(DFA96_maxS);
    static final short[] DFA96_accept = DFA.unpackEncodedString(DFA96_acceptS);
    static final short[] DFA96_special = DFA.unpackEncodedString(DFA96_specialS);
    static final short[][] DFA96_transition;

    static {
        int numStates = DFA96_transitionS.length;
        DFA96_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA96_transition[i] = DFA.unpackEncodedString(DFA96_transitionS[i]);
        }
    }

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = DFA96_eot;
            this.eof = DFA96_eof;
            this.min = DFA96_min;
            this.max = DFA96_max;
            this.accept = DFA96_accept;
            this.special = DFA96_special;
            this.transition = DFA96_transition;
        }
        public String getDescription() {
            return "()* loopback of 669:2: ( COMMA enum_value )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_1 = input.LA(1);

                         
                        int index96_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_Vala()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index96_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA116_eotS =
        "\26\uffff";
    static final String DFA116_eofS =
        "\26\uffff";
    static final String DFA116_minS =
        "\1\11\3\0\2\uffff\1\0\1\uffff\7\0\2\uffff\1\0\4\uffff";
    static final String DFA116_maxS =
        "\1\170\3\0\2\uffff\1\0\1\uffff\7\0\2\uffff\1\0\4\uffff";
    static final String DFA116_acceptS =
        "\4\uffff\1\2\1\3\1\uffff\1\4\7\uffff\1\6\1\10\1\uffff\1\1\1\5\1"+
        "\7\1\11";
    static final String DFA116_specialS =
        "\1\uffff\1\0\1\1\1\2\2\uffff\1\3\1\uffff\1\4\1\5\1\6\1\7\1\10\1"+
        "\11\1\12\2\uffff\1\13\4\uffff}>";
    static final String[] DFA116_transitionS = {
            "\1\14\1\15\40\uffff\1\11\1\uffff\1\12\3\13\17\uffff\1\10\3\uffff"+
            "\1\21\1\3\1\4\1\2\1\6\1\16\1\2\2\6\4\1\1\5\21\uffff\1\17\23"+
            "\uffff\1\7\1\20",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA116_eot = DFA.unpackEncodedString(DFA116_eotS);
    static final short[] DFA116_eof = DFA.unpackEncodedString(DFA116_eofS);
    static final char[] DFA116_min = DFA.unpackEncodedStringToUnsignedChars(DFA116_minS);
    static final char[] DFA116_max = DFA.unpackEncodedStringToUnsignedChars(DFA116_maxS);
    static final short[] DFA116_accept = DFA.unpackEncodedString(DFA116_acceptS);
    static final short[] DFA116_special = DFA.unpackEncodedString(DFA116_specialS);
    static final short[][] DFA116_transition;

    static {
        int numStates = DFA116_transitionS.length;
        DFA116_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA116_transition[i] = DFA.unpackEncodedString(DFA116_transitionS[i]);
        }
    }

    class DFA116 extends DFA {

        public DFA116(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 116;
            this.eot = DFA116_eot;
            this.eof = DFA116_eof;
            this.min = DFA116_min;
            this.max = DFA116_max;
            this.accept = DFA116_accept;
            this.special = DFA116_special;
            this.transition = DFA116_transition;
        }
        public String getDescription() {
            return "720:2: ( class_declaration | struct_declaration | enum_declaration | delegate_declaration | method_declaration | signal_declaration | field_declaration | constant_declaration | property_declaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA116_1 = input.LA(1);

                         
                        int index116_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_Vala()) ) {s = 18;}

                        else if ( (synpred262_Vala()) ) {s = 4;}

                        else if ( (synpred263_Vala()) ) {s = 5;}

                        else if ( (synpred264_Vala()) ) {s = 7;}

                        else if ( (synpred265_Vala()) ) {s = 19;}

                        else if ( (synpred266_Vala()) ) {s = 15;}

                        else if ( (synpred267_Vala()) ) {s = 20;}

                        else if ( (synpred268_Vala()) ) {s = 16;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index116_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA116_2 = input.LA(1);

                         
                        int index116_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_Vala()) ) {s = 18;}

                        else if ( (synpred262_Vala()) ) {s = 4;}

                        else if ( (synpred263_Vala()) ) {s = 5;}

                        else if ( (synpred264_Vala()) ) {s = 7;}

                        else if ( (synpred265_Vala()) ) {s = 19;}

                        else if ( (synpred266_Vala()) ) {s = 15;}

                        else if ( (synpred267_Vala()) ) {s = 20;}

                        else if ( (synpred268_Vala()) ) {s = 16;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index116_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA116_3 = input.LA(1);

                         
                        int index116_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_Vala()) ) {s = 18;}

                        else if ( (synpred264_Vala()) ) {s = 7;}

                        else if ( (synpred265_Vala()) ) {s = 19;}

                        else if ( (synpred267_Vala()) ) {s = 20;}

                        else if ( (synpred268_Vala()) ) {s = 16;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index116_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA116_6 = input.LA(1);

                         
                        int index116_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_Vala()) ) {s = 7;}

                        else if ( (synpred265_Vala()) ) {s = 19;}

                        else if ( (synpred266_Vala()) ) {s = 15;}

                        else if ( (synpred267_Vala()) ) {s = 20;}

                        else if ( (synpred268_Vala()) ) {s = 16;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index116_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA116_8 = input.LA(1);

                         
                        int index116_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_Vala()) ) {s = 19;}

                        else if ( (synpred266_Vala()) ) {s = 15;}

                        else if ( (synpred267_Vala()) ) {s = 20;}

                        else if ( (synpred268_Vala()) ) {s = 16;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index116_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA116_9 = input.LA(1);

                         
                        int index116_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_Vala()) ) {s = 19;}

                        else if ( (synpred267_Vala()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index116_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA116_10 = input.LA(1);

                         
                        int index116_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_Vala()) ) {s = 19;}

                        else if ( (synpred267_Vala()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index116_10);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA116_11 = input.LA(1);

                         
                        int index116_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_Vala()) ) {s = 19;}

                        else if ( (synpred267_Vala()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index116_11);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA116_12 = input.LA(1);

                         
                        int index116_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_Vala()) ) {s = 19;}

                        else if ( (synpred267_Vala()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index116_12);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA116_13 = input.LA(1);

                         
                        int index116_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_Vala()) ) {s = 19;}

                        else if ( (synpred267_Vala()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index116_13);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA116_14 = input.LA(1);

                         
                        int index116_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_Vala()) ) {s = 18;}

                        else if ( (synpred262_Vala()) ) {s = 4;}

                        else if ( (synpred263_Vala()) ) {s = 5;}

                        else if ( (synpred264_Vala()) ) {s = 7;}

                        else if ( (synpred265_Vala()) ) {s = 19;}

                        else if ( (synpred267_Vala()) ) {s = 20;}

                        else if ( (synpred268_Vala()) ) {s = 16;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index116_14);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA116_17 = input.LA(1);

                         
                        int index116_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_Vala()) ) {s = 7;}

                        else if ( (synpred265_Vala()) ) {s = 19;}

                        else if ( (synpred266_Vala()) ) {s = 15;}

                        else if ( (synpred267_Vala()) ) {s = 20;}

                        else if ( (synpred268_Vala()) ) {s = 16;}

                         
                        input.seek(index116_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 116, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA124_eotS =
        "\20\uffff";
    static final String DFA124_eofS =
        "\20\uffff";
    static final String DFA124_minS =
        "\1\5\7\0\1\uffff\2\0\5\uffff";
    static final String DFA124_maxS =
        "\1\170\7\0\1\uffff\2\0\5\uffff";
    static final String DFA124_acceptS =
        "\10\uffff\1\3\2\uffff\1\6\1\1\1\2\1\4\1\5";
    static final String DFA124_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\uffff\1\7\1\10\5\uffff}>";
    static final String[] DFA124_transitionS = {
            "\1\13\3\uffff\1\6\1\7\24\uffff\1\13\11\uffff\2\13\1\3\1\uffff"+
            "\1\4\3\5\11\uffff\6\13\1\12\3\13\1\11\1\2\1\13\6\2\4\1\24\13"+
            "\23\uffff\1\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA124_eot = DFA.unpackEncodedString(DFA124_eotS);
    static final short[] DFA124_eof = DFA.unpackEncodedString(DFA124_eofS);
    static final char[] DFA124_min = DFA.unpackEncodedStringToUnsignedChars(DFA124_minS);
    static final char[] DFA124_max = DFA.unpackEncodedStringToUnsignedChars(DFA124_maxS);
    static final short[] DFA124_accept = DFA.unpackEncodedString(DFA124_acceptS);
    static final short[] DFA124_special = DFA.unpackEncodedString(DFA124_specialS);
    static final short[][] DFA124_transition;

    static {
        int numStates = DFA124_transitionS.length;
        DFA124_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA124_transition[i] = DFA.unpackEncodedString(DFA124_transitionS[i]);
        }
    }

    class DFA124 extends DFA {

        public DFA124(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 124;
            this.eot = DFA124_eot;
            this.eof = DFA124_eof;
            this.min = DFA124_min;
            this.max = DFA124_max;
            this.accept = DFA124_accept;
            this.special = DFA124_special;
            this.transition = DFA124_transition;
        }
        public String getDescription() {
            return "754:2: ( method_declaration | field_declaration | constant_declaration | property_declaration | creation_method_declaration | unknown_chain )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA124_1 = input.LA(1);

                         
                        int index124_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_Vala()) ) {s = 12;}

                        else if ( (synpred277_Vala()) ) {s = 13;}

                        else if ( (synpred278_Vala()) ) {s = 8;}

                        else if ( (synpred279_Vala()) ) {s = 14;}

                        else if ( (synpred280_Vala()) ) {s = 15;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index124_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA124_2 = input.LA(1);

                         
                        int index124_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_Vala()) ) {s = 12;}

                        else if ( (synpred277_Vala()) ) {s = 13;}

                        else if ( (synpred278_Vala()) ) {s = 8;}

                        else if ( (synpred279_Vala()) ) {s = 14;}

                        else if ( (synpred280_Vala()) ) {s = 15;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index124_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA124_3 = input.LA(1);

                         
                        int index124_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_Vala()) ) {s = 12;}

                        else if ( (synpred277_Vala()) ) {s = 13;}

                        else if ( (synpred279_Vala()) ) {s = 14;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index124_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA124_4 = input.LA(1);

                         
                        int index124_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_Vala()) ) {s = 12;}

                        else if ( (synpred277_Vala()) ) {s = 13;}

                        else if ( (synpred279_Vala()) ) {s = 14;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index124_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA124_5 = input.LA(1);

                         
                        int index124_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_Vala()) ) {s = 12;}

                        else if ( (synpred277_Vala()) ) {s = 13;}

                        else if ( (synpred279_Vala()) ) {s = 14;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index124_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA124_6 = input.LA(1);

                         
                        int index124_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_Vala()) ) {s = 12;}

                        else if ( (synpred277_Vala()) ) {s = 13;}

                        else if ( (synpred279_Vala()) ) {s = 14;}

                        else if ( (synpred280_Vala()) ) {s = 15;}

                         
                        input.seek(index124_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA124_7 = input.LA(1);

                         
                        int index124_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_Vala()) ) {s = 12;}

                        else if ( (synpred277_Vala()) ) {s = 13;}

                        else if ( (synpred279_Vala()) ) {s = 14;}

                        else if ( (synpred280_Vala()) ) {s = 15;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index124_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA124_9 = input.LA(1);

                         
                        int index124_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_Vala()) ) {s = 12;}

                        else if ( (synpred277_Vala()) ) {s = 13;}

                        else if ( (synpred278_Vala()) ) {s = 8;}

                        else if ( (synpred280_Vala()) ) {s = 15;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index124_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA124_10 = input.LA(1);

                         
                        int index124_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred276_Vala()) ) {s = 12;}

                        else if ( (synpred277_Vala()) ) {s = 13;}

                        else if ( (synpred278_Vala()) ) {s = 8;}

                        else if ( (synpred279_Vala()) ) {s = 14;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index124_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 124, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA182_eotS =
        "\73\uffff";
    static final String DFA182_eofS =
        "\73\uffff";
    static final String DFA182_minS =
        "\1\5\1\0\6\uffff\17\0\44\uffff";
    static final String DFA182_maxS =
        "\1\u0080\1\0\6\uffff\17\0\44\uffff";
    static final String DFA182_acceptS =
        "\2\uffff\1\2\1\3\1\4\1\5\1\6\1\7\17\uffff\1\22\30\uffff\1\1\1\10"+
        "\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21";
    static final String DFA182_specialS =
        "\1\uffff\1\0\6\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
        "\1\13\1\14\1\15\1\16\1\17\44\uffff}>";
    static final String[] DFA182_transitionS = {
            "\1\27\1\uffff\1\2\1\uffff\1\25\1\26\2\uffff\1\27\21\uffff\1"+
            "\27\2\uffff\1\27\6\uffff\2\27\1\22\1\27\1\23\3\24\1\uffff\2"+
            "\27\2\uffff\13\27\1\14\26\27\1\16\2\27\1\17\1\20\1\10\1\12\1"+
            "\13\1\11\1\21\1\15\2\27\1\uffff\7\27\1\1\1\uffff\1\27\1\uffff"+
            "\2\27\7\uffff\1\3\1\uffff\1\4\1\uffff\1\5\1\6\1\7",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA182_eot = DFA.unpackEncodedString(DFA182_eotS);
    static final short[] DFA182_eof = DFA.unpackEncodedString(DFA182_eofS);
    static final char[] DFA182_min = DFA.unpackEncodedStringToUnsignedChars(DFA182_minS);
    static final char[] DFA182_max = DFA.unpackEncodedStringToUnsignedChars(DFA182_maxS);
    static final short[] DFA182_accept = DFA.unpackEncodedString(DFA182_acceptS);
    static final short[] DFA182_special = DFA.unpackEncodedString(DFA182_specialS);
    static final short[][] DFA182_transition;

    static {
        int numStates = DFA182_transitionS.length;
        DFA182_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA182_transition[i] = DFA.unpackEncodedString(DFA182_transitionS[i]);
        }
    }

    class DFA182 extends DFA {

        public DFA182(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 182;
            this.eot = DFA182_eot;
            this.eof = DFA182_eof;
            this.min = DFA182_min;
            this.max = DFA182_max;
            this.accept = DFA182_accept;
            this.special = DFA182_special;
            this.transition = DFA182_transition;
        }
        public String getDescription() {
            return "986:1: statement : ( block | SEMICOLON | if_statement | switch_statement | while_statement | do_statement | for_statement | foreach_statement | break_statement | continue_statement | return_statement | yield_statement | throw_statement | try_statement | lock_statement | delete_statement | local_variable_declarations | expression_statement );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA182_1 = input.LA(1);

                         
                        int index182_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred364_Vala()) ) {s = 48;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA182_8 = input.LA(1);

                         
                        int index182_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_Vala()) ) {s = 49;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA182_9 = input.LA(1);

                         
                        int index182_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred372_Vala()) ) {s = 50;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA182_10 = input.LA(1);

                         
                        int index182_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred373_Vala()) ) {s = 51;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA182_11 = input.LA(1);

                         
                        int index182_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred374_Vala()) ) {s = 52;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA182_12 = input.LA(1);

                         
                        int index182_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred375_Vala()) ) {s = 53;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA182_13 = input.LA(1);

                         
                        int index182_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred376_Vala()) ) {s = 54;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA182_14 = input.LA(1);

                         
                        int index182_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred377_Vala()) ) {s = 55;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA182_15 = input.LA(1);

                         
                        int index182_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred378_Vala()) ) {s = 56;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA182_16 = input.LA(1);

                         
                        int index182_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred379_Vala()) ) {s = 57;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA182_17 = input.LA(1);

                         
                        int index182_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred380_Vala()) ) {s = 58;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA182_18 = input.LA(1);

                         
                        int index182_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred380_Vala()) ) {s = 58;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_18);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA182_19 = input.LA(1);

                         
                        int index182_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred380_Vala()) ) {s = 58;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA182_20 = input.LA(1);

                         
                        int index182_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred380_Vala()) ) {s = 58;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA182_21 = input.LA(1);

                         
                        int index182_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred380_Vala()) ) {s = 58;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA182_22 = input.LA(1);

                         
                        int index182_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred380_Vala()) ) {s = 58;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index182_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 182, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA184_eotS =
        "\54\uffff";
    static final String DFA184_eofS =
        "\54\uffff";
    static final String DFA184_minS =
        "\1\5\1\0\52\uffff";
    static final String DFA184_maxS =
        "\1\u0080\1\0\52\uffff";
    static final String DFA184_acceptS =
        "\2\uffff\1\2\50\uffff\1\1";
    static final String DFA184_specialS =
        "\1\uffff\1\0\52\uffff}>";
    static final String[] DFA184_transitionS = {
            "\1\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\21\uffff\1\2\2\uffff"+
            "\1\2\6\uffff\10\2\1\uffff\2\2\2\uffff\57\2\1\uffff\7\2\1\1\1"+
            "\uffff\1\2\1\uffff\2\2\7\uffff\1\2\1\uffff\1\2\1\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA184_eot = DFA.unpackEncodedString(DFA184_eotS);
    static final short[] DFA184_eof = DFA.unpackEncodedString(DFA184_eofS);
    static final char[] DFA184_min = DFA.unpackEncodedStringToUnsignedChars(DFA184_minS);
    static final char[] DFA184_max = DFA.unpackEncodedStringToUnsignedChars(DFA184_maxS);
    static final short[] DFA184_accept = DFA.unpackEncodedString(DFA184_acceptS);
    static final short[] DFA184_special = DFA.unpackEncodedString(DFA184_specialS);
    static final short[][] DFA184_transition;

    static {
        int numStates = DFA184_transitionS.length;
        DFA184_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA184_transition[i] = DFA.unpackEncodedString(DFA184_transitionS[i]);
        }
    }

    class DFA184 extends DFA {

        public DFA184(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 184;
            this.eot = DFA184_eot;
            this.eof = DFA184_eof;
            this.min = DFA184_min;
            this.max = DFA184_max;
            this.accept = DFA184_accept;
            this.special = DFA184_special;
            this.transition = DFA184_transition;
        }
        public String getDescription() {
            return "1019:1: embedded_statement : ( block | embedded_statement_without_block );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA184_1 = input.LA(1);

                         
                        int index184_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred382_Vala()) ) {s = 43;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index184_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 184, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA185_eotS =
        "\64\uffff";
    static final String DFA185_eofS =
        "\64\uffff";
    static final String DFA185_minS =
        "\1\5\6\uffff\11\0\44\uffff";
    static final String DFA185_maxS =
        "\1\u0080\6\uffff\11\0\44\uffff";
    static final String DFA185_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\11\uffff\1\20\32\uffff\1\7\1\10"+
        "\1\11\1\12\1\13\1\14\1\15\1\16\1\17";
    static final String DFA185_specialS =
        "\7\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\44\uffff}>";
    static final String[] DFA185_transitionS = {
            "\1\20\1\uffff\1\1\1\uffff\2\20\2\uffff\1\20\21\uffff\1\20\2"+
            "\uffff\1\20\6\uffff\10\20\1\uffff\2\20\2\uffff\13\20\1\13\26"+
            "\20\1\15\2\20\1\16\1\17\1\7\1\11\1\12\1\10\1\20\1\14\2\20\1"+
            "\uffff\10\20\1\uffff\1\20\1\uffff\2\20\7\uffff\1\2\1\uffff\1"+
            "\3\1\uffff\1\4\1\5\1\6",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA185_eot = DFA.unpackEncodedString(DFA185_eotS);
    static final short[] DFA185_eof = DFA.unpackEncodedString(DFA185_eofS);
    static final char[] DFA185_min = DFA.unpackEncodedStringToUnsignedChars(DFA185_minS);
    static final char[] DFA185_max = DFA.unpackEncodedStringToUnsignedChars(DFA185_maxS);
    static final short[] DFA185_accept = DFA.unpackEncodedString(DFA185_acceptS);
    static final short[] DFA185_special = DFA.unpackEncodedString(DFA185_specialS);
    static final short[][] DFA185_transition;

    static {
        int numStates = DFA185_transitionS.length;
        DFA185_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA185_transition[i] = DFA.unpackEncodedString(DFA185_transitionS[i]);
        }
    }

    class DFA185 extends DFA {

        public DFA185(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 185;
            this.eot = DFA185_eot;
            this.eof = DFA185_eof;
            this.min = DFA185_min;
            this.max = DFA185_max;
            this.accept = DFA185_accept;
            this.special = DFA185_special;
            this.transition = DFA185_transition;
        }
        public String getDescription() {
            return "1024:1: embedded_statement_without_block : ( SEMICOLON | if_statement | switch_statement | while_statement | do_statement | for_statement | foreach_statement | break_statement | continue_statement | return_statement | yield_statement | throw_statement | try_statement | lock_statement | delete_statement | expression_statement );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA185_7 = input.LA(1);

                         
                        int index185_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred389_Vala()) ) {s = 43;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index185_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA185_8 = input.LA(1);

                         
                        int index185_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred390_Vala()) ) {s = 44;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index185_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA185_9 = input.LA(1);

                         
                        int index185_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred391_Vala()) ) {s = 45;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index185_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA185_10 = input.LA(1);

                         
                        int index185_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred392_Vala()) ) {s = 46;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index185_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA185_11 = input.LA(1);

                         
                        int index185_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred393_Vala()) ) {s = 47;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index185_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA185_12 = input.LA(1);

                         
                        int index185_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred394_Vala()) ) {s = 48;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index185_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA185_13 = input.LA(1);

                         
                        int index185_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred395_Vala()) ) {s = 49;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index185_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA185_14 = input.LA(1);

                         
                        int index185_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred396_Vala()) ) {s = 50;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index185_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA185_15 = input.LA(1);

                         
                        int index185_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred397_Vala()) ) {s = 51;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index185_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 185, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA194_eotS =
        "\43\uffff";
    static final String DFA194_eofS =
        "\43\uffff";
    static final String DFA194_minS =
        "\1\5\6\0\34\uffff";
    static final String DFA194_maxS =
        "\1\162\6\0\34\uffff";
    static final String DFA194_acceptS =
        "\7\uffff\1\2\32\uffff\1\1";
    static final String DFA194_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\34\uffff}>";
    static final String[] DFA194_transitionS = {
            "\1\7\3\uffff\1\5\1\6\2\uffff\1\7\21\uffff\1\7\2\uffff\1\7\6"+
            "\uffff\2\7\1\2\1\7\1\3\3\4\1\uffff\2\7\2\uffff\53\7\1\1\3\7"+
            "\1\uffff\10\7\1\uffff\1\7\1\uffff\2\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA194_eot = DFA.unpackEncodedString(DFA194_eotS);
    static final short[] DFA194_eof = DFA.unpackEncodedString(DFA194_eofS);
    static final char[] DFA194_min = DFA.unpackEncodedStringToUnsignedChars(DFA194_minS);
    static final char[] DFA194_max = DFA.unpackEncodedStringToUnsignedChars(DFA194_maxS);
    static final short[] DFA194_accept = DFA.unpackEncodedString(DFA194_acceptS);
    static final short[] DFA194_special = DFA.unpackEncodedString(DFA194_specialS);
    static final short[][] DFA194_transition;

    static {
        int numStates = DFA194_transitionS.length;
        DFA194_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA194_transition[i] = DFA.unpackEncodedString(DFA194_transitionS[i]);
        }
    }

    class DFA194 extends DFA {

        public DFA194(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 194;
            this.eot = DFA194_eot;
            this.eof = DFA194_eof;
            this.min = DFA194_min;
            this.max = DFA194_max;
            this.accept = DFA194_accept;
            this.special = DFA194_special;
            this.transition = DFA194_transition;
        }
        public String getDescription() {
            return "1083:1: for_initializer : ( local_variable_declarations | ( statement_expression ( COMMA statement_expression )* SEMICOLON ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA194_1 = input.LA(1);

                         
                        int index194_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred405_Vala()) ) {s = 34;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index194_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA194_2 = input.LA(1);

                         
                        int index194_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred405_Vala()) ) {s = 34;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index194_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA194_3 = input.LA(1);

                         
                        int index194_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred405_Vala()) ) {s = 34;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index194_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA194_4 = input.LA(1);

                         
                        int index194_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred405_Vala()) ) {s = 34;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index194_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA194_5 = input.LA(1);

                         
                        int index194_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred405_Vala()) ) {s = 34;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index194_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA194_6 = input.LA(1);

                         
                        int index194_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred405_Vala()) ) {s = 34;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index194_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 194, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA198_eotS =
        "\40\uffff";
    static final String DFA198_eofS =
        "\40\uffff";
    static final String DFA198_minS =
        "\1\5\32\uffff\1\0\4\uffff";
    static final String DFA198_maxS =
        "\1\162\32\uffff\1\0\4\uffff";
    static final String DFA198_acceptS =
        "\1\uffff\1\1\34\uffff\1\3\1\2";
    static final String DFA198_specialS =
        "\33\uffff\1\0\4\uffff}>";
    static final String[] DFA198_transitionS = {
            "\1\1\1\uffff\1\36\1\uffff\2\1\2\uffff\1\1\21\uffff\1\1\2\uffff"+
            "\1\1\6\uffff\10\1\1\uffff\2\1\2\uffff\51\1\1\33\5\1\1\uffff"+
            "\10\1\1\uffff\1\1\1\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA198_eot = DFA.unpackEncodedString(DFA198_eotS);
    static final short[] DFA198_eof = DFA.unpackEncodedString(DFA198_eofS);
    static final char[] DFA198_min = DFA.unpackEncodedStringToUnsignedChars(DFA198_minS);
    static final char[] DFA198_max = DFA.unpackEncodedStringToUnsignedChars(DFA198_maxS);
    static final short[] DFA198_accept = DFA.unpackEncodedString(DFA198_acceptS);
    static final short[] DFA198_special = DFA.unpackEncodedString(DFA198_specialS);
    static final short[][] DFA198_transition;

    static {
        int numStates = DFA198_transitionS.length;
        DFA198_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA198_transition[i] = DFA.unpackEncodedString(DFA198_transitionS[i]);
        }
    }

    class DFA198 extends DFA {

        public DFA198(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 198;
            this.eot = DFA198_eot;
            this.eof = DFA198_eof;
            this.min = DFA198_min;
            this.max = DFA198_max;
            this.accept = DFA198_accept;
            this.special = DFA198_special;
            this.transition = DFA198_transition;
        }
        public String getDescription() {
            return "1125:14: ( expression_statement | KW_RETURN expression )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA198_27 = input.LA(1);

                         
                        int index198_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred410_Vala()) ) {s = 1;}

                        else if ( (synpred411_Vala()) ) {s = 31;}

                         
                        input.seek(index198_27);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 198, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA199_eotS =
        "\70\uffff";
    static final String DFA199_eofS =
        "\1\1\67\uffff";
    static final String DFA199_minS =
        "\1\5\60\uffff\1\0\6\uffff";
    static final String DFA199_maxS =
        "\1\u0080\60\uffff\1\0\6\uffff";
    static final String DFA199_acceptS =
        "\1\uffff\1\2\65\uffff\1\1";
    static final String DFA199_specialS =
        "\61\uffff\1\0\6\uffff}>";
    static final String[] DFA199_transitionS = {
            "\1\1\1\uffff\1\1\1\uffff\2\1\2\uffff\1\1\21\uffff\1\1\2\uffff"+
            "\1\1\6\uffff\10\1\1\uffff\2\1\2\uffff\43\1\1\61\13\1\1\uffff"+
            "\12\1\1\uffff\2\1\6\uffff\10\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA199_eot = DFA.unpackEncodedString(DFA199_eotS);
    static final short[] DFA199_eof = DFA.unpackEncodedString(DFA199_eofS);
    static final char[] DFA199_min = DFA.unpackEncodedStringToUnsignedChars(DFA199_minS);
    static final char[] DFA199_max = DFA.unpackEncodedStringToUnsignedChars(DFA199_maxS);
    static final short[] DFA199_accept = DFA.unpackEncodedString(DFA199_acceptS);
    static final short[] DFA199_special = DFA.unpackEncodedString(DFA199_specialS);
    static final short[][] DFA199_transition;

    static {
        int numStates = DFA199_transitionS.length;
        DFA199_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA199_transition[i] = DFA.unpackEncodedString(DFA199_transitionS[i]);
        }
    }

    class DFA199 extends DFA {

        public DFA199(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 199;
            this.eot = DFA199_eot;
            this.eof = DFA199_eof;
            this.min = DFA199_min;
            this.max = DFA199_max;
            this.accept = DFA199_accept;
            this.special = DFA199_special;
            this.transition = DFA199_transition;
        }
        public String getDescription() {
            return "()* loopback of 1135:2: ( catch_clause )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA199_49 = input.LA(1);

                         
                        int index199_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred412_Vala()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index199_49);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 199, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA217_eotS =
        "\13\uffff";
    static final String DFA217_eofS =
        "\13\uffff";
    static final String DFA217_minS =
        "\6\5\1\uffff\1\5\2\uffff\1\5";
    static final String DFA217_maxS =
        "\3\170\3\144\1\uffff\1\144\2\uffff\1\144";
    static final String DFA217_acceptS =
        "\6\uffff\1\1\1\uffff\1\2\1\3\1\uffff";
    static final String DFA217_specialS =
        "\13\uffff}>";
    static final String[] DFA217_transitionS = {
            "\1\11\3\uffff\1\6\1\7\24\uffff\1\11\11\uffff\2\11\1\3\1\uffff"+
            "\1\4\3\5\11\uffff\6\11\1\2\3\11\2\2\1\11\6\2\4\1\24\11\23\uffff"+
            "\1\10",
            "\1\11\1\uffff\1\11\1\uffff\1\6\1\7\24\uffff\1\11\11\uffff\2"+
            "\11\1\3\1\uffff\1\4\3\5\11\uffff\6\11\1\2\3\11\2\2\1\11\6\2"+
            "\30\11\23\uffff\1\10",
            "\1\11\1\uffff\1\11\1\uffff\1\6\1\7\24\uffff\1\11\11\uffff\2"+
            "\11\1\3\1\uffff\1\4\3\5\11\uffff\6\11\1\2\3\11\2\2\1\11\6\2"+
            "\30\11\23\uffff\1\10",
            "\1\12\1\uffff\1\11\2\uffff\1\12\24\uffff\1\12\11\uffff\3\12"+
            "\1\6\4\12\11\uffff\53\12",
            "\1\11\1\uffff\1\11\1\uffff\1\6\1\7\24\uffff\1\11\11\uffff\3"+
            "\11\1\uffff\1\11\3\5\11\uffff\53\11",
            "\1\11\1\uffff\1\11\1\uffff\1\6\1\7\24\uffff\1\11\11\uffff\3"+
            "\11\1\uffff\4\11\11\uffff\53\11",
            "",
            "\1\12\1\uffff\1\11\1\6\1\uffff\1\12\1\6\16\uffff\1\6\4\uffff"+
            "\1\12\5\uffff\1\6\3\uffff\3\12\1\6\4\12\11\uffff\53\12",
            "",
            "",
            "\1\11\1\uffff\1\11\2\uffff\1\11\2\uffff\1\6\21\uffff\1\11\5"+
            "\uffff\1\6\3\uffff\3\11\1\uffff\4\11\11\uffff\53\11"
    };

    static final short[] DFA217_eot = DFA.unpackEncodedString(DFA217_eotS);
    static final short[] DFA217_eof = DFA.unpackEncodedString(DFA217_eofS);
    static final char[] DFA217_min = DFA.unpackEncodedStringToUnsignedChars(DFA217_minS);
    static final char[] DFA217_max = DFA.unpackEncodedStringToUnsignedChars(DFA217_maxS);
    static final short[] DFA217_accept = DFA.unpackEncodedString(DFA217_acceptS);
    static final short[] DFA217_special = DFA.unpackEncodedString(DFA217_specialS);
    static final short[][] DFA217_transition;

    static {
        int numStates = DFA217_transitionS.length;
        DFA217_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA217_transition[i] = DFA.unpackEncodedString(DFA217_transitionS[i]);
        }
    }

    class DFA217 extends DFA {

        public DFA217(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 217;
            this.eot = DFA217_eot;
            this.eof = DFA217_eof;
            this.min = DFA217_min;
            this.max = DFA217_max;
            this.accept = DFA217_accept;
            this.special = DFA217_special;
            this.transition = DFA217_transition;
        }
        public String getDescription() {
            return "657:3: ( method_declaration | constant_declaration | unknown_chain )";
        }
    }
 

    public static final BitSet FOLLOW_using_directive_in_compilation_unit90 = new BitSet(new long[]{0x0001E80000000E22L,0x01800000001FFFF1L});
    public static final BitSet FOLLOW_namespace_member_in_compilation_unit96 = new BitSet(new long[]{0x0001E80000000E02L,0x01800000001FFFF1L});
    public static final BitSet FOLLOW_KW_USING_in_using_directive110 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_symbol_in_using_directive113 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_using_directive121 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_symbol_in_using_directive126 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_SEMICOLON_in_using_directive134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_symbol_part_in_symbol145 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_DOT_in_symbol153 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_symbol_part_in_symbol157 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_GLOBAL_NS_in_symbol_part175 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_symbol_part177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_symbol_part185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_namespace_member197 = new BitSet(new long[]{0x0001E80000000E00L,0x01800000001FFFF1L});
    public static final BitSet FOLLOW_namespace_declaration_in_namespace_member204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_declaration_in_namespace_member209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_declaration_in_namespace_member215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_declaration_in_namespace_member221 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_declaration_in_namespace_member227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_errordomain_declaration_in_namespace_member233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_declaration_in_namespace_member239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delegate_declaration_in_namespace_member245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_declaration_in_namespace_member251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_field_declaration_in_namespace_member257 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attribute_in_attributes269 = new BitSet(new long[]{0x0000000000000802L});
    public static final BitSet FOLLOW_LBRACKET_in_attribute285 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_identifier_in_attribute288 = new BitSet(new long[]{0x0000000000003000L});
    public static final BitSet FOLLOW_attribute_arguments_in_attribute292 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_RBRACKET_in_attribute297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_attribute_arguments307 = new BitSet(new long[]{0xFC01EE0080004420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_attribute_argument_in_attribute_arguments312 = new BitSet(new long[]{0x0000000000004040L});
    public static final BitSet FOLLOW_COMMA_in_attribute_arguments315 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_attribute_argument_in_attribute_arguments317 = new BitSet(new long[]{0x0000000000004040L});
    public static final BitSet FOLLOW_RPAREN_in_attribute_arguments324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_attribute_argument333 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_attribute_argument335 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_attribute_argument337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lambda_expression_in_expression347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditional_expression_in_expression355 = new BitSet(new long[]{0x0000000003FF8002L});
    public static final BitSet FOLLOW_assignment_operator_in_expression358 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_expression360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_assignment_operator0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_coalescing_expression_in_conditional_expression426 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_QUESTION_in_conditional_expression431 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_conditional_expression433 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_COLON_in_conditional_expression435 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_conditional_expression437 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditional_or_expression_in_coalescing_expression451 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_COALESCE_in_coalescing_expression456 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_coalescing_expression_in_coalescing_expression458 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditional_and_expression_in_conditional_or_expression472 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_BOOL_OR_in_conditional_or_expression477 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_conditional_and_expression_in_conditional_or_expression479 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_in_expression_in_conditional_and_expression493 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_BOOL_AND_in_conditional_and_expression498 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_in_expression_in_conditional_and_expression500 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_inclusive_or_expression_in_in_expression514 = new BitSet(new long[]{0x0000000080000002L});
    public static final BitSet FOLLOW_KW_IN_in_in_expression519 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_inclusive_or_expression_in_in_expression521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression535 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_OR_in_inclusive_or_expression540 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression542 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_and_expression_in_exclusive_or_expression556 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_XOR_in_exclusive_or_expression561 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_and_expression_in_exclusive_or_expression563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_equality_expression_in_and_expression577 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_AND_in_and_expression582 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_equality_expression_in_and_expression584 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_relational_expression_in_equality_expression598 = new BitSet(new long[]{0x0000001800000002L});
    public static final BitSet FOLLOW_set_in_equality_expression603 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_relational_expression_in_equality_expression613 = new BitSet(new long[]{0x0000001800000002L});
    public static final BitSet FOLLOW_shift_expression_in_relational_expression627 = new BitSet(new long[]{0x000007E000000002L});
    public static final BitSet FOLLOW_set_in_relational_expression638 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_shift_expression_in_relational_expression656 = new BitSet(new long[]{0x000007E000000002L});
    public static final BitSet FOLLOW_KW_IS_in_relational_expression671 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_relational_expression673 = new BitSet(new long[]{0x000007E000000002L});
    public static final BitSet FOLLOW_KW_AS_in_relational_expression688 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_relational_expression690 = new BitSet(new long[]{0x000007E000000002L});
    public static final BitSet FOLLOW_KW_VOID_in_type714 = new BitSet(new long[]{0x0000100000000002L});
    public static final BitSet FOLLOW_MULTIPLY_in_type719 = new BitSet(new long[]{0x0000100000000002L});
    public static final BitSet FOLLOW_KW_DYNAMIC_in_type739 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_set_in_type746 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_symbol_in_type762 = new BitSet(new long[]{0x0000102004000802L});
    public static final BitSet FOLLOW_type_arguments_in_type768 = new BitSet(new long[]{0x0000100004000802L});
    public static final BitSet FOLLOW_MULTIPLY_in_type776 = new BitSet(new long[]{0x0000100004000802L});
    public static final BitSet FOLLOW_QUESTION_in_type784 = new BitSet(new long[]{0x0000000000000802L});
    public static final BitSet FOLLOW_array_type_in_type792 = new BitSet(new long[]{0x0000000000000802L});
    public static final BitSet FOLLOW_LBRACKET_in_array_type810 = new BitSet(new long[]{0xFFCDFE0480003620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_array_size_in_array_type815 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_RBRACKET_in_array_type820 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_QUESTION_in_array_type826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additive_expression_in_shift_expression840 = new BitSet(new long[]{0x0002004000000002L});
    public static final BitSet FOLLOW_SHIFT_LEFT_in_shift_expression850 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_shift_right_in_shift_expression854 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_additive_expression_in_shift_expression858 = new BitSet(new long[]{0x0002004000000002L});
    public static final BitSet FOLLOW_GT_in_shift_right872 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_GT_in_shift_right874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_multiplicative_expression_in_additive_expression886 = new BitSet(new long[]{0x000C000000000002L});
    public static final BitSet FOLLOW_set_in_additive_expression894 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_multiplicative_expression_in_additive_expression904 = new BitSet(new long[]{0x000C000000000002L});
    public static final BitSet FOLLOW_unary_expression_in_multiplicative_expression920 = new BitSet(new long[]{0x0030100000000002L});
    public static final BitSet FOLLOW_MULTIPLY_in_multiplicative_expression934 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_DIV_in_multiplicative_expression942 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_MOD_in_multiplicative_expression950 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_unary_expression_in_multiplicative_expression957 = new BitSet(new long[]{0x0030100000000002L});
    public static final BitSet FOLLOW_unary_operator_in_unary_expression976 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_unary_expression_in_unary_expression978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_expression_in_unary_expression990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_unary_operator1002 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MINUS_in_unary_operator1008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_in_unary_operator1014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BITWISE_NOT_in_unary_operator1020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INCREMENT_in_unary_operator1026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECREMENT_in_unary_operator1031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MULTIPLY_in_unary_operator1036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AND_in_unary_operator1042 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_cast_operator_in_unary_operator1048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_unary_operator1053 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_NOT_in_unary_operator1055 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_unary_operator1057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_cast_operator1067 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_cast_operator1069 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_cast_operator1071 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_cast_operator1076 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_KW_UNOWNED_in_cast_operator1078 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_cast_operator1080 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_cast_operator1085 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_KW_OWNED_in_cast_operator1087 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_cast_operator1089 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_cast_operator1094 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_KW_WEAK_in_cast_operator1096 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_cast_operator1098 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_literal_in_primary_expression1115 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_initializer_in_primary_expression1121 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_tuple_in_primary_expression1127 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_template_in_primary_expression1133 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_this_access_in_primary_expression1139 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_base_access_in_primary_expression1145 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_object_or_array_creation_expression_in_primary_expression1151 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_yield_expression_in_primary_expression1157 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_sizeof_expression_in_primary_expression1163 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_typeof_expression_in_primary_expression1169 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_simple_name_in_primary_expression1175 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_member_access_in_primary_expression1185 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_pointer_member_access_in_primary_expression1191 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_method_call_in_primary_expression1197 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_element_access_in_primary_expression1203 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_post_increment_expression_in_primary_expression1209 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_post_decrement_expression_in_primary_expression1215 = new BitSet(new long[]{0x0300000000002902L,0x0000002000000000L});
    public static final BitSet FOLLOW_DOT_in_member_access1230 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_identifier_in_member_access1233 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_type_arguments_in_member_access1237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_identifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INCREMENT_in_post_increment_expression1525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECREMENT_in_post_decrement_expression1534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_element_access1545 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_element_access1549 = new BitSet(new long[]{0x0000000008001000L});
    public static final BitSet FOLLOW_slice_array_in_element_access1553 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_RBRACKET_in_element_access1558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COLON_in_slice_array1569 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_slice_array1573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POINTER_ACCESS_in_pointer_member_access1585 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_identifier_in_pointer_member_access1589 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_type_arguments_in_pointer_member_access1593 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_boolean_literal_in_literal1606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_null_literal_in_literal1612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_open_regex_literal_in_literal1618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_vertbatim_string_literal_in_literal1624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_integer_literal_in_literal1630 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hex_literal_in_literal1635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_real_literal_in_literal1641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_char_literal_in_literal1646 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_string_literal_in_literal1651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_in_integer_literal1666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REAL_in_real_literal1678 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_string_literal1689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_HEX_in_hex_literal1701 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_boolean_literal0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_NULL_in_null_literal1723 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_in_char_literal1735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REGEX_LITERAL_in_open_regex_literal1746 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VERBATIM_LITERAL_in_vertbatim_string_literal1757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LCURL_in_initializer1769 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006FFDFFFFFFFFFL});
    public static final BitSet FOLLOW_argument_in_initializer1775 = new BitSet(new long[]{0x0000000000000040L,0x0000400000000000L});
    public static final BitSet FOLLOW_COMMA_in_initializer1781 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_argument_in_initializer1783 = new BitSet(new long[]{0x0000000000000040L,0x0000400000000000L});
    public static final BitSet FOLLOW_RCURL_in_initializer1790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_argument_in_arguments1802 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_arguments1807 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_argument_in_arguments1809 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_identifier_in_argument1826 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_COLON_in_argument1830 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_KW_REF_in_argument1840 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_KW_OUT_in_argument1846 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_argument1852 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_tuple1864 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_tuple1868 = new BitSet(new long[]{0x0000000000004040L});
    public static final BitSet FOLLOW_COMMA_in_tuple1876 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_tuple1881 = new BitSet(new long[]{0x0000000000004040L});
    public static final BitSet FOLLOW_RPAREN_in_tuple1889 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TEMPLATE_START_in_template1900 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0007BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_template1904 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_COMMA_in_template1906 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0007BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_QUOT_in_template1911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_THIS_in_this_access1922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_BASE_in_base_access1932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_NEW_in_object_or_array_creation_expression1944 = new BitSet(new long[]{0xFC01EE0080000620L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_member_in_object_or_array_creation_expression1948 = new BitSet(new long[]{0x0000000000002800L,0x0000200000000000L});
    public static final BitSet FOLLOW_object_creation_expression_in_object_or_array_creation_expression1954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_array_creation_expression_in_object_or_array_creation_expression1958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_object_creation_expression1972 = new BitSet(new long[]{0xFFCDFE0480006620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_arguments_in_object_creation_expression1979 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_object_creation_expression1986 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_object_initializer_in_object_creation_expression1993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LCURL_in_object_initializer2008 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_member_initializer_in_object_initializer2012 = new BitSet(new long[]{0x0000000000000040L,0x0000400000000000L});
    public static final BitSet FOLLOW_COMMA_in_object_initializer2020 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_member_initializer_in_object_initializer2024 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_RCURL_in_object_initializer2032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_member_initializer2042 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_member_initializer2044 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_member_initializer2046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_array_creation_expression2062 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_RBRACKET_in_array_creation_expression2068 = new BitSet(new long[]{0x0000000000000802L,0x0000200000000000L});
    public static final BitSet FOLLOW_LBRACKET_in_array_creation_expression2080 = new BitSet(new long[]{0xFFCDFE0480003620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_array_size_in_array_creation_expression2087 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_RBRACKET_in_array_creation_expression2094 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_initializer_in_array_creation_expression2103 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_array_size2117 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_array_size2122 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_array_size2124 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_GLOBAL_NS_in_member2144 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_identifier_in_member2146 = new BitSet(new long[]{0x0000002000000102L});
    public static final BitSet FOLLOW_identifier_in_member2153 = new BitSet(new long[]{0x0000002000000102L});
    public static final BitSet FOLLOW_type_arguments_in_member2162 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_member_access_in_member2169 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_LT_in_type_arguments2182 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_type_arguments2186 = new BitSet(new long[]{0x0000004000000040L});
    public static final BitSet FOLLOW_COMMA_in_type_arguments2190 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_type_arguments2192 = new BitSet(new long[]{0x0000004000000040L});
    public static final BitSet FOLLOW_GT_in_type_arguments2198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_YIELD_in_yield_expression2208 = new BitSet(new long[]{0xFC01EE0080000620L,0x0004001FFFFFFFFFL});
    public static final BitSet FOLLOW_base_access_in_yield_expression2211 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_DOT_in_yield_expression2213 = new BitSet(new long[]{0xFC01EE0080000620L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_member_in_yield_expression2217 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_method_call_in_yield_expression2219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_method_call2231 = new BitSet(new long[]{0xFFCDFE0480006620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_arguments_in_method_call2237 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_method_call2243 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_object_initializer_in_method_call2249 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_SIZEOF_in_sizeof_expression2263 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_LPAREN_in_sizeof_expression2266 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_sizeof_expression2270 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_sizeof_expression2274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_TYPEOF_in_typeof_expression2284 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_LPAREN_in_typeof_expression2286 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_typeof_expression2288 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_typeof_expression2290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GLOBAL_NS_in_simple_name2302 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_identifier_in_simple_name2304 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_identifier_in_simple_name2308 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_type_arguments_in_simple_name2313 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lambda_expression_params_in_lambda_expression2325 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_LAMBDA_in_lambda_expression2327 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_lambda_expression_body_in_lambda_expression2329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_lambda_expression_params2341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_lambda_expression_params2353 = new BitSet(new long[]{0xFC01EE0080004420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_identifier_in_lambda_expression_params2360 = new BitSet(new long[]{0x0000000000004040L});
    public static final BitSet FOLLOW_COMMA_in_lambda_expression_params2363 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_identifier_in_lambda_expression_params2365 = new BitSet(new long[]{0x0000000000004040L});
    public static final BitSet FOLLOW_RPAREN_in_lambda_expression_params2375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_lambda_expression_body2389 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_lambda_expression_body2393 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_declaration_modifier_in_member_declaration_modifiers2403 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001FB1L});
    public static final BitSet FOLLOW_set_in_member_declaration_modifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_declaration_modifiers_in_constructor_declaration2470 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_KW_CONSTRUCT_in_constructor_declaration2476 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_block_in_constructor_declaration2479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_declaration_modifier_in_constructor_declaration_modifiers2491 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001FB0L});
    public static final BitSet FOLLOW_set_in_constructor_declaration_modifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_declaration_modifiers_in_destructor_declaration2560 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_BITWISE_NOT_in_destructor_declaration2567 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_destructor_declaration2571 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_LPAREN_in_destructor_declaration2575 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_destructor_declaration2581 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_block_in_destructor_declaration2586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_class_declaration2599 = new BitSet(new long[]{0x0000000000000000L,0x00000000000006A0L});
    public static final BitSet FOLLOW_type_declaration_modifiers_in_class_declaration2606 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_KW_CLASS_in_class_declaration2612 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_symbol_in_class_declaration2615 = new BitSet(new long[]{0x0000002008000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_type_arguments_in_class_declaration2620 = new BitSet(new long[]{0x0000000008000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_COLON_in_class_declaration2626 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_base_types_in_class_declaration2628 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_LCURL_in_class_declaration2634 = new BitSet(new long[]{0xFC81EE0080000E20L,0x0180401FFFFFFFFFL});
    public static final BitSet FOLLOW_class_member_in_class_declaration2639 = new BitSet(new long[]{0xFC81EE0080000E20L,0x0180401FFFFFFFFFL});
    public static final BitSet FOLLOW_RCURL_in_class_declaration2644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_base_types2656 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_base_types2661 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_base_types2663 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_attributes_in_class_member2678 = new BitSet(new long[]{0xFC81EE0080000E20L,0x0180001FFFFFFFFFL});
    public static final BitSet FOLLOW_class_declaration_in_class_member2685 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_declaration_in_class_member2691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_declaration_in_class_member2697 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delegate_declaration_in_class_member2703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_declaration_in_class_member2709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_signal_declaration_in_class_member2715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_field_declaration_in_class_member2721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_declaration_in_class_member2727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_declaration_in_class_member2733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_declaration_in_class_member2739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_creation_method_declaration_in_class_member2745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_destructor_declaration_in_class_member2750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unknown_chain_in_class_member2756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_access_modifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_declaration_modifier_in_type_declaration_modifiers2794 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000680L});
    public static final BitSet FOLLOW_set_in_type_declaration_modifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_enum_declaration2830 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020680L});
    public static final BitSet FOLLOW_type_declaration_modifiers_in_enum_declaration2837 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_KW_ENUM_in_enum_declaration2843 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_symbol_in_enum_declaration2846 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_LCURL_in_enum_declaration2849 = new BitSet(new long[]{0xFC81EE0080000E20L,0x0180401FFFFFFFFFL});
    public static final BitSet FOLLOW_enum_member_in_enum_declaration2854 = new BitSet(new long[]{0xFC81EE0080000E20L,0x0180401FFFFFFFFFL});
    public static final BitSet FOLLOW_RCURL_in_enum_declaration2860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_enum_member2875 = new BitSet(new long[]{0xFC81EE0080000E20L,0x0180001FFFFFFFFFL});
    public static final BitSet FOLLOW_method_declaration_in_enum_member2886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_declaration_in_enum_member2894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unknown_chain_in_enum_member2902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_values_in_enum_member2916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_value_in_enum_values2929 = new BitSet(new long[]{0x00000000000000C2L});
    public static final BitSet FOLLOW_COMMA_in_enum_values2934 = new BitSet(new long[]{0xFC81EE0080000E20L,0x0180001FFFFFFFFFL});
    public static final BitSet FOLLOW_enum_value_in_enum_values2936 = new BitSet(new long[]{0x00000000000000C2L});
    public static final BitSet FOLLOW_COMMA_in_enum_values2942 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_SEMICOLON_in_enum_values2948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_enum_value2964 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_identifier_in_enum_value2970 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_enum_value2974 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_enum_value2976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_errordomain_declaration2991 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040680L});
    public static final BitSet FOLLOW_type_declaration_modifiers_in_errordomain_declaration2998 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_KW_ERRORDOMAIN_in_errordomain_declaration3004 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_symbol_in_errordomain_declaration3007 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_LCURL_in_errordomain_declaration3010 = new BitSet(new long[]{0x0000000000000C00L});
    public static final BitSet FOLLOW_errorcodes_in_errordomain_declaration3014 = new BitSet(new long[]{0x0000000000000080L,0x0000400000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_errordomain_declaration3019 = new BitSet(new long[]{0x0001E80000000600L,0x000040000001FFB1L});
    public static final BitSet FOLLOW_method_declaration_in_errordomain_declaration3023 = new BitSet(new long[]{0x0001E80000000600L,0x000040000001FFB1L});
    public static final BitSet FOLLOW_RCURL_in_errordomain_declaration3031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_errorcode_in_errorcodes3043 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_errorcodes3048 = new BitSet(new long[]{0x0000000000000C00L});
    public static final BitSet FOLLOW_errorcode_in_errorcodes3050 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_errorcodes3056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_errorcode3070 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_errorcode3074 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_errorcode3077 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_errorcode3079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_interface_declaration3094 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080680L});
    public static final BitSet FOLLOW_type_declaration_modifiers_in_interface_declaration3101 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_KW_INTERFACE_in_interface_declaration3107 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_symbol_in_interface_declaration3110 = new BitSet(new long[]{0x0000002008000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_type_parameters_in_interface_declaration3115 = new BitSet(new long[]{0x0000000008000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_COLON_in_interface_declaration3121 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_base_types_in_interface_declaration3123 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_LCURL_in_interface_declaration3129 = new BitSet(new long[]{0x0001E80000000E00L,0x01804008001FFFF1L});
    public static final BitSet FOLLOW_interface_member_in_interface_declaration3134 = new BitSet(new long[]{0x0001E80000000E00L,0x01804008001FFFF1L});
    public static final BitSet FOLLOW_RCURL_in_interface_declaration3139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LT_in_type_parameters3151 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_identifier_in_type_parameters3155 = new BitSet(new long[]{0x0000004000000040L});
    public static final BitSet FOLLOW_COMMA_in_type_parameters3159 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_identifier_in_type_parameters3161 = new BitSet(new long[]{0x0000004000000040L});
    public static final BitSet FOLLOW_GT_in_type_parameters3167 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_interface_member3178 = new BitSet(new long[]{0x0001E80000000E00L,0x01800008001FFFF1L});
    public static final BitSet FOLLOW_class_declaration_in_interface_member3187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_declaration_in_interface_member3192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_declaration_in_interface_member3198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delegate_declaration_in_interface_member3204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_declaration_in_interface_member3210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_signal_declaration_in_interface_member3216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_field_declaration_in_interface_member3222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_declaration_in_interface_member3228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_declaration_in_interface_member3234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_NAMESPACE_in_namespace_declaration3248 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_symbol_in_namespace_declaration3251 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_LCURL_in_namespace_declaration3255 = new BitSet(new long[]{0x0001E80000000E20L,0x01804000001FFFF1L});
    public static final BitSet FOLLOW_using_directive_in_namespace_declaration3261 = new BitSet(new long[]{0x0001E80000000E20L,0x01804000001FFFF1L});
    public static final BitSet FOLLOW_namespace_member_in_namespace_declaration3268 = new BitSet(new long[]{0x0001E80000000E00L,0x01804000001FFFF1L});
    public static final BitSet FOLLOW_RCURL_in_namespace_declaration3274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_struct_declaration3287 = new BitSet(new long[]{0x0000000000000000L,0x00000000000006C0L});
    public static final BitSet FOLLOW_type_declaration_modifiers_in_struct_declaration3294 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_KW_STRUCT_in_struct_declaration3300 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_symbol_in_struct_declaration3303 = new BitSet(new long[]{0x0000000008000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_COLON_in_struct_declaration3314 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_base_types_in_struct_declaration3316 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_LCURL_in_struct_declaration3329 = new BitSet(new long[]{0xFC81EE0080000E20L,0x0180401FFFFFFFFFL});
    public static final BitSet FOLLOW_struct_member_in_struct_declaration3341 = new BitSet(new long[]{0xFC81EE0080000E20L,0x0180401FFFFFFFFFL});
    public static final BitSet FOLLOW_RCURL_in_struct_declaration3354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_struct_member3367 = new BitSet(new long[]{0xFC81EE0080000E20L,0x0180001FFFFFFFFFL});
    public static final BitSet FOLLOW_method_declaration_in_struct_member3378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_field_declaration_in_struct_member3385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_declaration_in_struct_member3392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_declaration_in_struct_member3399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_creation_method_declaration_in_struct_member3405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unknown_chain_in_struct_member3411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_creation_method_declaration3427 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_constructor_declaration_modifiers_in_creation_method_declaration3434 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_symbol_in_creation_method_declaration3440 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_parameters_in_creation_method_declaration3444 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0056BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_throws_part_in_creation_method_declaration3449 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0046BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_requires_decl_in_creation_method_declaration3456 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0046BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_ensures_decl_in_creation_method_declaration3463 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_SEMICOLON_in_creation_method_declaration3470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_creation_method_declaration3474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_THROWS_in_throws_part3486 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_throws_part3489 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_throws_part3494 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_throws_part3496 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_LPAREN_in_parameters3510 = new BitSet(new long[]{0x0001E80000004E00L,0x0020000000E1FFB1L});
    public static final BitSet FOLLOW_parameters_decl_in_parameters3515 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_parameters3520 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_in_parameters_decl3530 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_parameters_decl3534 = new BitSet(new long[]{0x0001E80000000E00L,0x0020000000E1FFB1L});
    public static final BitSet FOLLOW_parameter_in_parameters_decl3536 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_KW_REQUIRES_in_requires_decl3554 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_LPAREN_in_requires_decl3557 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_requires_decl3561 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_requires_decl3565 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_requires_decl_in_requires_decl3569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_parameter3585 = new BitSet(new long[]{0x0001E80000000600L,0x0020000000E1FFB1L});
    public static final BitSet FOLLOW_ELIPSIS_in_parameter3597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_PARAMS_in_parameter3614 = new BitSet(new long[]{0x0001E80000000600L,0x000000000061FFB1L});
    public static final BitSet FOLLOW_KW_OWNED_in_parameter3623 = new BitSet(new long[]{0x0001E80000000600L,0x000000000061FFB1L});
    public static final BitSet FOLLOW_KW_UNOWNED_in_parameter3629 = new BitSet(new long[]{0x0001E80000000600L,0x000000000061FFB1L});
    public static final BitSet FOLLOW_KW_REF_in_parameter3639 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_KW_OUT_in_parameter3645 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_parameter3653 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_identifier_in_parameter3659 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_parameter3666 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_parameter3668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_ENSURES_in_ensures_decl3691 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_LPAREN_in_ensures_decl3696 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_ensures_decl3700 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_ensures_decl3704 = new BitSet(new long[]{0x0000000000000002L,0x0040000000000000L});
    public static final BitSet FOLLOW_ensures_decl_in_ensures_decl3710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_delegate_declaration3725 = new BitSet(new long[]{0x0000000000000000L,0x0080000000001FB0L});
    public static final BitSet FOLLOW_delegate_declaration_modifiers_in_delegate_declaration3732 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_KW_DELEGATE_in_delegate_declaration3738 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_delegate_declaration3741 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_symbol_in_delegate_declaration3745 = new BitSet(new long[]{0x0000002000002000L});
    public static final BitSet FOLLOW_type_parameters_in_delegate_declaration3750 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_parameters_in_delegate_declaration3755 = new BitSet(new long[]{0x0000000000000080L,0x0010000000000000L});
    public static final BitSet FOLLOW_throws_part_in_delegate_declaration3759 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_SEMICOLON_in_delegate_declaration3765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delegate_declaration_modifier_in_delegate_declaration_modifiers3775 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001FB0L});
    public static final BitSet FOLLOW_set_in_delegate_declaration_modifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_signal_declaration3840 = new BitSet(new long[]{0x0000000000000000L,0x0000000800001D91L});
    public static final BitSet FOLLOW_signal_declaration_modifiers_in_signal_declaration3847 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_KW_SIGNAL_in_signal_declaration3853 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_signal_declaration3856 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_signal_declaration3860 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_parameters_in_signal_declaration3863 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_SEMICOLON_in_signal_declaration3868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_signal_declaration3872 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_signal_declaration_modifier_in_signal_declaration_modifiers3884 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001D91L});
    public static final BitSet FOLLOW_set_in_signal_declaration_modifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_method_declaration3940 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_member_declaration_modifiers_in_method_declaration3947 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_method_declaration3953 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_identifier_in_method_declaration3957 = new BitSet(new long[]{0x0000002000002000L});
    public static final BitSet FOLLOW_type_parameters_in_method_declaration3962 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_parameters_in_method_declaration3975 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0056BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_throws_part_in_method_declaration3979 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0046BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_requires_decl_in_method_declaration3986 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0046BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_ensures_decl_in_method_declaration3993 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_SEMICOLON_in_method_declaration4001 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_method_declaration4005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_constant_declaration4020 = new BitSet(new long[]{0x0000000000000000L,0x0100000000001FB1L});
    public static final BitSet FOLLOW_member_declaration_modifiers_in_constant_declaration4027 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_KW_CONST_in_constant_declaration4033 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_constant_declaration4036 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_constant_declaration4040 = new BitSet(new long[]{0x0000000000008880L});
    public static final BitSet FOLLOW_inline_array_type_in_constant_declaration4045 = new BitSet(new long[]{0x0000000000008080L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_constant_declaration4051 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_constant_declaration4053 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_SEMICOLON_in_constant_declaration4059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_inline_array_type4071 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_INTEGER_in_inline_array_type4074 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_RBRACKET_in_inline_array_type4078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_field_declaration4091 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_member_declaration_modifiers_in_field_declaration4098 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_field_declaration4104 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_identifier_in_field_declaration4108 = new BitSet(new long[]{0x0000000000008880L});
    public static final BitSet FOLLOW_LBRACKET_in_field_declaration4112 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_RBRACKET_in_field_declaration4115 = new BitSet(new long[]{0x0000000000008080L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_field_declaration4121 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_field_declaration4123 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_SEMICOLON_in_field_declaration4129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_property_declaration4142 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_property_declaration_modifiers_in_property_declaration4149 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_property_declaration4155 = new BitSet(new long[]{0xFC01EE0080000420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_identifier_in_property_declaration4157 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_LCURL_in_property_declaration4167 = new BitSet(new long[]{0x1C00C00000000800L,0x020040000001E000L});
    public static final BitSet FOLLOW_property_declaration_part_in_property_declaration4179 = new BitSet(new long[]{0x1C00C00000000800L,0x020040000001E000L});
    public static final BitSet FOLLOW_RCURL_in_property_declaration4192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_DEFAULT_in_property_declaration_part4209 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_property_declaration_part4213 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_property_declaration_part4218 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_SEMICOLON_in_property_declaration_part4223 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_accessor_in_property_declaration_part4233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_property_accessor4246 = new BitSet(new long[]{0x1C00C00000000000L,0x000000000001E000L});
    public static final BitSet FOLLOW_access_modifier_in_property_accessor4253 = new BitSet(new long[]{0x1C00C00000000000L,0x000000000001E000L});
    public static final BitSet FOLLOW_set_in_property_accessor4258 = new BitSet(new long[]{0x1C00000000000000L,0x000000000001E000L});
    public static final BitSet FOLLOW_property_get_accessor_in_property_accessor4273 = new BitSet(new long[]{0x0C00000000000000L,0x000000000001E000L});
    public static final BitSet FOLLOW_property_set_construct_accessor_in_property_accessor4275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_set_construct_accessor_in_property_accessor4283 = new BitSet(new long[]{0x1000000000000000L,0x000000000001E000L});
    public static final BitSet FOLLOW_property_get_accessor_in_property_accessor4285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_set_construct_accessor_in_property_accessor4293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_get_accessor_in_property_accessor4303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_property_get_accessor4323 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_KW_GET_in_property_get_accessor4328 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_SEMICOLON_in_property_get_accessor4333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_property_get_accessor4337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_property_set_construct_accessor4356 = new BitSet(new long[]{0x0C00000000000000L});
    public static final BitSet FOLLOW_KW_SET_in_property_set_construct_accessor4369 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_KW_CONSTRUCT_in_property_set_construct_accessor4372 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_KW_CONSTRUCT_in_property_set_construct_accessor4386 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_KW_CONSTRUCT_in_property_set_construct_accessor4397 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_KW_SET_in_property_set_construct_accessor4399 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_SEMICOLON_in_property_set_construct_accessor4416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_property_set_construct_accessor4423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_declaration_modifier_in_property_declaration_modifiers4437 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001FA1L});
    public static final BitSet FOLLOW_set_in_property_declaration_modifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LCURL_in_block4498 = new BitSet(new long[]{0xFFCDFE04800026A0L,0xD406FFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_statement_in_block4503 = new BitSet(new long[]{0xFFCDFE04800026A0L,0xD406FFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_RCURL_in_block4509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_statement4521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_statement4527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_if_statement_in_statement4533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switch_statement_in_statement4539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_while_statement_in_statement4545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_do_statement_in_statement4550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_for_statement_in_statement4555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_foreach_statement_in_statement4561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_break_statement_in_statement4567 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continue_statement_in_statement4573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_return_statement_in_statement4579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_yield_statement_in_statement4585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_throw_statement_in_statement4591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_try_statement_in_statement4597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lock_statement_in_statement4603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delete_statement_in_statement4609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declarations_in_statement4615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_statement_in_statement4621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_IF_in_if_statement4633 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_LPAREN_in_if_statement4636 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_if_statement4640 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_if_statement4644 = new BitSet(new long[]{0xFFCDFE04800026A0L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_embedded_statement_in_if_statement4648 = new BitSet(new long[]{0x0000000000000002L,0x0800000000000000L});
    public static final BitSet FOLLOW_KW_ELSE_in_if_statement4656 = new BitSet(new long[]{0xFFCDFE04800026A0L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_embedded_statement_in_if_statement4660 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_embedded_statement4676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_embedded_statement_without_block_in_embedded_statement4682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_embedded_statement_without_block4694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_if_statement_in_embedded_statement_without_block4700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switch_statement_in_embedded_statement_without_block4706 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_while_statement_in_embedded_statement_without_block4712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_do_statement_in_embedded_statement_without_block4718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_for_statement_in_embedded_statement_without_block4723 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_foreach_statement_in_embedded_statement_without_block4729 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_break_statement_in_embedded_statement_without_block4735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continue_statement_in_embedded_statement_without_block4741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_return_statement_in_embedded_statement_without_block4747 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_yield_statement_in_embedded_statement_without_block4753 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_throw_statement_in_embedded_statement_without_block4759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_try_statement_in_embedded_statement_without_block4765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lock_statement_in_embedded_statement_without_block4771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delete_statement_in_embedded_statement_without_block4777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_statement_in_embedded_statement_without_block4783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_SWITCH_in_switch_statement4795 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_LPAREN_in_switch_statement4798 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_switch_statement4802 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_switch_statement4806 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_LCURL_in_switch_statement4811 = new BitSet(new long[]{0x0000000000000000L,0x2200400000000000L});
    public static final BitSet FOLLOW_switch_section_in_switch_statement4816 = new BitSet(new long[]{0x0000000000000000L,0x2200400000000000L});
    public static final BitSet FOLLOW_RCURL_in_switch_statement4822 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_CASE_in_switch_section4840 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_switch_section4842 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_KW_DEFAULT_in_switch_section4852 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_COLON_in_switch_section4861 = new BitSet(new long[]{0xFFCDFE04800026A2L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_statement_in_switch_section4865 = new BitSet(new long[]{0xFFCDFE04800026A2L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_KW_BREAK_in_switch_section4871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_WHILE_in_while_statement4883 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_LPAREN_in_while_statement4886 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_while_statement4888 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_while_statement4890 = new BitSet(new long[]{0xFFCDFE04800026A0L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_embedded_statement_in_while_statement4892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_DO_in_do_statement4902 = new BitSet(new long[]{0xFFCDFE04800026A0L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_embedded_statement_in_do_statement4904 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_KW_WHILE_in_do_statement4906 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_LPAREN_in_do_statement4908 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_do_statement4910 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_do_statement4912 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_SEMICOLON_in_do_statement4915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_FOR_in_for_statement4928 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_LPAREN_in_for_statement4931 = new BitSet(new long[]{0xFFCDFE04800026A0L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_SEMICOLON_in_for_statement4940 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_for_initializer_in_for_statement4947 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_for_statement4955 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_SEMICOLON_in_for_statement4961 = new BitSet(new long[]{0xFFCDFE04800066A0L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_for_iterator_in_for_statement4967 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_for_statement4973 = new BitSet(new long[]{0xFFCDFE04800026A0L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_embedded_statement_in_for_statement4978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declarations_in_for_initializer4988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_expression_in_for_initializer5000 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_for_initializer5006 = new BitSet(new long[]{0xFFCDFE04800026A0L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_statement_expression_in_for_initializer5008 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_SEMICOLON_in_for_initializer5015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_expression_in_for_iterator5030 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_COMMA_in_for_iterator5035 = new BitSet(new long[]{0xFFCDFE04800026A0L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_statement_expression_in_for_iterator5037 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_expression_in_statement_expression5049 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_FOREACH_in_foreach_statement5061 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_LPAREN_in_foreach_statement5064 = new BitSet(new long[]{0x0001E80000000600L,0x000000020001FFB1L});
    public static final BitSet FOLLOW_type_in_foreach_statement5071 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_KW_VAR_in_foreach_statement5077 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_foreach_statement5083 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_KW_IN_in_foreach_statement5087 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_foreach_statement5090 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_foreach_statement5094 = new BitSet(new long[]{0xFFCDFE04800026A0L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_embedded_statement_in_foreach_statement5098 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_BREAK_in_break_statement5108 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_SEMICOLON_in_break_statement5111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_CONTINUE_in_continue_statement5121 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_SEMICOLON_in_continue_statement5124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_RETURN_in_return_statement5134 = new BitSet(new long[]{0xFFCDFE04800026A0L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_return_statement5138 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_SEMICOLON_in_return_statement5144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_YIELD_in_yield_statement5154 = new BitSet(new long[]{0xFFCDFE04800026A0L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_statement_in_yield_statement5158 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_KW_RETURN_in_yield_statement5162 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_yield_statement5164 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_SEMICOLON_in_yield_statement5170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_THROW_in_throw_statement5180 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_throw_statement5182 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_SEMICOLON_in_throw_statement5184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_TRY_in_try_statement5196 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_block_in_try_statement5200 = new BitSet(new long[]{0x0000000000000002L,0x0000000006000000L});
    public static final BitSet FOLLOW_catch_clause_in_try_statement5205 = new BitSet(new long[]{0x0000000000000002L,0x0000000006000000L});
    public static final BitSet FOLLOW_finally_clause_in_try_statement5211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_CATCH_in_catch_clause5223 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_LPAREN_in_catch_clause5227 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_catch_clause5229 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_catch_clause5231 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_catch_clause5233 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_block_in_catch_clause5237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_FINALLY_in_finally_clause5249 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_block_in_finally_clause5253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_LOCK_in_lock_statement5263 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_LPAREN_in_lock_statement5266 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_lock_statement5268 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_RPAREN_in_lock_statement5270 = new BitSet(new long[]{0xFFCDFE04800026A0L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_embedded_statement_in_lock_statement5272 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_DELETE_in_delete_statement5282 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_delete_statement5284 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_SEMICOLON_in_delete_statement5286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_VAR_in_local_variable_declarations5300 = new BitSet(new long[]{0xFC01EE0080002420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_type_in_local_variable_declarations5304 = new BitSet(new long[]{0xFC01EE0080002420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_local_variable_declaration_in_local_variable_declarations5310 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_COMMA_in_local_variable_declarations5315 = new BitSet(new long[]{0xFC01EE0080002420L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_local_variable_declaration_in_local_variable_declarations5317 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_SEMICOLON_in_local_variable_declarations5323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_tuple_declaration_in_local_variable_declaration5336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_in_local_variable_declaration5342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_local_tuple_declaration5354 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_local_tuple_declaration5357 = new BitSet(new long[]{0x0000000000004040L});
    public static final BitSet FOLLOW_COMMA_in_local_tuple_declaration5362 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_IDENTIFIER_in_local_tuple_declaration5364 = new BitSet(new long[]{0x0000000000004040L});
    public static final BitSet FOLLOW_RPAREN_in_local_tuple_declaration5370 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_local_tuple_declaration5375 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_local_tuple_declaration5379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_local_variable5391 = new BitSet(new long[]{0x0000000000008802L});
    public static final BitSet FOLLOW_inline_array_type_in_local_variable5396 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_ASSIGNMENT_in_local_variable5403 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_local_variable5405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_expression_in_expression_statement5419 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_SEMICOLON_in_expression_statement5421 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_unknown_chain5433 = new BitSet(new long[]{0xFC01EE00800004A0L,0x0000001FFFFFFFFFL});
    public static final BitSet FOLLOW_SEMICOLON_in_unknown_chain5438 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_declaration_in_synpred8_Vala209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_declaration_in_synpred9_Vala215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_declaration_in_synpred10_Vala221 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_declaration_in_synpred11_Vala227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_errordomain_declaration_in_synpred12_Vala233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_declaration_in_synpred13_Vala239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delegate_declaration_in_synpred14_Vala245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_declaration_in_synpred15_Vala251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignment_operator_in_synpred21_Vala358 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_synpred21_Vala360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_IN_in_synpred36_Vala519 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_inclusive_or_expression_in_synpred36_Vala521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_IS_in_synpred46_Vala671 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_synpred46_Vala673 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_AS_in_synpred47_Vala688 = new BitSet(new long[]{0x0001E80000000600L,0x000000000001FFB1L});
    public static final BitSet FOLLOW_type_in_synpred47_Vala690 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_arguments_in_synpred54_Vala768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUESTION_in_synpred56_Vala784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_array_type_in_synpred57_Vala792 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUESTION_in_synpred59_Vala826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unary_operator_in_synpred67_Vala976 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_unary_expression_in_synpred67_Vala978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_literal_in_synpred80_Vala1115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_object_or_array_creation_expression_in_synpred86_Vala1151 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_yield_expression_in_synpred87_Vala1157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_sizeof_expression_in_synpred88_Vala1163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeof_expression_in_synpred89_Vala1169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_element_access_in_synpred93_Vala1203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_arguments_in_synpred96_Vala1237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_arguments_in_synpred150_Vala1593 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_REF_in_synpred164_Vala1840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_OUT_in_synpred165_Vala1846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_object_creation_expression_in_synpred168_Vala1954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_synpred172_Vala2062 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_RBRACKET_in_synpred172_Vala2068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_synpred174_Vala2080 = new BitSet(new long[]{0xFFCDFE0480003620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_array_size_in_synpred174_Vala2087 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_RBRACKET_in_synpred174_Vala2094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_arguments_in_synpred178_Vala2162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_access_in_synpred179_Vala2169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_arguments_in_synpred185_Vala2313 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_synpred189_Vala2389 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_declaration_in_synpred216_Vala2685 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_declaration_in_synpred217_Vala2691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_declaration_in_synpred218_Vala2697 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delegate_declaration_in_synpred219_Vala2703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_declaration_in_synpred220_Vala2709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_signal_declaration_in_synpred221_Vala2715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_field_declaration_in_synpred222_Vala2721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_declaration_in_synpred223_Vala2727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_declaration_in_synpred224_Vala2733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_declaration_in_synpred225_Vala2739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_creation_method_declaration_in_synpred226_Vala2745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_destructor_declaration_in_synpred227_Vala2750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_synpred240_Vala2875 = new BitSet(new long[]{0xFC81EE0080000E20L,0x0180001FFFFFFFFFL});
    public static final BitSet FOLLOW_method_declaration_in_synpred240_Vala2886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_declaration_in_synpred240_Vala2894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unknown_chain_in_synpred240_Vala2902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMMA_in_synpred241_Vala2934 = new BitSet(new long[]{0xFC81EE0080000E20L,0x0180001FFFFFFFFFL});
    public static final BitSet FOLLOW_enum_value_in_synpred241_Vala2936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_declaration_in_synpred261_Vala3187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_declaration_in_synpred262_Vala3192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_declaration_in_synpred263_Vala3198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delegate_declaration_in_synpred264_Vala3204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_declaration_in_synpred265_Vala3210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_signal_declaration_in_synpred266_Vala3216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_field_declaration_in_synpred267_Vala3222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_declaration_in_synpred268_Vala3228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_declaration_in_synpred276_Vala3378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_field_declaration_in_synpred277_Vala3385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_declaration_in_synpred278_Vala3392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_declaration_in_synpred279_Vala3399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_creation_method_declaration_in_synpred280_Vala3405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_OWNED_in_synpred294_Vala3623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_UNOWNED_in_synpred295_Vala3629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_modifier_in_synpred342_Vala4253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_get_accessor_in_synpred345_Vala4273 = new BitSet(new long[]{0x0C00000000000000L,0x000000000001E000L});
    public static final BitSet FOLLOW_property_set_construct_accessor_in_synpred345_Vala4275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_set_construct_accessor_in_synpred346_Vala4283 = new BitSet(new long[]{0x1000000000000000L,0x000000000001E000L});
    public static final BitSet FOLLOW_property_get_accessor_in_synpred346_Vala4285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_set_construct_accessor_in_synpred347_Vala4293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_synpred364_Vala4521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_foreach_statement_in_synpred371_Vala4561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_break_statement_in_synpred372_Vala4567 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continue_statement_in_synpred373_Vala4573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_return_statement_in_synpred374_Vala4579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_yield_statement_in_synpred375_Vala4585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_throw_statement_in_synpred376_Vala4591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_try_statement_in_synpred377_Vala4597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lock_statement_in_synpred378_Vala4603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delete_statement_in_synpred379_Vala4609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declarations_in_synpred380_Vala4615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_ELSE_in_synpred381_Vala4656 = new BitSet(new long[]{0xFFCDFE04800026A0L,0xD406BFDFFFFFFFFFL,0x0000000000000001L});
    public static final BitSet FOLLOW_embedded_statement_in_synpred381_Vala4660 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_synpred382_Vala4676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_foreach_statement_in_synpred389_Vala4729 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_break_statement_in_synpred390_Vala4735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continue_statement_in_synpred391_Vala4741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_return_statement_in_synpred392_Vala4747 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_yield_statement_in_synpred393_Vala4753 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_throw_statement_in_synpred394_Vala4759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_try_statement_in_synpred395_Vala4765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lock_statement_in_synpred396_Vala4771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delete_statement_in_synpred397_Vala4777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declarations_in_synpred405_Vala4988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_statement_in_synpred410_Vala5158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_KW_RETURN_in_synpred411_Vala5162 = new BitSet(new long[]{0xFFCDFE0480002620L,0x0006BFDFFFFFFFFFL});
    public static final BitSet FOLLOW_expression_in_synpred411_Vala5164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catch_clause_in_synpred412_Vala5205 = new BitSet(new long[]{0x0000000000000002L});

}